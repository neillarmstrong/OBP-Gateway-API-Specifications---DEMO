openapi: 3.0.0
info:
  title: OBP REST to REST Interface
  description: This is the Swagger UI environment generated for OBP REST to REST APIs
  version: 2.1.0

servers:
  - url: https://obp-apigw.cluster.product-obp.internal
    description: It is a generic apigw ingress endpoint. It requires modification to align with client specifications and the target environment.


paths:
  /api/v1/calculateTax:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      tags:
        - Tax API
      operationId: calculateTax
      description: This API will calculate tax for the amount or for the list of options provided
      requestBody:
        description: Request body structure for calculateTax
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CalculateTaxRequestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CalculateTaxResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCalculateTax'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'


  /api/v1/applyPayment:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      tags:
        - Payment API
      operationId: applyPayment
      description: This API will deduct the charge from the payment gateway and credit its subscriber balance
      requestBody:
        description: Request body structure for applyPayment
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ApplyPaymentRequestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ApplyPaymentResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApplyPayment'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/resourceReserve:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      tags:
        - Resource Reserve API
      operationId: getResourceReserve
      description: This API will provide the the reservation information for the Resources either by ReservationId or ResourceType & ResourceValue
      parameters:
        - name: ReservationId
          in: query
          required: false
          schema:
            type: string
          description: Identifier for the reservation received back in create resource reservation API
        - $ref: '#/components/parameters/ResourceType'
        - $ref: '#/components/parameters/ResourceId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GetResourceReserveResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceReserve'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
              example:
                message: Authentication is required and has failed.
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

    patch:
      tags:
        - Resource Reserve API
      operationId: updateResourceReserve
      description: This API will update the reservation done on the Resources
      parameters:
        - name: ReservationId
          in: query
          required: true
          schema:
            type: string
          description: Identifier for the reservation received back in create resource reservation API
      requestBody:
        description: Request body structure for UpdateResourceReserve
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/UpdateResourceReserveRequestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UpdateResourceReserveResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceReserve'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
              example:
                message: Authentication is required and has failed.
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/cardPackage:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      tags:
        - Card Package API
      operationId: listCardPackage
      description: This API returns a list of Card Packages
      parameters:
        - name: technology
          in: query
          required: true
          schema:
            type: integer
          description: Card Package Technology
        - name: limit
          in: query
          required: true
          schema:
            type: integer
          description: Maximum entries returned.
        - name: groupName
          in: query
          required: false
          schema:
            type: string
          description: Card Package Group Name
        - name: packageType
          in: query
          required: false
          schema:
            type: integer
          description: Card Package Type
        - name: state
          in: query
          required: false
          schema:
            type: integer
          description: State of the SIM package
        - name: avoidCollision
          in: query
          required: false
          schema:
            type: boolean
          description: If true returns result from random selection to avoid the same result to multiple requests
        - name: reservationProfile
          in: query
          required: false
          schema:
            type: string
          description:   Provided when the listed Card package needs to be reserved.
        - name: pagekey
          in: query
          required: false
          schema:
            type: string
          description: Result page counter. This is a token that can be passed back to return any remaining result.
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ListCardPackageResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCardPackage'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
              example:
                message: Authentication is required and has failed.
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

    post:
      tags:
        - Card Package API
      operationId: createCardPackage
      description: Use this API to create a Card Package
      requestBody:
        description: Request body structure for CreateCardPackage.
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CreateCardPackageRequestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CreateCardPackageResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCardPackage'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
              example:
                message: Authentication is required and has failed.
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
  
  /api/v1/creditCardRefund:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      tags:
        - Credit Card Refund Query API
      operationId: listCreditCardRefund
      description: This API returns a list of credit card refund items
      parameters:
        - name: spid
          description: Service Provider Identifier
          in: query
          schema:
            type: integer
          required: true
        - name: msisdn
          in: query
          required: false
          schema:
            type: string
          description: msisdn of the subscriber. Either msisdn and subscription type or ban should be provided
        - name: subscriptionType
          in: query
          required: false
          schema:
            type: integer
          description: Subscription Type of the subscriber. Either msisdn and subscription type or ban should be provided
        - name: ban
          in: query
          required: false
          schema:
            type: string
          description: Account number to search for credit card refund. Either msisdn and subscription type or ban should be provided
        - name: status
          in: query
          required: false
          description: Credit card refund status to search for
          schema:
            $ref: '#/components/schemas/CreditCardRefundStatus'
        - name: beginDate
          in: query
          required: false
          schema:
            type: string
          description: Begin date to search credit card refund item created. Date as string with the following format yyyy-MM-dd'T'hh:mm
        - name: endDate
          in: query
          required: false
          schema:
            type: string
          description: End date to search credit card refund item created. Date as string with the following format yyyy-MM-dd'T'hh:mm
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ListCreditCardRefundResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCreditCardRefund'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
              example:
                message: Authentication is required and has failed.
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/pricePlanChangeValidation:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      tags:
        - Price Plan Change Validation API
      operationId: pricePlanChangeValidation
      description: This API is designed to estimate a cost of changing Price Plan for subscription. The API supports Price Plan switching and conversion (when current and target Price Plan differ in Billing Type Prepaid/Postpaid)
      requestBody:
        description: Request body structure for pricePlanChangeValidation
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PricePlanChangeValidationRequestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PricePlanChangeValidationResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPricePlanChangeValidation'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/getSubscriptionPayableAmount:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      tags:
        - Subscription Payable Amount API
      operationId: getSubscriptionPayableAmount
      description: This API is designed to estimate payable amounts for certain Postpaid subscriptions which must be in a not Deactivated state. In case of any error, an error message will be returned
      requestBody:
        description: Request body structure for getSubscriptionPayableAmount
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/GetSubscriptionPayableAmountRequestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GetSubscriptionPayableAmountResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSubscriptionPayableAmount'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/grr:
    post:
      tags:
        - ESB GRR API
      operationId: grr
      description: 'This API can be used for sending requests to the ESB /grr endpoint'
      requestBody:
        description: Request body structure for requests to the ESB /grr endpoint
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/GrrRequestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GrrResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/onDemandPrepaidStatement:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      tags:
        - Generate Prepaid Statement On Demand API
      operationId: onDemandPrepaidStatement
      description: 'This API can be used to generate a PDF statement on demand'
      parameters:
        - name: accountIdentifier
          in: query
          required: true
          schema:
            type: string
          description: The BAN of the Account for which you want to generate the statement for.
        - name: prevBillDate
          in: query
          required: true
          schema:
            type: string
          description:   The start date that the report will cover. Note that the prevBillDate must be before the billDate.
        - name: billDate
          in: query
          required: true
          schema:
            type: string
          description: The end date that the report will cover. Note that the end date must be after the prevBillDate.
        - name: subscriptionTypeSelection.1
          in: query
          required: false
          schema:
            type: string
          description: Always set to the value 'on' when you want to generate the statement with the Airtime Subscription. If this parameter is not passed then the statement will not show details of the Airtime Subscription.
        - name: subscriptionTypeSelection.2
          in: query
          required: false
          schema:
            type: string
          description: If set to 'on', Mobile Wallet subscription information is included in the statement, else it is not included
        - name: subscriptionTypeSelection.3
          in: query
          required: false
          schema:
            type: string
          description: If set to 'on', Network Wallet subscription information is included in the statement, else it is not included
        - name: subscriptionTypeSelection.1.e
          in: query
          required: false
          schema:
            type: string
          description: Always set to the character 'y'
        - name: subscriptionTypeSelection.2.e
          in: query
          required: false
          schema:
            type: string
          description: Always set to the character 'y'
        - name: subscriptionTypeSelection.3.e
          in: query
          required: false
          schema:
            type: string
          description: Always set to the character 'y'
      responses:
        '200':
          description: Success
          content:
            application/pdf:
              schema:
                type: string
                format: binary
              example:
                'Response is returned as a PDF file'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/receipt/view:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      tags:
        - View Receipt API
      operationId: receipt
      description: 'This API can be used to view receipt'
      parameters:
        - name: receiptNumber
          in: query
          required: true
          schema:
            type: string
          description: The receipt number for which you want to view the receipt for.
      responses:
        '200':
          description: Success
          content:
            application/pdf:
              schema:
                type: string
                format: binary
              example:
                'Response is returned as a PDF file'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/balanceTransfer:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      tags:
        - Balance Transfer API
      operationId: balanceTransfer
      description: This API can be used to transfer a balance between accounts
      requestBody:
        description: Request body structure for balanceTransfer
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/BalanceTransferRequestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/BalanceTransferResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBalanceTransfer'

  /api/v1/bundleBalanceTransfer:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      tags:
        - Bundle Balance Transfer API
      operationId: bundleBalanceTransfer
      description: A dedicated API to perform transfer operation of non-monetary units from bucket of donor Sub with MSISDN to recipient Sub with MSISDN
      requestBody:
        description: Request body structure for bundleBalanceTransfer
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/BundleBalanceTransferRequestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/BundleBalanceTransferResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBundleBalanceTransfer'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBundleBalanceTransfer'

  /api/v1/bundleBalanceTransferList:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      tags:
        - Bundle Balance Transfer API
      operationId: bundleBalanceTransferList
      description: A dedicated API which validates Sub with MSISDN and returns a list of bucket info for items with BundleProfile.isGiftAllowed=true
      requestBody:
        description: Request body structure for BundleBalanceTransferList
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/BundleBalanceTransferListRequestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/BundleBalanceTransferListResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBundleBalanceTransferList'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/customerRequest:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      tags:
        - Customer Request API
      operationId: createCustomerRequest
      description: This API is used to create a customer request that will enable a set of actions determined by the request profile.
      requestBody:
        description: Request body structure for createCustomerRequest
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CreateCustomerRequestRequestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CreateCustomerRequestResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCreateCustomerRequest'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
    patch:
      tags:
        - Customer Request API
      parameters:
        - name: CustRequestId
          description: Identifier of the customer request to be updated.
          required: true
          in: query
          schema:
            type: integer
      operationId: updateCustomerRequest
      description: This API will update the set of actions created by cancelling the actions scheduled to be executed and/or scheduling additional action(s) as per request profile received in request.
      requestBody:
        description: Request body structure for updateCustomerRequest
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/UpdateCustomerRequestRequestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UpdateCustomerRequestResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUpdateCustomerRequest'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/customerServiceAgreement:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      tags:
        - Customer Service Agreement API
      operationId: storeCustomerServiceAgreement
      description: This API will generate a Customer’s Service Agreement (CSA) PDF document in relation to an active subscription and store the same. In case of any error, the error code and error message will be returned
      requestBody:
        description: Request body structure for storeCustomerServiceAgreement
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CustomerServiceAgreementRequestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/StoreCustomerServiceAgreementResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
    get:
      tags:
        - Customer Service Agreement API
      operationId: viewCustomerServiceAgreement
      description: This API will generate a Customer’s Service Agreement (CSA) PDF document in relation to an active subscription and return the same as stream. In case of any error, the error code and error message will be returned
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema:
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/CustomerServiceAgreementRequestBody'
      responses:
        '200':
          description: Success
          content:
            application/pdf:
              schema:
                type: string
                format: binary
              example:
                'Response is returned as a PDF file'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/customerAttachments:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      tags:
        - Customer Attachment API
      operationId: listCustomerAttachment
      description: This API will list all the attachments that are associated with the customer
      parameters:
      - name: ban
        description: Billing Account Number of the Customer.
        required: true
        in: query
        schema:
          type: integer
      - name: category
        description: If you choose to include 'category' the value set should be 'CSA'.
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ListCustomerAttachmentResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/customerAttachment:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      tags:
        - Customer Attachment API
      operationId: getCustomerAttachment
      description: This API is used to retrieve attachments stored in BSS using AttachmentKey, if a valid key is sent then the PDF document will be returned as stream, AttachmentKey can either be stored by client during Store CSA operation or can be obtained using List Attachment interface
      parameters:
      - name: attachmentKey
        description: Key of Attachment that is requested.
        required: true
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/pdf:
              schema:
                type: string
                format: binary
              example:
                'Response is returned as a PDF file.'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/attachment:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      tags:
        - Attachment API
      operationId: sendAttachment
      description: This API is used to send attachment details to customers the attachment belongs to. Attachment Link can be sent over SMS or Email and specified by channel parameter. In the case of E-Mail, optionally document can be sent as an attachment. Only a single document can be sent.
      parameters:
      - name: attachmentKey
        description: Key of Attachment that is to be sent
        required: true
        in: query
        schema:
          type: string
      - name: channel
        required: true
        in: query
        schema:
          enum: [SMS, EMAIL, BOTH]
          type: string
        description: >
            Attachment Link can be sent over SMS or Email and is specified by channel parameter.
            `SMS` - Send as SMS only
            `EMAIL` - Send as Email only
            `BOTH` - Send as both SMS and Email
      - name: doAttach
        in: query
        schema:
          enum: [Y, N]
          type: boolean
        description: >
            Can be set to Y or N when ChannelType=EMAIL or ChannelType=BOTH.
            `Y` - Yes
            `N` - No
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
              example:
                'No response parameters returned. Only HTTP 200 OK response code is returned on success.'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/portOrder:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      tags:
        - Port Order API
      operationId: createPortOrder
      description: This API allows creating order related to number portability
      requestBody:
        description: Request body structure for createPortOrder
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CreatePortOrderBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CreatePortOrderResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

    get:
      tags:
        - Port Order API
      operationId: listPortOrder
      description: This API allows listing orders related to number portability
      parameters:
        - name: msisdn
          description: Mobile Number.
          in: query
          schema:
            type: string
          required: false
        - name: orderId
          description: Identifies Order in system.
          in: query
          schema:
            type: string
          required: false
        - name: portId
          description: ID given by standard Porting system.
          in: query
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ListPortOrderResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceReserve'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
              example:
                message: Authentication is required and has failed.
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/portOrder/{orderId}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      tags:
        - Port Order API
      operationId: getPortOrder
      description: This API allows querying specific order detail related to number portability
      parameters:
        - name: orderId
          description: Identifier of the port order
          required: true
          schema:
            type: integer
          in: path
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GetPortOrderResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceReserve'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
              example:
                message: Authentication is required and has failed.
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/portOrder/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    put:
      tags:
        - Port Order API
      operationId: UpdateOrder
      description: This API allows updating number portability order
      parameters:
        - name: id
          description: Identifier of the Order
          required: true
          schema:
            type: integer
          in: path
      requestBody:
        description: Request body structure for UpdateOrder
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/UpdateOrderRequestBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UpdateOrderResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/extendedPromotions:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      tags:
        - Promotions API
      operationId: listExtendedPromotions
      description: This API fetches a list of promotions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ListExtendedPromotionsResponseBody'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
              example:
                message: Authentication is required and has failed.
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/accountInvoice/view:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      tags:
        - Account Invoice API
      operationId: appCRMInvoiceViewerMenu
      description: 'This API returns an account invoice. The response is a streamed PDF. If there is no 
preexisting invoice for the referenced account and invoice date, an invoice may be 
generated for the given date as a “ghost” preview of that invoice, including all current 
up-to-date information for that account. Generation of such a preview is subject to 
permissions granted to the calling user within Redknee’s CRM application. “Ghost” 
previews are not commited invoices, but only temporary views of what future invoices 
will contain. If there is no preexisting invoice and generation of a “ghost” preview is 
disallowed, then the HTTP response is an HTML page showing an error.'
      parameters:
        - name: .accountIdentifier
          in: query
          required: true
          schema:
            type: string
          description: Billing Account Number (BAN). Corresponds to InvoiceReference.accountId.
        - name: .billingDate
          in: query
          required: true
          schema:
            type: string
          description: Invoice billing date. Corresponds to InvoiceReference.invoiceDate. Format is "MMM dd,yyyy"
        - name: NoteMessage
          in: query
          required: false
          schema:
            type: string
          description:  simple message that, if provided, will be added to the account's for "Events/Invoice control" type notes.
        - name: returnChargeableInvoice
          in: query
          required: false
          schema:
            enum: [y, n]
            type: string
          description: > 
            If specified, indicates whether or not to return the chargeable invoice rather than the standard invoice. The default is “n”.
             - `y` - Cargeable invoice
             - `n` - Standard invoice

      responses:
        '200':
          description: Success
          content:
            application/pdf:
              schema:
                type: string
                format: binary
              example:
                'Response is returned as a PDF file'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/subscriber:
    get:
      tags:
        - Subscriber API
      summary: Get subscriber by IMSI
      description: Retrieve subscriber information using the IMSI
      operationId: getSubscriber
      parameters:
        - name: imsi
          in: query
          required: true
          schema:
            type: string
          description: The IMSI of the subscriber
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubscriberResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
              example:
                message: Authentication is required and has failed.
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
  /api/v1/secondaryResource:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      tags:
        - MultiSim Management API
      operationId: getSecondaryResource
      description: MultiSim API to get secondary resource
      parameters:
        - name: msisdn
          in: query
          required: false
          schema:
            type: string
          description: Mobile number of subscriber
        - name: subscriberId
          in: query
          required: false
          schema:
            type: string
          description: Unique identifier for the subscriber
        - name: subscriptionType
          in: query
          required: false
          schema:
            type: integer
          description: Type of subscription
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MultiSimResource'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
              example:
                message: Authentication is required and has failed.
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
  /api/v1/listAccounts:
    get:
      tags:
        - Account Management API
      summary: List accounts
      description: Retrieve a list of accounts based on various filter criteria
      operationId: listAccounts
      parameters:
        - in: query
          name: fullName
          required: false
          schema:
            type: string
          description: Full name of the account holder
        - in: query
          name: banList
          required: false
          schema:
            type: array
            items:
              type: string
          description: List of account numbers (BANs)
        - in: query
          name: spidList
          required: false
          schema:
            type: array
            items:
              type: integer
          description: List of service provider IDs
        - in: query
          name: accountTypeList
          schema:
            type: array
            items:
              type: integer
              format: int64
          description: List of account types
        - in: query
          name: groupTypeList
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int16
          description: List of group types
        - in: query
          name: stateList
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int16
          description: List of account states
        - in: query
          name: parentBanList
          required: false
          schema:
            type: array
            items:
              type: string
          description: List of parent account numbers
        - in: query
          name: billingTypeList
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int16
          description: List of billing types
        - in: query
          name: billCycleIdList
          required: false
          schema:
            type: array
            items:
              type: integer
          description: List of bill cycle IDs
        - in: query
          name: responsibleList
          required: false
          schema:
            type: array
            items:
              type: string
          description: List of responsible flags
        - in: query
          name: inCollectionDateStart
          required: false
          schema:
            type: string
          description: Start date for in-collection filter
        - in: query
          name: inCollectionDateEnd
          required: false
          schema:
            type: string
          description: End date for in-collection filter
        - in: query
          name: lastModifiedStart
          required: false
          schema:
            type: string
          description: Start date for last modified filter
        - in: query
          name: lastModifiedEnd
          required: false
          schema:
            type: string
          description: End date for last modified filter
        - in: query
          name: creditCategoryList
          required: false
          schema:
            type: array
            items:
              type: integer
          description: List of credit categories
        - in: query
          name: accountNameList
          required: false
          schema:
            type: array
            items:
              type: string
          description: List of account names
        - in: query
          name: pageKey
          required: false
          schema:
            type: string
          description: Page key for pagination
        - in: query
          name: limit
          required: false
          schema:
            type: integer
          description: Number of results to return per page
        - in: query
          name: isAscending
          required: false
          schema:
            type: boolean
          description: Sort order (ascending or descending)
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
              example:
                message: Authentication is required and has failed.
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
  /api/v1/subscribers:
    get:
      tags:
        - Subscriber API
      summary: List subscribers
      description: Retrieve a list of accounts based on various filter criteria
      operationId: listSubscibers
      parameters:
        - in: query
          name: idList
          required: false
          schema:
            type: string
          description: List of subscriber IDs
        - in: query
          name: stateList
          required: false
          schema:
            type: string
          description: List of states
        - in: query
          name: banList
          required: false
          schema:
            type: array
            items:
              type: string
          description: List of account numbers (BANs)
        - in: query
          name: spidList
          required: false
          schema:
            type: array
            items:
              type: integer
          description: List of service provider IDs
        - in: query
          name: msisdnList
          required: false
          schema:
            type: array
            items:
              type: string
          description: List of MSISDNs (Mobile Numebrs)
        - in: query
          name: packageIdList
          required: false
          schema:
            type: array
            items:
              type: string
          description: List of Package IDs (SIM Card Numebrs)
        - in: query
          name: imsiList
          required: false
          schema:
            type: array
            items:
              type: string
          description: List of IMSI Nubers
        - in: query
          name: limit
          required: false
          schema:
            type: integer
          description: Number of results to return per page
        - in: query
          name: offset
          required: false
          schema:
            type: integer
          description: Offset of records on page page
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubscriberResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
              example:
                message: Authentication is required and has failed.
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
  
  /api/v1/oneTimePromoCode/set/{setId}/distribute:
    post:
      tags:
        - Promotions API
      operationId: Get Single Use Promo
      summary: This method takes a setId as input and based on that Id, it provides the OTPC which is not used until now. Once a promocode has been given, it is marked distributed in the system.
      description: This API provides a set of one time promotion codes which are unused, and also marks it as distributed.
      parameters:
        - name: setId
          description: Identifier of the code set
          required: true
          schema: 
            type: integer
          in: path
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GetSingleUsePromoResponseBody'
        '404':
          description: Set not found. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 404
                errCode: OTPCDSTR404
                message: Please provide a valid set.
                reason: Set code does not exist.
        '410':
          description: Set is exhausted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 410
                errCode: OTPCDSTR410
                message: 
                reason: Set is exhausted.
        '503':
          description: One Time Promotion Code service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 503
                errCode: OTPCDSTR503
                message: Please notify a system administrator
                reason: Store is not available.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 500
                errCode: OTPCDSTR500
                message: Please notify a system administrator
                reason: Internal server error
    

  /api/v1/oneTimePromoCode/reservation:
    put:
      operationId: otpc reservation verification
      summary: This method is useful for verifying and updating a reservation for a previously reserved one time promotion code
      description: This method validates/updates applied one time promotion code for given subscriber key and promotion rule id
      tags:
        - Promotions API
      parameters:
        - name: subscriberKey
          description: Subscriber Identifier (email or subscriber id)
          required: true
          schema:
            type: string
          in: query
        - name: promotionId
          description: Promotion rule identifier
          required: true
          schema:
            type: string
          in: query
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 201
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 204
        '404':
          description: One Time Promotion Code not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 404
                errCode: OTPCRSRV404
                message: Please provide a valid promo code
                reason: Promo code does not exist
        '503':
          description: One Time Promotion Code service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 503
                errCode: OTPCRSRV503
                message: Please notify a system administrator
                reason: Store is not available
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 500
                errCode: OTPCRSRV500
                message: Please notify a system administrator
                reason: Internal server error
    delete:
      operationId: otpc reservation cancellation
      summary: This method is useful for the cancellation (release) of a previously reserved one time promotion code
      description: This method releases previously reserved one time promotion code for given subscriber key with promotion rule id
      tags:
        - Promotions API
      parameters:
        - name: subscriberKey
          description: Subscriber Identifier (email or subscriber id)
          required: true
          schema:
            type: string
          in: query
        - name: promotionId
          description: Promotion rule identifier
          required: true
          schema:
            type: string
          in: query
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 201
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 204
        '404':
          description: One Time Promotion Code not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 404
                errCode: OTPCRLSE404
                message: Please provide a valid promo code
                reason: Promo code does not exist
        '503':
          description: One Time Promotion Code service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 503
                errCode: OTPCRLSE503
                message: Please notify a system administrator
                reason: Store is not available
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 500
                errCode: OTPCRLSE500
                message: Please notify a system administrator
                reason: Internal server error

  /api/v1/imei:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      tags:
        - Imei Blocking API
      operationId: linkedImei
      description: 'This API can be used to get a list of Imeis'
      parameters:
        - name: adapter
          in: query
          required: true
          schema:
            type: string
          description: Adapter name
        - name: operation
          in: query
          required: true
          schema:
            type: string
          description: Operation name
        - name: msisdn
          in: query
          required: true
          schema:
            type: string
          description: Mobile numbers
        - name: request
          in: query
          required: true
          schema:
            type: string
          description: Adapter name
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GetLinkedImeiResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/oneTimePromoCode/code/{otpc}/reservation:
    put:
      operationId: otpc reservation
      summary: This method tries to reserve a one time promotion code given within the path {otpc} and return the operation result
      description: This method can be used for reservation of given one time promotion code for subscriber and promotion rule provided with the request body. Please see the response codes for details
      tags:
        - Promotions API
      parameters:
        - name: otpc
          description: One Time Promotion Code
          required: true
          schema:
            type: string
          in: path
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ReserveOTPCRequestBody'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 201
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 204
        '404':
          description: One Time Promotion Code not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 404
                errCode: OTPCRSRV404
                message: Please provide a valid promo code
                reason: Promo code does not exist
        '409':
          description: One Time Promotion Code conflict for reservation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 409
                errCode: OTPCRSRV409
                message: Please provide a valid promo code
                reason: Promo code is already used
        '503':
          description: One Time Promotion Code service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 503
                errCode: OTPCRSRV503
                message: Please notify a system administrator
                reason: Store is not available
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 500
                errCode: OTPCRSRV500
                message: Please notify a system administrator
                reason: Internal server error
    delete:
      operationId: otpc reservation cancellation by id
      summary: This method is useful for the cancellation (release) of a previously reserved one time promotion code
      description: This method releases a previously reserved one time promotion code for given subscriber key with promotion rule id
      tags:
        - Promotions API
      parameters:
        - name: otpc
          description: One Time Promotion Code
          required: true
          schema:
            type: string
          in: path
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 201
        '204':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 204
        '404':
          description: One Time Promotion Code not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 404
                errCode: OTPCRLSE404
                message: Please provide a valid promo code
                reason: Promo code does not exist
        '503':
          description: One Time Promotion Code service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 503
                errCode: OTPCRLSE503
                message: Please notify a system administrator
                reason: Store is not available
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericOTPCResponse'
              example:
                code: 500
                errCode: OTPCRLSE500
                message: Please notify a system administrator
                reason: Internal server error
  /api/v1/account/{accountId}/subAccounts:
    get:
      tags:
        - Accounts API
      summary: Get subAccounts by account id
      description: Retrieve subAccount information using the account id
      operationId: listSubAccounts
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: integer
          description: The ID of the parent account.
        - in: query
          name: recurse
          required: false
          schema:
            type: boolean
          description: if true method will recursively retrieve child of child accounts
        - in: query
          name: responsible
          required: false
          schema:
            type: boolean
          description: if true return only accounts for which parent is responsible
        - in: query
          name: pageKey
          required: false
          schema:
            type: string
          description: Page key to retrieve the next set of sub-accounts.
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            default: 5
          description: Number of sub-accounts to return per page.
        - in: query
          name: isAscending
          required: false
          schema:
            type: boolean
            default: true
          description: Whether to return sub-accounts in ascending order.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubAccountsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
              example:
                message: Authentication is required and has failed.
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /api/v1/email/notification:
    post:
      tags:
        - Email Notification API
      summary: Send email to provided email address
      description: Send email to user 
      operationId: emailNotification
      requestBody:
        description: Request body structure for send email
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SendEmailRequestBody'
      parameters:
      - $ref: '#/components/parameters/spid'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized (token expired, tempered)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
              example:
                message: Authentication is required and has failed.
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error405'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'


security:
  - oAuth2:
    - obp-apigw:read
    - obp-apigw:write

components:
  securitySchemes:
    oAuth2:
      type: oauth2
      description: See http://developers.gettyimages.com/api/docs/v3/oauth2.html
      flows:
        clientCredentials:
          tokenUrl: protocol/openid-connect/token
          scopes:
            obp-apigw:read: Read access
            obp-apigw:write: Write access
        authorizationCode:
          authorizationUrl: protocol/openid-connect/auth
          tokenUrl: protocol/openid-connect/token
          scopes:
            obp-apigw:read: Read access
            obp-apigw:write: Write access

  parameters:
    spid:
      in: header
      name: spid
      description: Service Provider Identifier
      schema:
        type: integer
      required: true

    tenant:
      in: header
      name: tenant
      description: Name of the tenant
      schema:
        type: string
      required: true

    isAscending:
      in: query
      name: isAscending
      description: Returns result in ascending order
      schema:
        type: string
    
    limit:
      in: query
      name: limit
      description: Maximum entries returned.
      schema:
        type: integer
    
    ResourceType:
      in: query
      name: ResourceType
      description: Type of Resource provided in Request
      schema:
        type: string
    
    ResourceId:
      in: query
      name: ResourceId
      description: Identifier of Resource. Needs to be provided along with ResourceType
      schema:
        type: string

  schemas:
    SubscriptionReff:
      type: object
      properties:
        mobileNumber:
          type: string
          description: The mobile number for the Subscription. A combination of mobileNumber and subscriptionType will be required or subIdentifier
        subscriptionType:
          type: integer
          description: The type of Subscription being referenced. A combination of mobileNumber and subscriptionType will be required or subIdentifier
        subIdentifier:
          type: string
          description: A unique identifier for the Subscription. A combination of mobileNumber and subscriptionType will be required or subIdentifier
        parametersList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    SubscriptionAddr:
      type: object
      description: Subscriber Address
      properties:
        address:
          type: string
          description: Address of subscriber excluding City, state and zip
        city:
          type: string
          description: Subscriber address city
        state:
          type: string
          description: Subscriber address state
        zip:
          type: string
          description: Subscriber address zip code
        geoCode:
          type: string
          description: Geographic Code - Value that defines subscriber location
        parametersList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    OfferData:
      type: object
      description: Offer data
      required: [ SubscriberPlanId ]
      properties:
        SubscriberPlanId:
          type: integer
          description: Identifier of subscriber plan
        OfferItemsList:
          type: array
          description: A list of items in the Plan
          items:
            $ref: '#/components/schemas/ItemData'
        parametersList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    ItemData:
      type: object
      description: Item data
      required: [ optionType, identifier ]
      properties:
        identifier:
          type: integer
          description: Item identifier under the plan
        optionType:
          $ref: '#/components/schemas/OptionType'
        parametersList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    TaxItem:
      type: object
      description: Tax item
      required: [ categoryId, taxName, optionId, optionType, taxRate, taxAmount, composite ]
      properties:
        categoryId:
          type: integer
          description: Category identifier
        taxName:
          type: string
          description: The name for the tax item
        optionId:
          type: integer
          description: Option Identifier - Option for which tax is calculated
        optionType:
          $ref: '#/components/schemas/OptionType'
        categoryName:
          type: string
          description: Category Name - A name for the Tax Category provided from External System or internal tax name/description
        taxRate:
          type: number
          description: A rate of taxation applied
        taxAmount:
          type: number
          description: The total amount of taxation
        composite:
          type: boolean
          description: Indicates if Item is of composite type
        ParametersList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    Token:
      type: object
      description: Information associated with a Token value, which refers to a card used for payment processing
      properties:
        tokenID:
          type: string
          description: An ID value for the token
        accountID:
          type: string
          description: Identifies the account for which to create a Token
        tokenValue:
          type: string
          description: The value of the token refers to a card used for payment processing
        ParametersList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    ResourceInfo:
      type: object
      description: Resource info
      properties:
        reservationId:
          type: string
          description: ID of the reservation done on the resource
        resourceType:
          $ref: '#/components/schemas/ResourceType'
        resourceValue:
          type: string
          description: Id of resource
        reservationTill:
          type: string
          description: Date time till reservation is applicable on the resource. Format is YYYY-MM-DDTHH:mm:ss:sssZ
        contactDetail:
          $ref: '#/components/schemas/ContactDetail'
        ban:
          type: string
          description: Billing Account Number Resource is Reserved against
        pricingType:
          $ref: '#/components/schemas/PricingType'
        ParameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
    
    ResourceType:
      type: integer
      enum: [0]
      description: >
        The ResourceType is one of the following values:
         - `0` - MSISDN

    PricingType:
      type: integer
      enum: [0, 1]
      description: >
        The PricingType is either of the following values:
         - `0` - Regular
         - `1` - Premium

    ContactDetail:
      type: object
      required: [ language ]
      description: Contact Number associated to reservation
      properties:
        contactNumber:
          type: string
          description: Mobile number
        contactEmail:
          type: string
          description: Email Id for Email
        language:
          type: string
          description: Preferred language

    ResponseHolder:
      type: object
      description: Response
      required: [ resultCode ]
      properties:
        resultCode:
          type: string
          description: Result Code of execution
        resultMessage:
          type: string
          description: Execution result message

    TaxQueryType:
      type: integer
      enum: [0, 1, 2, 3, 4, 5]
      description: >
        The TaxQueryType is one of the following values:
         - `0` - QUOTE_FOR_AMOUNT
         - `1` - QUOTE_FOR_OPTION
         - `2` - QUOTE_FOR_AMOUNT_OPTION
         - `3` - TAX_INVOICE_FOR_AMOUNT
         - `4` - TAX_INVOICE_FOR_OPTION
         - `5` - TAX_INVOICE_AMOUNT_OPTION

    OptionType:
      type: integer
      enum: [0, 1, 2, 3, 4, 5, 6]
      description: >
        The OptionType is one of the following values:
         - `0` - SERVICE
         - `1` - PACKAGE
         - `2` - BUNDLE
         - `3` - AUXILIARY_SERVICE
         - `4` - AUXILIARY_BUNDLE
         - `5` - Reserved
         - `6` - Reserved

    Parameter:
      type: object
      required: [ id, value ]
      properties:
        id:
          type: string
          description: ID of Parameter
        value:
          type: string
          description: Value of Parameter

    ReservationDuration:
      type: object
      description: Reservation duration
      properties:
        durationType:
          $ref: '#/components/schemas/DurationType'
        durationValue:
          type: integer
          description: Duration in context of durationType that the reservation will be done for

    DurationType:
      type: integer
      enum: [0, 1, 2]
      description: >
        The DurationType is one of the following values:
         - `0` - Minute
         - `1` - Hour
         - `2` - Day

    ResourceList:
      type: object
      description: Resource list
      properties:
        resourceType:
          $ref: '#/components/schemas/ResourceType'
        resourceValue:
          type: string
          description: Id of the resource of provided resourceType
        pricingType:
          $ref: '#/components/schemas/PricingType'
        ParameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    GetSubscriberResponse:
      type: object
      properties:
        subscriberReference:
          $ref: '#/components/schemas/SubscriberReferenceResponse'
        resultCode:
          type: integer
          description: Result Code of execution
        resultMessage:
          type: string
          description: Execution result message

    SubscriberReferenceResponse:
      type: object
      properties:
        rating:
          $ref: '#/components/schemas/SubscriberRatingResponse'
        billing:
          $ref: '#/components/schemas/SubscriberBillingResponse'
        status:
          $ref: '#/components/schemas/SubscriberStatusResponse'
        profile:
          $ref: '#/components/schemas/SubscriberProfileResponse'
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    SubscriberRatingResponse:
      type: object
      description: Subscriber Rating Response
      properties:
        primaryPricePlanID:
          type: integer
          description: Priceplan ID. Mandatory for postpaid. For prepaid it is optional since this value can come from the SCT (Subscription Creation Template.)
        secondaryPricePlanID:
          type: integer
          description: Secondary Priceplan ID.
        secondaryPricePlanStart:
          type: string
          description: Secondary Priceplan start date.
        secondaryPricePlanEnd:
          type: string
          description: Secondary Priceplan end date.
        pricePlanVersion:
          type: integer
          description: Priceplan version ID.
        enabledOptionalServices:
          type: array
          description: List of enabled optional Service IDs.
          items:
            type: integer
            format: int64
        enabledOptionalPackages:
          type: array
          description: List of enabled optional Package IDs.
          items:
            type: integer
            format: int64
        enabledOptionalBundles:
          type: array
          description: List of enabled optional Bundle IDs.
          items:
            type: integer
            format: int64
        enabledAuxiliaryBundles:
          type: array
          description: List of enabled optional Auxiliary Bundle IDs.
          items:
            type: integer
            format: int64
        enabledAuxiliaryServices:
          type: array
          description: List of enabled optional Auxiliary Service IDs.
          items:
            type: integer
            format: int64
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    SubscriberBillingResponse:
      type: object
      description: Subscriber Billing Response
      properties:
        billingLanguage:
          type: string
          description: Billing/IVR Language.
        billingOption:
          type: integer
          description: Billing Option. Postpaid only.
        discountClass:
          type: integer
          description: Discount Class. Postpaid only.
        maximumBalance:
          type: integer
          description: Maximum Balance. (not supported, future release)
        maximumRecharge:
          type: integer
          description: Maximum Recharge. (not supported, future release)
        reactivationFee:
          type: integer
          description: Reactivation Fee. Prepaid only.
        category:
          type: integer
          description: Subscription Category.
        chargeToPostpaid:
          type: boolean
          description: Enable Postpaid Support charging? Prepaid only.
        postpaidSupport:
          type: string
          description: Postpaid support Mobile Number. Prepaid only.
        initialBalance:
          type: integer
          description: Initial balance. Prepaid only.
        creditLimit:
          type: integer
          description: Credit Limit. Postpaid only.
        deposit:
          type: integer
          description: Deposit amount. Postpaid only.
        depositDate:
          type: string
          description: Last date a deposit was made or released.
        nextDepositReleaseDate:
          type: string
          description: Next deposit release date for auto-deposit releases.
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    SubscriberStatusResponse:
      type: object
      properties:
        state:
          type: integer
          description: Subscription state. When used with 'createSubscription' and 'createIndividualSubscriber' the state can only be 'Available' or 'Active'.
        startDate:
          type: string
          description: Subscription activation date.
        endDate:
          type: string
          description: Subscription deactivation date.
        expiryDate:
          type: string
          description: Subscription expiry date. Prepaid only.
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    SubscriberProfileResponse:
      type: object
      description: Subscriber Profile Response
      properties:
        poolLimitStrategy:
          type: integer
          description: Pool limit strategy. Only for 'group pooled' account types.
        poolLimit:
          type: integer
          description: Pool limit value. Only for 'group pooled' account types with poolLimitStrategy = 2.
        identifier:
          type: string
          description: Subscription ID. If explicit subscription ID creation is enabled, this value is required.
        accountID:
          type: string
          description: Account ID.
        spid:
          type: integer
          description: Service Provider ID.
        paidType:
          type: integer
          description: Subscription's paid type.
        subscriptionClass:
          type: integer
          description: The class of subscription, which determines other properties of the subscription at the time of creation.
        subscriptionType:
          type: integer
          description: The subscription type (e.g., airtime).
        mobileNumber:
          type: string
          description: Subscription's mobile number.
        cardPackageID:
          type: string
          description: Subscription's card package.
        IMSI:
          type: string
          description: Subscriber's IMSI, required for GSM only.
        technologyType:
          type: integer
          description: Subscription's technology type.
        hlrID:
          type: integer
          description: HLR ID.
        notificationPreference:
          type: integer
          description: Indicates the type of notification (e.g., SMS, e-mail) that is preferred for this subscription. If not explicitly provided as input during creation, then a value of DEFAULT will be assumed.
        created:
          type: string
          description: Date created.
        lastModified:
          type: string
          description: Date last modified.
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    MultiSimResource:
      type: object
      description: MultiSim Resource
      properties:
        chargePerSim:
          type: boolean
          description: Charge per SIM
        charge:
          type: integer
          description: Charge Amount
        auxServiceId:
          type: integer
          description: Auxiliary Service Identifier
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ResourceList'

    GrrNestedObject:
      type: object
      required: [ name ]
      properties:
        name:
          type: string
          description: Name
        part:
          type: array
          description: List of 'part' objects
          items:
            $ref: '#/components/schemas/GrrPart'
        value:
          type: string
          description: Value
        valueType:
          type: string
          description: Value type

    GrrPart:
      type: object
      required: [ name ]
      properties:
        name:
          type: string
          description: Name
        part:
          type: array
          description: List of 'part' objects
          items:
            $ref: '#/components/schemas/GrrNameValuePair'
        value:
          type: string
          description: Value
        valueType:
          type: string
          description: Value type
    
    GrrNameValuePair:
      type: object
      required: [ name ]
      properties:
        name:
          type: string
          description: Name
        part:
          type: array
          description: List of 'part' objects
          items:
            $ref: '#/components/schemas/GrrNameValuePair'
        value:
          type: string
          description: Value
        valueType:
          type: string
          description: Value type
    
    GrrResponseStatus:
      type: object
      description: Describes the status of the response at the time this response message was created
      properties:
        message:
          type: string
          description: Describes the state of the response at the time the response was created
          enum:
            - 'pending'
            - 'complete'
            - 'error'
            - 'invalid'
    
    OrderData:
      type: object
      description: Order data
      required:
      - orderTypeInfo
      - orderSubTypeInfo
      - spidInfo
      - numberToPort
      properties:
        channelInfo:
          type: string
          description: Channel from where order is placed
        orderTypeInfo:
          $ref: '#/components/schemas/OrderType'
        orderSubTypeInfo:
          $ref: '#/components/schemas/OrderSubType'
        spidInfo:
          type: integer
          description: Service Provider Identifier info
        numberToPort:
          type: string
          description: Number for which the order is for
        simPackage:
          type: string
          description: SIM Package identifier associated with subscriber. Mandatory for OrderType Port-In
        contactNumberAlternate:
          type: string
          description: Second contact number of customers. Mandatory for OrderType Port-In
        donorNetworkId:
          type: string
          description: Identifier of Donor Network in Port-In Order. Mandatory for OrderType Port-In
        recipientNetworkId:
          type: string
          description: Identifier of Recipient Network in Port-Out Order.
        resourceDeviceInfo:
          type: string
          description: Information about Resource Device
        billingTypeInfo:
          $ref: '#/components/schemas/BillingType'
        dealerCode:
          type: string
          description: Identifier of Dealer that has created port order
        supplementaryList:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: ID of parameter
              value:
                type: string
                description: Value of parameter
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        externalOrderId:
          type: string
          description: Order Identifier on the external system creating order. Mandatory when orderType=Port-Out or Snap-Back
    
    OrderType:
      type: string
      enum: [Port-In, Port-Out, Snap-Back]
      description: >
        Identifies type of order:
         - `Port-In` - Order for Port-In
         - `Port-Out` - Order for Port-Out
         - `Snap-Back` - Order for Snap-Back

    OrderSubType:
      type: string
      enum: [External-Customer-Port-In, Returning-Customer, External-Customer-Port-Out, Operator-Customer, Return-To-Network, Return-From-Network]
      description: >
        Identifies the sub type of order:
         - `External-Customer-Port-In` - Port-In other operator customer
         - `Returning-Customer` - Port-In of past customer of same operator
         - `External-Customer-Port-Out` - Port-Out of customer to operator different than origin
         - `Operator-Customer` - Port-Out of customer to origin operator
         - `Return-To-Network` - Snap-Back MSISDN return to network
         - `Return-From-Network` - Snap-Back MSISDN return from network

    OrderState:
      type: integer
      enum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
      description: >
        Identifies the order state:
         - `0` - DRAFT
         - `1` - SUBMITTED
         - `2` - APPROVAL_PENDING
         - `3` - IN_PROGRESS
         - `4` - CANCEL_REQUESTED
         - `5` - CANCEL_APPROVAL_PENDING
         - `6` - CANCEL_IN_PROGRESS
         - `7` - CANCEL_FAILED
         - `8` - CANCEL_SUCCESS
         - `9` - FAILED
         - `10` - CANCELED
         - `11` - REJECTED
         - `12` - ABORTED
         - `13` - DISCARDED
         - `14` - COMPLETED
    
    OrderAccountData:
      type: object
      description: Order account data
      required:
      - ban
      - identificationsDataList
      properties:
        ban:
          type: string
          description: Billing account number for the customer port activity is performed
        firstName:
          type: string
          description: First name of customer
        lastName:
          type: string
          description: Last name of customer
        contactEmail:
          type: string
          description: Contact email of customer
        csaDocumentId:
          type: string
          description: Customer contract document identifier
        identificationsDataList:
          type: array
          items:
            type: object
            required:
            - typeOfIdentification
            - identificationId
            properties:
              typeOfIdentification:
                type: integer
                description: Type of Identification
              identificationId:
                type: string
                description: Identification number
              parameterList:
                type: array
                items:
                  $ref: '#/components/schemas/Parameter'
    
    OrderSubscriptionData:
      type: object
      description: Order subscription data
      properties:
        billingOptionType:
          $ref: '#/components/schemas/BillingType'
        deposit:
          type: integer
          description: Deposit of postpaid subscriptions
        creditLimit:
          type: integer
          description: Credit limit of postpaid subscribers
        monthlySpendLimit:
          type: integer
          description: Monthly Spend Limit of postpaid subscriptions. Cannot be greater than Credit Limit value
        initialBalance:
          type: integer
          description: Initial Balance for Prepaid subscribers
        maxBalanceAmount:
          type: integer
          description: Max Balance Amount for Prepaid subscribers
        maxRechargeAmount:
          type: integer
          description: Max recharge Amount Max Balance Amount for Prepaid subscribers
        supplementaryList:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: ID
              value:
                type: string
                description: Value
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
    
    OrderOfferData:
      type: object
      description: Order offer data
      properties:
        subscriberPlanId:
          type: string
          description: Price Plan of Subscriber
        subscriptionContract:
          $ref: '#/components/schemas/subscriptionContract'
        offerItemsList:
          type: array
          items:
            type: object
            required:
            - identifier
            - optionType
            - fee
            properties:
              identifier:
                type: integer
                description: Item Identifier under the Plan
              name:
                type: string
                description: Name of Item under the Plan
              isSelected:
                type: boolean
                description: Indicates if the item is an active part of the list
              optionType:
                $ref: '#/components/schemas/OptionType'
              optionState:
                $ref: '#/components/schemas/OptionState'
              provisioningState:
                $ref: '#/components/schemas/ProvisioningState'
              startDate:
                type: string
                description: Start date of item for subscriber
              endDate:
                type: string
                description: End date of item for subscriber
              numberOfPayments:
                type: string
                description: Number Of payments
              recurrence:
                type: object
                required:
                - recurenceType
                properties:
                  recurenceType:
                    $ref: '#/components/schemas/OptionType'
                  startDate:
                    type: string
                    description: Start date for recurrence
                  endDate:
                    type: string
                    description: End date for recurrence
                  period:
                    type: integer
                    description: Recurrence Period
                  periodUnitType:
                    $ref: '#/components/schemas/RecurringType'
              adjustmentTypeID:
                type: integer
                description: Id for charge categorization
              fee:
                type: integer
                description: Charge associated with item addition
              prorationEnabled:
                type: boolean
                description: If proration of charge is enabled on item removal
              parameterList:
                type: array
                items:
                  $ref: '#/components/schemas/Parameter'
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    OptionState:
      type: integer
      enum: [0, 1, 2]
      description: >
        The OptionState is one of the following values:
         - `0` - ACTIVE
         - `1` - DEPRECATED
         - `2` - CLOSED
    
    ProvisioningState:
      type: integer
      enum: [0, 1, 2, 3, 4, 5, 6, 7, 8]
      description: >
        The ProvisioningState is one of the following values:
         - `0` - NOT_PROVISIONED
         - `1` - PROVISIONED
         - `2` - PROVISIONED_WITH_ERRORS
         - `3` - SUSPENDED
         - `4` - SUSPENDED_WITH_ERRORS
         - `5` - UNPROVISIONED_WITH_ERRORS
         - `6` - UNPROVISIONED
         - `7` - SUSPENDED_CLTC
         - `8` - SUSPENDED_CLTC_WITH_ERRORS

    RecurringType:
      type: integer
      enum: [0, 1]
      description: >
        The RecurringType is one of the following values:
         - `0` - RECURRING
         - `1` - ONE_TIME
    
    CreatePortOrderBody:
      type: object
      required:
      - orderData
      properties:
        orderData:
          $ref: '#/components/schemas/OrderData'
        accountData:
          $ref: '#/components/schemas/OrderAccountData'
        subscriptionData:
          $ref: '#/components/schemas/OrderSubscriptionData'
        offerData:
          $ref: '#/components/schemas/OrderOfferData'
        orderExtData:
          type: object
          required:
          - createdByUser
          properties:
            submissionDate:
              type: string
              description: Order submission date
            createdByUser:
              type: string
              description: Order created by user
            lastUpdateByUser:
              type: string
              description: User last updated order.
            parameterList:
              type: array
              items:
                $ref: '#/components/schemas/Parameter'
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      example:
        orderData:
          channelInfo: 'AppCRM'
          orderTypeInfo: 'Port-In'
          orderSubTypeInfo: 'External-Customer'
          spidInfo: 1
          numberToPort: '247993348579'
          simPackage: '1675160092963'
          contactNumberAlternate: '8100001047'
          donorNetworkId: '2'
          resourceDeviceInfo: 'iphone'
          billingTypeInfo: 1
          dealerCode: 'DL1'
          supplementaryList:
            - id: 'TEMP_MSISDN'
              value: '149409126767'
            - id: 'DONOR_BAN'
              value: '23534'
            - id: 'PORTIN_DATE'
              value: '2023-09-27T08:00:12Z'
          parameterList: []
        accountData:
          ban: '1112'
          firstName: 'ABC'
          lastName: 'lastname'
          contactEmail: 'kjm.rao@redknee.com'
          identificationsDataList:
            - typeOfIdentification: 1
              identificationId: '11728'
              parameterList: []
          parameterList: []
        subscriptionData:
          billingOptionType: 1
          deposit: 10000
          creditLimit: 10000
          monthlySpendLimit: 5000
          initialBalance: 10000
          maxBalanceAmount: 10000
          maxRechargeAmount: 10000
          supplementaryList:
            - id: 'HANDSET_REFF'
              value: 'Electronic'
            - id: 'TEMP_MSISDN'
              value: '1400004728'
            - id: 'DONOR_SUBTYP_PREPAID'
              value: 'true'
          parameterList: []
        offerData:
          subscriberPlanId: 100001
          subscriptionContract:
            contractId: 0
            startDate: '2000-01-01T01:01:01.001Z'
            endDate: '2050-01-01T01:01:01.001Z'
          offerItemsList:
            - identifier: 2
              isSelected: true
              optionType: 0
              provisioningState: 1
              fee: 100
              parameterList: []
          parameterList: []
        orderExtData:
          submissionDate: '2000-01-01T01:01:01.001Z'
          createdByUser: 'testUser'
          lastUpdatedByUser: 'testUser'
          parameterList: []
        parameterList: []

    CreatePortOrderResponseBody:
      type: object
      properties:
        orderNumber:
          type: integer
          description: Order identifier if creation of order is a success
        resultMessage:
          type: string
          description: Additional information if request fails
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      example:
        orderNumber: '4'
        resultMessage: 'Success'

    CalculateTaxRequestBody:
      type: object
      required: [ spid,queryType ]
      properties:
        correlationId:
          type: string
          description: Correlation Identifier - This is sent by client side for correlationId and is used when the case query type is Quote and mobileNumber or subIdentifier is not available
        spid:
          type: integer
          description: Service Provider Identifier
        queryType:
          $ref: '#/components/schemas/TaxQueryType'
        subscriptionReff:
          $ref: '#/components/schemas/SubscriptionReff'
        subscriberAddr:
          $ref: '#/components/schemas/SubscriptionAddr'
        amount:
          type: integer
          description: The amount on which tax needs to be calculated
        offerData:
          $ref: '#/components/schemas/OfferData'
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      example:
        correlationId: '12345'
        spid: 1
        queryType: 3
        amount: 15000
        subscriptionRef:
          subscriptionType: 10001
          subIdentifier: '10245-1'

    CalculateTaxResponseBody:
      type: object
      required: [ responseCode,taxItemList ]
      properties:
        responseCode:
          $ref: '#/components/schemas/SubscriberPaymentResponseCode'
        optionsHash:
          type: string
          description: A hash value of the option for which tax is calculated. This value has to be sent back in the next API like ApplyPayment
        taxQueryId:
          type: integer
          description: An identifier for the tax query received. Not Returned case of Internal tax support. This value has to be sent back in the next API like ApplyPayment
        taxItemList:
          type: array
          items:
            $ref: '#/components/schemas/TaxItem'
        errorMessage:
          type: string
          description: A text string providing more information on error. Error encountered for request submission
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      example:
        optionsHash: 'vyhRtY98BB/8vMwM9ZbCnA=='
        taxQueryId: 163
        taxItemList: [
          {
            categoryId: 1,
            taxName: 'Sales Tax',
            optionId: 15000,
            optionType: 5,
            categoryName: 'SALES AND USE TAXES',
            taxRate: 0.036,
            taxAmount: 663,
            composite: false
          },
          {
            categoryId: 6,
            taxName: 'FCC Regulatory Fee (VoIP)',
            optionId: 15000,
            optionType: 5,
            categoryName: 'REGULATORY CHARGES',
            taxRate: 0.054,
            taxAmount: 53,
            composite: false
          }
        ]
        responseCode: 0

    ApplyPaymentRequestBody:
      type: object
      required: [ spid, subscriptionReff, optionHash, token, amount, taxAmount ]
      properties:
        spid:
          type: integer
          description: Service Provider Identifier
        subscriptionReff:
          $ref: '#/components/schemas/SubscriptionReff'
        optionHash:
          type: string
          description: A hash value of the optionList sent in request
        taxQueryId:
          type: integer
          description: Tax Query Identifier - An identifier for the tax query received
        token:
          $ref: '#/components/schemas/Token'
        amount:
          type: number
          description: Amount in lower denomination of currency. The amount should match with the amount sent in the calculateTax
        taxAmount:
          type: number
          description: The tax amount in lower denomination of currency
        creditToBalance:
          type: boolean
          description: If true, the amount debit from credit card will be credited to the subscriber balance excluding tax. If false, the amount debit from the card will not be used for balance credit.
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      example:
        spid: 1
        subscriptionRef:
          subscriptionType: 10001
          subIdentifier: '10245-1'
        optionHash: 'vyhRtY98BB/8vMwM9ZbCnA=='
        taxQueryId: 163
        token:
          tokenId: 0
          accountId: '12045'
          tokenValue: 'pm_1NT2kZHHM5OiVyXh3IZdKoOH'
        amount: 15000
        taxAmount: 1197
        creditToBalance: true

    ApplyPaymentResponseBody:
      type: object
      required: [ responseCode ]
      properties:
        responseCode:
          $ref: '#/components/schemas/SubscriberPaymentResponseCode'
        transactionId:
          type: integer
          description: ID to track transactions done in the billing system. Returned only in case of success response code
        billingSystemResult:
          $ref: '#/components/schemas/ResponseHolder'
        chargingGatewayResult:
          $ref: '#/components/schemas/ResponseHolder'
        paymentGatewayResult:
          $ref: '#/components/schemas/ResponseHolder'
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      example:
        responseCode: 0
        transactionId: 16210
        billingSystemResult:
          resultCode: 0
          resultMessage: 'Successful running in billing system'
        chargingGatewayResult:
          resultCode: 0
          resultMessage: 'Success'
        paymentGatewayResult:
          resultCode: 0
          resultMessage: 'Successful running in payment system'

    SubscriberPaymentResponseCode:
      type: integer
      enum: [0, 1, 2, 3]
      description: >
        The responseCode is one of the following values:
         - `0` - Success
         - `1` - Validation Failed
         - `2` - Internal Error
         - `3` - External system Error

    ResourceResponseCode:
      type: integer
      enum: [0, 1, 2, 3]
      description: >
        The responseCode is one of the following values:
         - `0` - Success
         - `1` - Bad Resource Requested
         - `2` - Bad Reservation Id
         - `3` - Internal Error

    GetResourceReserveResponseBody:
      type: object
      required: [ responseCode, resourceInfoList ]
      properties:
        responseCode:
          $ref: '#/components/schemas/ResourceResponseCode'
        resourceInfoList:
          type: array
          items:
            $ref: '#/components/schemas/ResourceInfo'
        errorMessage:
          type: string
          description: String providing more information on errors
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      example:
        responseCode: 0
        resourceInfoList: [
          {
            reservationId: 100010,
            resourceType: 0,
            resourceValue: 169297071134,
            reservationTill: '2023-10-30T14:43:25.936+0000',
            contactDetail: {
              contactNumber: '10002000',
              contactEmail: 'contactEmail@email.com',
              language: 'en'
            },
            ban: '122',
            pricingType: 1
          }
        ]

    UpdateResourceReserveRequestBody:
      type: object
      required: [ spid, updateType ]
      properties:
        spid:
          type: integer
          description: Service Provider Identifier
        updateType:
          $ref: '#/components/schemas/ResourceUpdateType'
        ban:
          type: string
          description: Billing Account Number. Provided if resource in reservation needs to be bound to a specific Account.
        contactDetail:
          $ref: '#/components/schemas/ContactDetail'
        reservationDuration:
          $ref: '#/components/schemas/ReservationDuration'
        resourceList:
          type: array
          items:
            $ref: '#/components/schemas/ResourceList'
      example:
        spid: 1
        updateType: 1
        ban: '123'
        contactDetail:
          contactNumber: '123456789'
          contactEmail: '123@email.com'
          language: 'en'
        reservationDuration:
          durationType: 1
          durationValue: 7
        resourceList:
          - resourceType: 1
            resourceValue: '123456789'

    UpdateResourceReserveResponseBody:
      type: object
      required: [ responseCode ]
      properties:
        responseCode:
          $ref: '#/components/schemas/ResourceResponseCode'
        errorMessage:
          type: string
          description: String providing more information on errors
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    ResourceUpdateType:
      type: integer
      enum: [0, 1, 2, 3]
      description: >
        The ResourceUpdateType is either of the following values:
         - `0` - Cancel Reservation for the Reservation Id sent
         - `1` - Update Reserve Duration to new Reserve Duration provided
         - `2` - Update Contact provided
         - `3` - Update BAN that is provided

    ListCardPackageResponseBody:
      type: object
      required: [ responseCode,cardPackageQueryResult ]
      properties:
        responseCode:
          type: integer
          description: Status of the request acceptance by system
        cardPackageQueryResult:
          $ref: '#/components/schemas/cardPackageQueryResult'
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      example:
        cardPackageQueryResult:
          pageKey: '021197787401'
          cardPackageReferenceList:
            - identifier: '000329554570'
              spid: 1
              packageGroupID: GSM Pkg
              packageType: 0
              technology: 0
            - identifier: '007576904730'
              spid: 1
              packageGroupID: GSM Pkg
              packageType: 0
              technology: 0
        responseCode: 0

    cardPackageQueryResult:
      type: object
      required: [ cardPackageReferenceList ]
      properties:
        pageKey:
          type: string
          description: ID of resource group resource belongs to
        cardPackageReferenceList:
          type: array
          items:
            $ref: '#/components/schemas/cardPackageReference'
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    cardPackageReference:
      type: object
      description: Card package reference
      required: [ identifier, spid, packageGroupID, technology ]
      properties:
        identifier:
          type: string
          description: Unique Card Package identifier. Can typically be same as IMSI or MIN
        spid:
          type: integer
          description: Service Provider Identifier
        packageGroupID:
          type: string
          description: Card Package Group identifier
        packageType:
          type: integer
          description: Type of Package for the Card
        technology:
          $ref: '#/components/schemas/TechnologyType'
        state:
          $ref: '#/components/schemas/CardPackageState'
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    CreateCardPackageRequestBody:
      type: object
      required: [ cardPackage ]
      properties:
        cardPackage:
          $ref: '#/components/schemas/CardPackage'
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      example:
        cardPackage:
          identifier: '123456789'
          packageGroupID: 'Test_Automation'
          spid: 1
          state: 1
          technology: 0
          dealer: '1'
          imsi: '123456789'

    CardPackage:
      type: object
      description: Card package
      required: [ identifier, spid, packageGroupID, technology, dealer ]
      properties:
        identifier:
          type: string
          description: Unique Card Package identifier. Can typically be the same as IMSI or MIN
        spid:
          type: integer
          description: Service Provider Identifier
        packageGroupID:
          type: string
          description: Card Package Group identifier
        packageType:
          type: integer
          description: Type of Package for the Card
        technology:
          $ref: '#/components/schemas/TechnologyType'
        state:
          $ref: '#/components/schemas/CardPackageState'
        dealer:
          type: string
          description: Dealer Code
        serialNumber:
          type: string
          description: Card Package Serial Number
        lastModified:
          type: string
          description: Last modified date (read-only).Format is YYYY-MM-DDThh:mm
        imsi:
          type: string
          description: Required for GSM only.
        min:
          type: string
          description: Required for CDMA/TDMA only.
        esn:
          type: string
          description: Optional for only TDMA.
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    CreateCardPackageResponseBody:
      type: object
      required: [ responseCode,cardPackageReference ]
      properties:
        cardPackageReference:
          $ref: '#/components/schemas/cardPackageReference'
        responseCode:
          type: integer
          description: Status of the request acceptance by system
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      example:
        cardPackageReference:
          pageKey: '021197787401'
          cardPackageReference:
            identifier: '000329554570'
            spid: 1
            packageGroupID: GSM Pkg
            packageType: 0
            technology: 0
        responseCode: 0

    TechnologyType:
      type: integer
      enum: [0, 1, 2]
      description: >
        The TechnologyType is either of the following values:
         - `0` - GSM
         - `1` - TDMA
         - `2` - CDMA

    CardPackageState:
      type: integer
      enum: [1, 2, 3]
      description: >
        The CardPackageState is either of the following values:
         - `1` - AVALIABLE
         - `2` - IN_USE
         - `3` - HELD

    CreditCardRefundStatus:
      type: string
      enum: [Pending, Tax Calculated, Processed, Failed]
      description: >
        Can be one of the following values:
         - `Pending` - Pending
         - `Tax Calculated` - Tax Calculated
         - `Processed` - Processed
         - `Failed` - Failed

    ListCreditCardRefundResponseBody:
      type: object
      required: [ responseCode,creditCardRefundList ]
      properties:
        responseCode:
          $ref: '#/components/schemas/ResourceResponseCode'
        creditCardRefundList:
          $ref: '#/components/schemas/creditCardRefundList'
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      example:
        creditCardRefundList:
          - identifier: 10136
            spid: 1
            transactionId: 21732
            extTransactionId: 'pi_3O7xX5HHM5OiVreou'
            refundAmount: -2000
            taxAmount: 703
            taxDocId: 1503
            status: 'Tax Calculated'
            errorCode: 203
            errorDescription: 'Refund amount ($54.06) is greater than charge amount ($54.04)'
            createdDate: 2023-12-08 11:40:50
            ban: '12046'
          - identifier: 10137
            spid: 1
            transactionId: 21732
            extTransactionId: 'pi_3O7xX5HHM5OiVreou'
            refundAmount: -2000
            taxAmount: 703
            taxDocId: 1503
            status: 'Tax Calculated'
            errorCode: 203
            errorDescription: 'Refund amount ($54.06) is greater than charge amount ($54.04)'
            createdDate: 2023-12-08 11:40:50
            ban: '12046'
        responseCode: 0
    
    creditCardRefundList:
      type: object
      required: [ identifier,spid,ban,extTransactionId,status,createdDate ]
      properties:
        identifier:
          type: integer
          description: Identifier of the credit card  refund item
        spid:
          type: integer
          description: Service Provider Identifier
        ban:
          type: string
          description: Account identifier
        transactionId:
          type: integer
          description: Transaction id
        extTransactionId:
          type: string
          description: External transaction identifier
        refundAmount:
          type: integer
          description: Refund Amount
        taxAmount:
          type: integer
          description: Calculated tax amount
        taxDocId:
          type: integer
          description: Tax document id from Avalara
        status:
          type: string
          description: Status of the credit card refund
          enum:
          - pending
          - Tax Calculated
          - Processed
          - Failed
        errorCode:
          type: integer
          description: Error code if the status is failed
        errorDescription:
          type: string
          description: Error description if the status is failed
        createdDate:
          type: string
          description: Credit card refund item creation date formatted as ‘yyyy-MM-dd hh:mm:ss’
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    PricePlanChangeValidationRequestBody:
      type: object
      required: [ msisdn, pricePlanId, considerRefund ]
      properties:
        msisdn:
          type: string
          description: MSISDN of subscription to validate Price Plan changing to
        pricePlanId:
          type: integer
          description: Id of target Price Plan; in case if pricePlanId equals to current subscription’s Price Plan then successful response will be returned
        considerRefund:
          type: boolean
          description: If true, includes in total calculation prorated fees of all refundable entities of current subscription
        considerContract:
          type: boolean
          default: false
          description: If true, includes in total calculation possible refundings/penalties of current subscriber contract in case of its cancellation; applicable only in case of Postpaid->Postpaid/Prepaid
      example:
        msisdn: 168620795499999
        pricePlanId: 10010
        considerRefund: true
    
    PricePlanChangeValidationResponseBody:
      type: object
      required: [ status ]
      properties:
        status:
          $ref: '#/components/schemas/PricePlanChangeValidationStatus'
        needToPay:
          type: integer
          description: Returned with status=0 or status=1 and means amount which is needed to pay to switch/convert to target Price Plan defined by request parameter pricePlanId
        errorMessage:
          type: string
          description: Contains error description; returned only with status=2
          example: Subscriber with given msisdn {0} not found in Active state.
      example:
        status: 0
        needToPay: false

    PricePlanChangeValidationStatus:
      type: integer
      enum: [0, 1, 2]
      description: >
        The status is one of the following values:
         - `0` - validation is successful so needToPay = 0
         - `1` - needPay > 0
         - `2` - an error occured, in this case errorMessage contains error description

    GetSubscriptionPayableAmountRequestBody:
      type: object
      required: [ msisdn ]
      properties:
        msisdn:
          type: string
          description: MSISDN of subscription to estimate payable amount to
      example:
        msisdn: '123456789'

    GetSubscriptionPayableAmountResponseBody:
      type: object
      required: [ status ]
      properties:
        status:
          $ref: '#/components/schemas/GetSubscriptionPayableAmountStatus'
        payableAmount:
          type: integer
          description: >
            Returned with status=0 and means payable amount for certain Postpaid subscription. It is an integer number that can be positive/ negative. PayableAmount includes:
            - Refund for services/aux-service/bundles/aux-bundles
            - Penalty that will be applied for contract termination (if applicable). 
            - Contract refund is also returned (if applicable).
            - Deposit that will be released and converted to payment (if applicable)
        errorMessage:
          type: string
          description: Contains error description; returned only with status=1
          example: 'For given msisdn someMsisdn Postpaid Subscriber Not found or its in Deactivated state!'
      example:
        status: 0
        payableAmount: 12909
    
    GetSubscriptionPayableAmountStatus:
      type: integer
      enum: [0, 1]
      description: >
        The status is one of the following values:
         - `0` - payableAmount is successfully calculated
         - `1` - an error occured, in this case errorMessage contains error description

    GetPortOrderResponseBody:
      type: object
      properties:
        orderGetView:
          $ref: '#/components/schemas/orderGetView'
        offerGetView:
          $ref: '#/components/schemas/offerGetView'
        resultMessage:
          type: string
          description: Additional information if request fails
        parameterList:
          $ref: '#/components/schemas/Parameter'
      example:
        {
          orderGetView: {
          orderNumber: 1,
          orderTypeInfo: 'port-In',
          orderSubTypeInfo: 'External-Customer',
          orderStateInfo: 'SUBMITTED',
          ban: '112',
          numberToPort: '247993348579',
          simPackage: '1675160092963',
          portId: 2,
          externalOrderId: '11',
          dateCreated: '1706783716424',
          dateLastModified: '1706783716424',
          crossedPONR: false,
          contactNumberAlternate: '8100001047',
          donorNetworkId: '-1',
          recipientNetworkId: '-1',
          resourceDeviceInfo: 'iphone',
          billingTypeInfo: 'PREPAID',
          dealerCode: 'DL1',
          cancellationReason: 'TEST',
          cancellationDate: '1706784307075',
          parametersList: [
            {
            ID: 3,
            value: 'test'
          }]
        },
        offerGetView: {
          subscriebrPlanId: 2,
          subscriptionContract: {
            contractId: 1,
            startDate: 'test',
            EndDate: 'test'
          },
          offerItemsList: [
            {
            identifier: 1,
            name: 'test',
            isSelected: true,
            optionType: 'SERVICE',
            optionState: 'ACTIVE',
            provisioningState: 'PROVISIONED',
            startDate: 'test',
            endDate: 'test',
            numberOfPayments: 23,
            recurrence: {
              recurrenceType: 'SERVICE',
              startDate: 'test',
              endDate: 'test',
              period: 12,
              periodUnitType: 'ONE_TIME'
            },
            adjustmentTypeID: 1001,
            fee: 10,
            prorationEnabled: false,
            parametersList: [{
              ID: 2,
              value: 'test'
            }]
          }
          ],
          parametersList: [{
              ID: 2,
              value: 'test'
            }]
        },
        resultMessage: 'Success',
        parameterList: [{
          ID: 2,
          value: 'test'
            }]
        }

    ListPortOrderResponseBody:
      type: object
      properties:
        orderListView:
          $ref: '#/components/schemas/orderListView'
        resultMessage:
          type: string
          description: Additional information if request fails.
        parameterList:
          $ref: '#/components/schemas/Parameter'
      example:
        orderListView: [
          {
            orderNumber: 1,
            orderTypeInfo: 'port-In',
            orderSubTypeInfo: 'External-Customer',
            orderStateInfo: 'SUBMITTED',
            numberToPort: '247993348579',
            portId: '2',
            parametersList: [
              {
                ID: 3,
                value: 'test'
              }
            ],
          resultMessage: 'Success',
          parameterList: [
            {
              ID: 2,
              value: 'test'
            }
          ]
          }
        ]

    orderListView:
      type: array
      items:
        type: object
        required: [ orderNumber,orderTypeInfo,orderSubTypeInfo,orderStateInfo,numberToPort ]
        properties:
          orderNumber:
            type: integer
            description: Identifies Order in system.
          orderTypeInfo:
            $ref: '#/components/schemas/OrderType'
          orderSubTypeInfo:
            $ref: '#/components/schemas/OrderSubType'
          orderStateInfo:
            $ref: '#/components/schemas/OrderState'
          numberToPort:
            type: string
            description: Number for which Porting related activity to be performed under this Order.
          portId:
            type: string
            description: ID given by standard Porting system.
          parametersList:
            $ref: '#/components/schemas/Parameter'

    recurrence:
      type: object
      properties:
        recurrenceType:
          $ref: '#/components/schemas/RecurringType'
        startDate:
          type: string
          description: Start date for recurrence
        endDate:
          type: string
          description: End date for recurrence
        period:
          type: integer
          description: Recurrence Period.
        periodUnitType:
          $ref: '#/components/schemas/PeriodUnitType'
    
    PeriodUnitType:
      type: integer
      enum: [0, 1, 2, 3, 4, 5, 6]
      description: >
        The testEnum is either of the following values:
         - `0` - MONTHLY
         - `1` - ANNUAL
         - `2` - WEEKLY
         - `3` - ONE_TIME
         - `4` - MULTIMONTHLY
         - `5` - DAILY
         - `6` - MULTIDAY

    offerGetView:
      type: object
      description: Offer get view
      required: [ subscriberPlanId ]
      properties:
        subscriberPlanId:
          type: integer
          description: PricePlan of Subscriber.
        subscriptionContract:
          $ref: '#/components/schemas/subscriptionContract'
        offerItemsList:
          $ref: '#/components/schemas/offerItemsList'
        parametersList:
           $ref: '#/components/schemas/Parameter'

    subscriptionContract:
      type: object
      required: [ contractId ]
      description: Information of contract associated with subscriber
      properties:
        contractId:
          type: integer
          description: Contract identifier
        startDate:
          type: string
          description: The date the contract begins on
        EndDate:
          type: string
          description: The date the contract ends on

    offerItemsList:
      type: array
      items:
        type: object
        required: [ identifier,isSelected,optionType,fee ]
        properties:
          identifier:
            type: integer
            description: Item identifier under the plan.
          name:
            type: string
            description: Name of item under the plan.
          isSelected:
            type: boolean
            description: If the item is an active part of the list.
          optionType:
            $ref: '#/components/schemas/OptionType'
          optionState:
            $ref: '#/components/schemas/OptionState'
          provisioningState:
            $ref: '#/components/schemas/ProvisioningState'
          startDate:
            type: string
            description: Start date of item for subscriber
          endDate:
            type: string
            description: End date of item for subscriber
          numberOfPayments:
            type: integer
            description: Number of payments
          recurrence:
            $ref: '#/components/schemas/recurrence'
          adjustmentTypeID:
            type: integer
            description: Id for charge categorization.
          fee:
            type: integer
            description: Charge associated with item addition
          prorationEnabled:
            type: boolean
            description: If proration of charge is enabled on item removal.
          parametersList:
            $ref: '#/components/schemas/Parameter'

    orderGetView:
      type: object
      description: Order get view
      required: [ orderNumber,orderTypeInfo,orderSubTypeInfo,orderStateInfo,numberToPort,dateCreated,dateLastModified,crossedPONR ]
      properties:
        orderNumber:
          type: integer
          description: Identifies Order in system.
        orderTypeInfo:
          $ref: '#/components/schemas/OrderType'
        orderSubTypeInfo:
          $ref: '#/components/schemas/OrderSubType'
        orderStateInfo:
          $ref: '#/components/schemas/OrderState'
        ban:
          type: string
          description: Billing Account Number.
        numberToPort:
          type: string
          description: Number for which Porting related activity to be performed under this Order.
        simPackage:
          type: string
          description: Sim Package identifier associated with subscriber.
        portId:
          type: integer
          description: ID given by standard Porting system.
        externalOrderId:
          type: string
          description: Order Identifier on the external system creating order.
        dateCreated:
          type: string
          description: Date when Order was created in the system.
        dateLastModified:
          type: string
          description: Date When Order was Last modified in the system.
        crossedPONR:
          type: boolean
        contactNumberAlternate:
          type: string
          description: Second contact Number of Customers.
        donorNetworkId:
          type: string
          description: Identifier of Donor Network in Port-In Order.
        recipientNetworkId:
          type: string
          description: Identifier of Recipient Network in port out Order.
        resourceDeviceInfo:
          type: string
          description: Information about Resource Device
        billingTypeInfo:
          type: string
          description: Billing Type of Subscribe in Port-in activity.
        dealerCode:
          type: string
          description: Identifier of Dealer that has created port Order.
        cancellationReason:
          type: string
          description: Reason for cancellation, if Order State is canceled.
        cancellationDate:
          type: string
          description: Cancellation Date, if Order State is canceled.
        parametersList:
          $ref: '#/components/schemas/Parameter'

    GrrRequestBody:
      type: object
      required: [ request ]
      properties:
        request:
          $ref: '#/components/schemas/GrrRequestRoot'
      example:
        request:
          requestID: '1'
          correlationID: '1'
          agentID: '1'
          exchange:
            callbackID: ['1', '2']
          header: [
            {
              name: 'LANGUAGE',
              value: 'ENGL',
              valueType: 'string'
            },
            {
              name: 'PRODUCT',
              part: [
                {
                  name: 'PRODUCT_ID',
                  value: 'FULLSMS',
                  valueType: 'string'
                },
                {
                  name: 'RENEWAL_INFO',
                  part: [
                    {
                        name: 'AUTO_RENEW',
                        value: '0',
                        valueType: 'string'
                    }
                  ]
                },
                {
                  name: 'USAGE_LIMIT',
                  part: [
                    {
                      name: 'THRESHOLD',
                      part: [
                        {
                          name: 'THRESHOLD_TYPE',
                          value: 'Tier4',
                          valueType: 'string'
                        },
                        {
                          name: 'THRESHOLD_VALUE',
                          value: '1024',
                          valueType: 'string'
                        },
                        {
                          name: 'BEHAVIOR',
                          value: 'thr64kbps',
                          valueType: 'string'
                        }
                      ]
                    }
                  ]
                },
                {
                  name: 'EFFECTIVE_START_DATE',
                  value: '2023-01-25T09:56:09-08:00'
                }
              ]
            }
          ]
          parameter: [
            {
              name: 'LANGUAGE',
              value: 'ENGL'
            },
            {
              name: 'PRODUCT',
              part: [
                {
                  name: 'PRODUCT_ID',
                  value: 'FULLSMS',
                  valueType: 'string'
                },
                {
                  name: 'RENEWAL_INFO',
                  part: [
                    {
                        name: 'AUTO_RENEW',
                        value: '0',
                        valueType: 'string'
                    }
                  ]
                },
                {
                  name: 'USAGE_LIMIT',
                  part: [
                    {
                      name: 'THRESHOLD',
                      part: [
                        {
                          name: 'THRESHOLD_TYPE',
                          value: 'Tier4',
                          valueType: 'string'
                        },
                        {
                          name: 'THRESHOLD_VALUE',
                          value: '1024',
                          valueType: 'string'
                        },
                        {
                          name: 'BEHAVIOR',
                          value: 'thr64kbps',
                          valueType: 'string'
                        }
                      ]
                    }
                  ]
                },
                {
                  name: 'EFFECTIVE_START_DATE',
                  value: '2023-01-25T09:56:09-08:00'
                }
              ]
            }
          ]
          additionalData: [
            {
              name: 'LANGUAGE',
              value: 'ENGL',
              valueType: 'string'
            },
            {
              name: 'PRODUCT',
              part: [
                {
                  name: 'PRODUCT_ID',
                  value: 'FULLSMS',
                  valueType: 'string'
                },
                {
                  name: 'RENEWAL_INFO',
                  part: [
                    {
                        name: 'AUTO_RENEW',
                        value: '0',
                        valueType: 'string'
                    }
                  ]
                },
                {
                  name: 'USAGE_LIMIT',
                  part: [
                    {
                      name: 'THRESHOLD',
                      part: [
                        {
                          name: 'THRESHOLD_TYPE',
                          value: 'Tier4',
                          valueType: 'string'
                        },
                        {
                          name: 'THRESHOLD_VALUE',
                          value: '1024',
                          valueType: 'string'
                        },
                        {
                          name: 'BEHAVIOR',
                          value: 'thr64kbps',
                          valueType: 'string'
                        }
                      ]
                    }
                  ]
                },
                {
                  name: 'EFFECTIVE_START_DATE',
                  value: '2023-01-25T09:56:09-08:00'
                }
              ]
            }
          ]

    GrrRequestRoot:
      type: object
      properties:
        requestID:
          type: string
          description: Identifier of the request
        correlationID:
          type: string
          description: Correlation identifier
        agentID:
          type: string
          description: Agent identifier
        exchange:
          $ref: '#/components/schemas/GrrExchange'
        header:
          type: array
          items:
            $ref: '#/components/schemas/GrrNestedObject'
          description: Can have name and value tag, or name and part tag. The part tag can have name and value or name and part. This can be done for N levels of nesting
        parameter:
          type: array
          items:
            $ref: '#/components/schemas/GrrNestedObject'
          description: Can have name and value tag, or name and part tag. The part tag can have name and value or name and part. This can be done for N levels of nesting
        additionalData:
          type: array
          items:
            $ref: '#/components/schemas/GrrNestedObject'
          description: Can have name and value tag, or name and part tag. The part tag can have name and value or name and part. This can be done for N levels of nesting

    GrrExchange:
      type: object
      properties:
        callbackID:
          type: array
          description: List of callback IDs
          items:
            type: string

    GrrResponseBody:
      type: object
      required: [ response ]
      properties:
        response:
          $ref: '#/components/schemas/GrrResponse'
      example:
        response:
          requestID: '1'
          responseID: '1'
          status:
            message: 'complete'
          header: [
            {
              name: 'resultCode',
              value: '0'
            },
            {
              name: 'message',
              value: 'Successful execution'
            },
            {
              name: 'PRODUCT',
              part: [
                {
                  name: 'PRODUCT_ID',
                  value: 'FULLSMS'
                },
                {
                  name: 'USAGE_LIMIT'
                },
                {
                  name: 'EFFECTIVE_START_DATE',
                  value: '2023-01-25T09:56:09-08:00'
                }
              ]
            },
            {
              name: 'PRODUCT',
              part: [
                {
                  name: 'PRODUCT_ID',
                  value: 'FULLSMS'
                },
                {
                  name: 'RENEWAL_INFO',
                  part: [
                    {
                        name: 'AUTO_RENEW',
                        value: '0'
                    }
                  ]
                },
                {
                  name: 'USAGE_LIMIT',
                  part: [
                    {
                      name: 'THRESHOLD',
                      part: [
                        {
                          name: 'THRESHOLD_TYPE',
                          value: 'Tier4'
                        },
                        {
                          name: 'THRESHOLD_VALUE',
                          value: '1024'
                        },
                        {
                          name: 'BEHAVIOR',
                          value: 'thr64kbps'
                        }
                      ]
                    }
                  ]
                },
                {
                  name: 'EFFECTIVE_START_DATE',
                  value: '2023-01-25T09:56:09-08:00'
                }
              ]
            }
          ]
          result: [
            {
              name: 'resultCode',
              value: '0'
            },
            {
              name: 'message',
              value: 'Successful execution'
            },
            {
              name: 'PRODUCT',
              part: [
                {
                  name: 'PRODUCT_ID',
                  value: 'FULLSMS'
                },
                {
                  name: 'USAGE_LIMIT'
                },
                {
                  name: 'EFFECTIVE_START_DATE',
                  value: '2023-01-25T09:56:09-08:00'
                }
              ]
            },
            {
              name: 'PRODUCT',
              part: [
                {
                  name: 'PRODUCT_ID',
                  value: 'FULLSMS'
                },
                {
                  name: 'RENEWAL_INFO',
                  part: [
                    {
                        name: 'AUTO_RENEW',
                        value: '0'
                    }
                  ]
                },
                {
                  name: 'USAGE_LIMIT',
                  part: [
                    {
                      name: 'THRESHOLD',
                      part: [
                        {
                          name: 'THRESHOLD_TYPE',
                          value: 'Tier4'
                        },
                        {
                          name: 'THRESHOLD_VALUE',
                          value: '1024'
                        },
                        {
                          name: 'BEHAVIOR',
                          value: 'thr64kbps'
                        }
                      ]
                    }
                  ]
                },
                {
                  name: 'EFFECTIVE_START_DATE',
                  value: '2023-01-25T09:56:09-08:00'
                }
              ]
            }
          ]
          additionalData: [
            {
              name: 'resultCode',
              value: '0'
            },
            {
              name: 'message',
              value: 'Successful execution'
            },
            {
              name: 'PRODUCT',
              part: [
                {
                  name: 'PRODUCT_ID',
                  value: 'FULLSMS'
                },
                {
                  name: 'USAGE_LIMIT'
                },
                {
                  name: 'EFFECTIVE_START_DATE',
                  value: '2023-01-25T09:56:09-08:00'
                }
              ]
            },
            {
              name: 'PRODUCT',
              part: [
                {
                  name: 'PRODUCT_ID',
                  value: 'FULLSMS'
                },
                {
                  name: 'RENEWAL_INFO',
                  part: [
                    {
                        name: 'AUTO_RENEW',
                        value: '0'
                    }
                  ]
                },
                {
                  name: 'USAGE_LIMIT',
                  part: [
                    {
                      name: 'THRESHOLD',
                      part: [
                        {
                          name: 'THRESHOLD_TYPE',
                          value: 'Tier4'
                        },
                        {
                          name: 'THRESHOLD_VALUE',
                          value: '1024'
                        },
                        {
                          name: 'BEHAVIOR',
                          value: 'thr64kbps'
                        }
                      ]
                    }
                  ]
                },
                {
                  name: 'EFFECTIVE_START_DATE',
                  value: '2023-01-25T09:56:09-08:00'
                }
              ]
            }
          ]

    GrrResponse:
      type: object
      required: [ requestID, responseID, status ]
      properties:
        requestID:
          type: string
          description: Indicates the ID associated with the request
        responseID:
          type: string
          description: Indicates the ID associated with the response
        status:
          $ref: '#/components/schemas/GrrResponseStatus'
        header:
          type: array
          items:
            $ref: '#/components/schemas/GrrNestedObject'
          description: Can have name and value tag, or name and part tag. The part tag can have name and value or name and part. This can be done for N levels of nesting
        result:
          type: array
          items:
            $ref: '#/components/schemas/GrrNestedObject'
          description: Can have name and value tag, or name and part tag. The part tag can have name and value or name and part. This can be done for N levels of nesting
        additionalData:
          type: array
          items:
            $ref: '#/components/schemas/GrrNestedObject'
          description: Can have name and value tag, or name and part tag. The part tag can have name and value or name and part. This can be done for N levels of nesting

    BalanceTransferRequestBody:
      type: object
      required: [ spid, donorMsisdn, recipientMsisdn, amount, channelId ]
      properties:
        spid:
          type: integer
          description: Service Provider Identifier
        donorMsisdn:
          type: string
          description: Donor MSISDN, it should be prepaid
        recipientMsisdn:
          type: string
          description: Recipient MSISDN, it should be prepaid
        amount:
          type: integer
          description: It should be equal or greater than the configured value
        channelId:
          type: integer
          description: Channel identifier
      example:
        spid: 1
        donorMsisdn: "123456789"
        recipientMsisdn: "987654321"
        amount: 15000
        channelId: 1
    
    BalanceTransferResponseBody:
      type: object
      required: [ status]
      properties:
        status:
          $ref: '#/components/schemas/BalanceTransferStatus'
        errorCode:
          $ref: '#/components/schemas/BalanceTransferErrorCode'
        errorMessage:
          type: string
          description: This is an optional field. If status!=0, it contains error details such as code returned from OCG
      example:
        status: 0

    BalanceTransferStatus:
      type: integer
      enum: [0, 1, 2]
      description: >
        Possible values:
        - `0` - Balance transfer is successful
        - `1` - If any parameter spid,donorMsisdn,recipientMsisdn,amount,channelId is missing
        - `2` - Error occured during execution IVP workflow. Error details are described in errorCode and errorMessage fields
    
    BalanceTransferErrorCode:
      type: integer
      enum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
      description: >
        This is an optional field and provided in case of status=2; it describes last IVP workflow state, possible values:
        - `0` - DonorValidationFailed
        - `1` - RecipientValidationFailed
        - `2` - Initial
        - `3` - DonorDebitSuccess
        - `4` - DonorDebitFailed
        - `5` - DonorDebitTimeout
        - `6` - DonorDebitFeeSuccess
        - `7` - DonorDebitFeeFailed
        - `8` - DonorDebitFeeTimeout
        - `9` - RecipientCreditSuccess
        - `10` - RecipientCreditFailed
        - `11` - RecipientCreditTimeout
        - `12` - DonorCreditBackSuccess
        - `13` - DonorCreditBackFailed
        - `14` - DonorCreditBackTimeout
        - `15` - DonorCreditBackFeeSuccess
        - `16` - DonorCreditBackFeeFailed
        - `17` - DonorCreditBackFeeTimeout

    BundleBalanceTransferRequestBody:
      type: object
      required: [ spid, donorMsisdn, recipientMsisdn, amount, channelId ]
      properties:
        spid:
          type: integer
          description: Service Provider Identifier
        donorMsisdn:
          type: string
          description: Donor msisdn to gift balance from
        donorBundleId:
          type: integer
          description: Donor Bundle Id to gift balance from
        recipientMsisdn:
          type: string
          description: Recipient MSISDN, it should be prepaid
        amount:
          type: integer
          description: Amount to transfer. In case of data bundle (unitType is {1,6,7} - 1 - bytes, 6 - Kilobytes, 7- Kilobytes) amount should be in Megabytes
        channelId:
          type: integer
          description: Channel identifier
      example:
        spid: 1
        donorMsisdn: "123456789"
        donorBundleId: 1
        recipientMsisdn: "987654321"
        amount: 15000
        channelId: 1

    BundleBalanceTransferResponseBody:
      type: object
      required: [ status, unitAmountDebitedFromDoner, unitAmountCreditToRecipient, monetaryAmountDebitedFromDonor, unitType]
      properties:
        status:
          $ref: '#/components/schemas/BundleBalanceTransferStatus'
        unitAmountDebitedFromDoner:
          type: integer
          description: Amount debited from donor bucket in unitType; for data bucket is bytes or Kilobytes (per unitType of the bucket)
        unitAmountCreditToRecipient:
          type: integer
          description: Amount credited to recipient bucket in unitType; for data bucket is bytes or Kilobytes (per unitType of the bucket)
        monetaryAmountDebitedFromDonor:
          type: integer
          description: Monetary amount debited from donor subscriber balance
        unitType:
          $ref: '#/components/schemas/BalanceTransferUnitType'
        errorCode:
          $ref: '#/components/schemas/BundleBalanceTransferErrorCode'
        errorMessage:
          type: string
          description: In case of status={1,2} it describes error cause
      example:
        status: 0
        unitAmountDebitedFromDoner: 0
        unitAmountCreditToRecipient: 0
        monetaryAmountDebitedFromDonor: 0
        unitType: 0

    BundleBalanceTransferStatus:
      type: integer
      enum: [0, 1, 2]
      description: >
        Possible values:
        - `0` - Bundle transfer is successful
        - `1` - Invalid JSON request;If any parameter spid, donorMsisdn, donorBundleId, recipientMsisdn, amount, channelId is missing
        - `2` - Error occured. Error details are described in errorCode, errorMessage field.

    BalanceTransferUnitType:
      type: integer
      enum: [0, 1, 2, 6, 7]
      description: >
        Unit type of amounts in unitAmountDebitedFromDonor and unitAmountCreditToRecipient. Possible values:
        - `0` - seconds (voice)
        - `1` - bytes (data)
        - `2` - SMS/MMS
        - `6` - kilobytes (data)
        - `7` - kilobytes (data)

    BundleBalanceTransferErrorCode:
      type: string
      enum: [DonorValidationFailed, DonorDebitMFailed, DonorDebitMTimeout, DonorDebitMCBSuccess, DonorDebitMCBFailed, DonorDebitMCBTimeout, BundleBalanceTransferFailed, BundleBalanceTransferTimeout]
      description: >
        This is an optional field and provided in case of status=2; it describes last IVP workflow state, possible values:
        - `DonorValidationFailed`- Validation of donor/recipient/transfer itself failed.
        - `DonorDebitMFailed`- Debit monetary charge of donor subscriber failed.
        - `DonorDebitMTimeout`- Debit monetary charge of donor subscriber failed due to timeout.
        - `DonorDebitMCBSuccess`- Debit monetary charge of donor subscriber failed due to timeout.
        - `DonorDebitMCBFailed`- transfer operation failed and after that monetary charging back operation to donor failed too due to timeout.
        - `DonorDebitMCBTimeout`- transfer operation failed and after that monetary charging back operation to donor failed too due to timeout.
        - `BundleBalanceTransferFailed`- transfer operation failed.
        - `BundleBalanceTransferTimeout`- transfer operation failed due to timeout.

    BundleBalanceTransferListErrorCode:
      type: integer
      enum: [0, 1, 2, 14, 17 ]
      description: >
        Returned in the case that status=2. It describes a reason for status 2:
          - `0`- There is no bundles found eligible for Gifting.
          - `1`- Donor subscriber is not found.
          - `2`- Donor subscriber is not in ACTIVE state.
          - `14`- Donor subscriber belongs to GROUP account.
          - `17`- Donor subscriber is CUG member

    BundleBalanceTransferListRequestBody:
      type: object
      required: [ spid, donorMsisdn ]
      properties:
        spid:
          type: integer
          description: Service Provider Identifier
        donorMsisdn:
          type: string
          description:   Donor MSISDN to gift balance from
        donorBundleType:
          $ref: '#/components/schemas/DonorBundleType'
      example:
        spid: 1
        donorMsisdn: "1122331111461"
        donorBundleType: "all"

    BundleBalanceTransferListResponseBody:
      type: object
      required: [ status ]
      properties:
        status:
          $ref: '#/components/schemas/BundleBalanceTransferListStatus'
        donorBillingType:
          $ref: '#/components/schemas/BillingType'
        donorSubscriptionType:
          type: integer
          description: Donor subscription type
        donorPricePlanId:
          type: integer
          description: Donor subscriber Price Plan ID. Returned only in the case that status=0
        donorBundles:
          type: array
          items:
            $ref: '#/components/schemas/DonorBundle'
        errorCode:
           $ref: '#/components/schemas/BundleBalanceTransferListErrorCode'
        errorMessage:
          type: string
          description: An error message is returned in case of status={1,2}
      example:
        status: 0,
        donorBillingType: 1,
        donorBundles: [
            {
              bundleId: 252,
              availableBalance: 10737418240,
              usedBalance: 0,
              transferredBalance: 0,
              unitType: 1,
              expirationDate: 1680818400000,
              eligibleForTransferBalance: 100,
              giftingLimitValueType: 0,
              giftingLimitValue: 100,
              auxiliary: true
            },
            {
              bundleId: 245,
              availableBalance: 10108272640,
              usedBalance: 629145600,
              transferredBalance: 629145600,
              unitType: 1,
              expirationDate: 1680818400000,
              eligibleForTransferBalance: 1010827264,
              giftingLimitValueType: 1,
              giftingLimitValue: 10,
              auxiliary: false
            }
        ]
        donorSubscriptionType: 10001

    BundleBalanceTransferListStatus:
      type: integer
      enum: [0, 1, 2]
      description: >
        Possible values:
        - `0` - Bundle transfer List operation is successful
        - `1` - Validation error which is described in errorCode and errorMessage fields
        - `2` - General error is described errorMessage

    BillingType:
      type: integer
      enum: [0, 1]
      description: >
        Possible values:
        - `0` - Postpaid
        - `1` - Prepaid

    DonorBundleType:
      type: string
      enum: [all, data, sms]
      description: >
        Possible values {"all", "data", "sms"}. Optional field ("all" by default). This field is used for filtration of result bundle list.
        - `all` - Default
        - `data` - Data
        - `sms` - SMS

    DonorBundle:
      type: object
      description: Donor bundle
      required: [ bundleId, availableBalance, usedBalance, transferredBalance, unitType, expirationDate, eligibleForTransferBalance, giftingLimitValueType, giftingLimitValue, auxiliary ]
      properties:
        bundleId:
          type: integer
          description: Bundle identifier
        availableBalance:
          type: integer
          description: Available balance
        usedBalance:
          type: integer
          description: Balance used
        transferredBalance:
          type: integer
          description: The amount in the unitType which has been already transferred from the bucket within the current cycle
        unitType:
          $ref: '#/components/schemas/BalanceTransferUnitType'
        expirationDate:
          type: integer
          description: Expiration date
        eligibleForTransferBalance:
          type: integer
          description: The amount in the unitType which is eligible for transfer to the recipient
        giftingLimitValueType:
          $ref: '#/components/schemas/GiftingLimitValueType'
        giftingLimitValue:
          type: integer
          description: Value of limit in unitType/% and depends on giftingLimitValueType
        auxiliary:
          type: boolean
          description: Auxiliary boolean

    GiftingLimitValueType:
      type: integer
      enum: [0, 1]
      description: >
        - `0`- ABSOLUTE
        - `1`- PERCENT

    CreateCustomerRequestRequestBody:
      type: object
      required: [ spid, identifier, requestProfile ]
      properties:
        spid:
          type: integer
          description: Service Provider Identifier
        identifier:
          $ref: '#/components/schemas/Identifier'
        externalId:
          type: string
          description: External Request ID from system sending the request
        requestProfile:
          type: string
          description: Request Profile configured in System for type of customer request that needs to be performed
        actionDataList:
          type: array
          items:
            $ref: '#/components/schemas/ActionData'
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      example:
        spid: 1
        identifier: {
          identiferType: 2,
          identifierValue: "123456789"
        }
        externalId: "123"
        requestProfile: "requestProfile1"
        actionDataList: [
          {
            id: "1",
            value: "ActionData1"
          },
          {
            id: "2",
            value: "ActionData2"
          }
        ]
        parameterList: [
          {
            id: "parameter1",
            value: "value1"
          },
          {
            id: "parameter2",
            value: "value2"
          }
        ]

    CreateCustomerRequestResponseBody:
      type: object
      required: [ responseCode]
      properties:
        requestId:
          type: integer
          description: Identifier for the request received. To be used for any future update. Returned if the system accepted the request to process
        responseCode:
          $ref: '#/components/schemas/CreateCustomerRequestResponseCode'
        errorMessage:
          type: string
          description: String providing more information on the error. Error encountered for request submission
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      example:
        requestId: 1
        responseCode: 200
        parameterList: [
          {
            id: "parameter1",
            value: "value1"
          },
          {
            id: "parameter2",
            value: "value2"
          }
        ]

    CreateCustomerRequestResponseCode:
      type: integer
      enum: [0, 1, 2, 3, 4, 5]
      description: >
        Possible values:
        - `0` - Submitted
        - `1` - Completed
        - `2` - Validation Failed
        - `3` - Internal Error
        - `4` - Action Processing Failed
        - `5` - Validation Error

    Identifier:
      type: object
      required: [ identifierType, identifierValue ]
      properties:
        identifierType:
          $ref: '#/components/schemas/IdentifierType'
        identifierValue:
          type: string
          description: Identification number of the provided Identifier Type
    
    IdentifierType:
      type: integer
      enum: [-1, -2, -3, -4, 0]
      description: >
        Possible values:
        - `-1` - BAN
        - `-2` - MSISDN
        - `-3` - Unknown Identification Type
        - `-4` - Payment Reference Id
        - `0` - 0 onwards for Configured Identification Type in System

    ActionData:
      type: object
      required: [ id, value ]
      properties:
        id:
          type: string
          description: Identifier
        value:
          type: string
          description: Value

    CustomerServiceAgreementRequestBody:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/CustomerServiceAgreementInnerRequest'
      example:
        request:
          requestID: 5
          parameters:
            - name: subscriberId
              value: '1163-1'
            - name: language
              value: 'en'
    
    CustomerServiceAgreementInnerRequest:
      type: object
      properties:
        requestID:
          type: integer
          description: A unique ID for the request
        parameters:
          type: array
          items:
            properties:
              name:
                type: string
                description: Name of Parameter
              value:
                type: string
                description: Value of Parameter

    StoreCustomerServiceAgreementResponseBody:
      type: object
      required: [ attachmentKey, fileName ]
      properties:
        attachmentKey:
          type: string
          description: Unique attachment Identifier
        fileName:
          type: string
          description: Name of attachment file
        createdDate:
          type: string
          description: Date of creation
        description:
          type: string
          description: Description about attachment
      example:
         attachmentKey: 'qj1ce1tr-z2om0jhee7vrs2'
         fileName: '1163-1-qj1ce1tr-z2om0jhee7vrs2.pdf'
         createdDate: '2024-02-13T10:24:59.259+0000'
         description: 'Description'

    UpdateCustomerRequestRequestBody:
      type: object
      required: [ spid, requestProfile ]
      properties:
        spid:
          type: integer
          description: Service Provider Identifier
        identifier:
          $ref: '#/components/schemas/Identifier'
        requestProfile:
          type: string
          description: Request Profile configured in System for type of customer request that needs to be performed
        actionDataList:
          type: array
          items:
            $ref: '#/components/schemas/ActionData'
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      example:
        spid: 1
        identifier: {
          identiferType: 2,
          identifierValue: "123456789"
        }
        requestProfile: "requestProfile1"
        actionDataList: [
          {
            id: "1",
            value: "ActionData1"
          },
          {
            id: "2",
            value: "ActionData2"
          }
        ]
        parameterList: [
          {
            id: "parameter1",
            value: "value1"
          },
          {
            id: "parameter2",
            value: "value2"
          }
        ]

    UpdateCustomerRequestResponseBody:
      type: object
      required: [ responseCode]
      properties:
        responseCode:
          $ref: '#/components/schemas/UpdateCustomerRequestResponseCode'
        errorMessage:
          type: string
          description: String providing more information on error
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      example:
        responseCode: 200
        parameterList: [
          {
            id: "parameter1",
            value: "value1"
          },
          {
            id: "parameter2",
            value: "value2"
          }
        ]
    
    UpdateCustomerRequestResponseCode:
      type: integer
      enum: [0, 1, 2, 3, 5]
      description: >
        Possible values:
        - `0` - Success
        - `1` - Entry not found
        - `2` - Validation Failed
        - `3` - Internal Error
        - `5` - Validation Error    
    
    ListCustomerAttachmentResponseBody:
      type: object
      properties:
        ban:
          type: string
        accountDocuments:
          type: array
          items:
            type: object
            properties:
              attachmentKey:
                type: string
                description: Unique attachment Identifier
              fileName:
                type: string
                description: Name of attachment file
              createdDate:
                type: string
                description: Date of creation
              description:
                type: string
                description: Description about attachment
      example:
        ban: "120"
        accountDocuments:
        - attachmentKey: 'qj1ce1tr-z2om0jhee7vrs2'
          fileName: '1163-1-qj1ce1tr-z2om0jhee7vrs2.pdf'
          createdDate: '2024-02-13T10:24:59.259+0000'
          description: 'Description'
        - attachmentKey: 'qj1ce1tr-z2om0jhee7vrs2'
          fileName: '1163-1-qj1ce1tr-z2om0jhee7vrs2.pdf'
          createdDate: '2024-02-13T10:24:59.259+0000'
          description: 'Description'

    UpdateOrderRequestBody:
      type: object
      required:
      - updateAction
      properties:
        updateAction:
          type: object
          required:
          - actionType
          properties:
            actionType:
              type: string
              enum: [CANCEL, NW_UPDATE]
              description: >
               Possible types of Port Order Update:           
               `CANCEL` - Cancels order
               `NW_UPDATE` - Updates order or Network
            actionValueHolder:
              type: object
              required:
              - actionKey
              - actionValue
              properties:
                actionKey:
                  type: string
                  description: Id of action to be used for update
                actionValue:
                  type: string
                  description: Value
        orderUpdateData:
          type: object
          required:
          - numberToPort
          properties:
            numberToPort:
              type: string
              description: Number for which the order is for
            cancellationReason:
              type: string
              description: Reason for cancellation. Received for the case when order is canceled
            parameterList:
              type: array
              items:
                $ref: '#/components/schemas/Parameter'
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      example:
        updateAction:
          actionType: 'CANCEL'
        orderUpdateData:
          numberToPort: '247993248583'
    
    UpdateOrderResponseBody:
      type: object
      properties:
        orderNumber:
          type: string
          description: Order identifier
        resultMessage:
          type: string
          description: Additional information if request fails
        parameterList:
              type: array
              items:
                $ref: '#/components/schemas/Parameter'
      example:
        orderNumber: '3'
        resultMessage: 'Success'
    
    ListExtendedPromotionsResponseBody:
      type: array
      description: List of extended promotions
      items:
        type: object
        properties:
          id:
            type: string
            description: Promotion identifier
          description:
            type: string
            description: Promotion description
          priority:
            type: string
            description: Priority
          spid:
            type: string
            description: Service Provider Identifier
          promotionStatus:
            type: string
            description: Promotion status
          expiryDate:
            type: string
            description: Expiry date
          startDate:
            type: string
            description: Start date
          promotionFilters:
            $ref: '#/components/schemas/PromotionFilterResponse'
          promotionBenefits:
            type: object
            description: Promotion benefits
            properties:
              promotionBundles:
                type: array
                description: List of promotion bundles
                items:
                  $ref: '#/components/schemas/PromotionBundleResponse'
              promotionService:
                type: object
                properties:
                  id:
                    type: string
                    description: Promotion service identifier
                  name:
                    type: string
                    description: Promotion service name
      example:
        - id: AUTOCODE
          description: Promo for automation
          priority: 7
          spid: 1
          promotionStatus: ENABLED
          expiryDate: 2044-02-29T02:45:30.000+0000
          startDate: 2024-02-29T01:45:30.000+0000
          promotionFilters:
            promoCode: AUTOCODE
            validationCode: '12345'
            activationStatus: 1
            promotionName: .*
            retailChannel: .*
            channelType: -1
            province: .*
            pricePlanId: -1
            additionalPromo: 1
          promotionBenefits:
            promotionBundles:
              - id: 148
                name: 1promo
                type: 1
                segment: PREPAID
                recurrenceScheme: MONTHLY
                initialBalance: 0
            promotionService:
              id: 1
              name: Promo
        - id: NEWADDCODEBUNDLE
          description: NEWADDCODEBUNDLE
          priority: 8
          spid: 1
          promotionStatus: ENABLED
          expiryDate: 2025-02-26T02:29:14.000+0000
          startDate: 2024-02-26T02:29:14.000+0000
          promotionFilters:
            promoCode: NEWADDCODEBUNDLE
            validationCode: ''
            activationStatus: 1
            promotionName: .*
            retailChannel: .*
            channelType: -1
            province: .*
            pricePlanId: -1
            additionalPromo: 1
          promotionBenefits:
            promotionBundles:
              - id: 148
                name: 1promo
                type: 1
                segment: PREPAID
                recurrenceScheme: MONTHLY
                initialBalance: 0
            promotionService:
              id: 1
              name: Promo
        - id: EXPIREDNEWADDCODE
          description: expired, new activation, additional, not expired, validation code
          priority: 9
          spid: 1
          promotionStatus: ENABLED
          expiryDate: 2024-02-27T01:21:06.000+0000
          startDate: 2024-02-26T01:21:06.000+0000
          promotionFilters:
            promoCode: '12345'
            validationCode: ''
            activationStatus: 1
            promotionName: .*
            retailChannel: .*
            channelType: -1
            province: .*
            pricePlanId: -1
            additionalPromo: 1
          promotionBenefits:
            promotionBundles: []
            promotionService:
              id: 1
              name: Promo
        - id: NONEWADDCODE
          description: not new activation, additional, validation code, not expired
          priority: 11
          spid: 1
          promotionStatus: ENABLED
          expiryDate: 2025-02-26T01:17:29.000+0000
          startDate: 2024-02-26T01:17:29.000+0000
          promotionFilters:
            promoCode: NONEWADDCODE
            validationCode: '12345'
            activationStatus: 0
            promotionName: .*
            retailChannel: .*
            channelType: -1
            province: .*
            pricePlanId: -1
            additionalPromo: 1
          promotionBenefits:
            promotionBundles: []
            promotionService:
              id: 1
              name: Promo
        - id: NEWADDCODE
          description: new activation, additional, not expired, validation code
          priority: 12
          spid: 1
          promotionStatus: ENABLED
          expiryDate: 2025-02-27T01:15:00.000+0000
          startDate: 2024-02-26T01:15:56.000+0000
          promotionFilters:
            promoCode: NEWADDCODE
            validationCode: '12345'
            activationStatus: -1
            promotionName: .*
            retailChannel: .*
            channelType: -1
            province: .*
            pricePlanId: -1
            additionalPromo: 1
          promotionBenefits:
            promotionBundles: []
            promotionService:
              id: 1
              name: Promo
        - id: NONEWADDNONE
          description: not new activation, additional, no code
          priority: 13
          spid: 1
          promotionStatus: ENABLED
          expiryDate: 2025-02-26T01:14:23.000+0000
          startDate: 2024-02-26T01:14:23.000+0000
          promotionFilters:
            promoCode: ''
            validationCode: NONEWADDNONE
            activationStatus: -1
            promotionName: .*
            retailChannel: .*
            channelType: -1
            province: .*
            pricePlanId: -1
            additionalPromo: 1
          promotionBenefits:
            promotionBundles: []
            promotionService:
              id: 1
              name: Promo
        - id: NEWADDNONE
          description: new activation, additional, not expired, no code
          priority: 14
          spid: 1
          promotionStatus: ENABLED
          expiryDate: 2025-02-26T01:11:35.000+0000
          startDate: 2024-02-26T01:11:32.000+0000
          promotionFilters:
            promoCode: NEWADDNONE
            validationCode: ''
            activationStatus: 1
            promotionName: .*
            retailChannel: .*
            channelType: -1
            province: .*
            pricePlanId: -1
            additionalPromo: 1
          promotionBenefits:
            promotionBundles: []
            promotionService:
              id: 1
              name: Promo
        - id: Save25
          description: 'Save 25% Off on Smart Home Plans'
          priority: 31
          spid: 1
          promotionStatus: ENABLED
          expiryDate: 2032-02-13T11:01:00.000+0000
          startDate: 2024-02-12T11:01:00.000+0000
          promotionFilters:
            promoCode: SHP25
            validationCode: ''
            activationStatus: -1
            promotionName: .*
            retailChannel: .*
            channelType: -1
            province: .*
            pricePlanId: -1
            additionalPromo: 0
          promotionBenefits:
            promotionBundles: []
            promotionService:
              id: 1
              name: Promo
        - id: '10011'
          description: ''
          priority: 38
          spid: 1
          promotionStatus: ENABLED
          expiryDate: 2024-02-29T02:54:00.000+0000
          startDate: 2024-02-09T02:54:37.000+0000
          promotionFilters:
            promoCode: opp
            validationCode: ''
            activationStatus: -1
            promotionName: .*
            retailChannel: .*
            channelType: -1
            province: .*
            pricePlanId: -1
            additionalPromo: 0
          promotionBenefits:
            promotionBundles: []
            promotionService:
              id: 1
              name: Promo
    
    PromotionFilterResponse:
      type: object
      properties:
        promoCode:
          type: string
          description: Promotion code
        validationCode:
          type: string
          description: Validation code
        activationStatus:
          $ref: '#/components/schemas/PromotionActivationStatus'
        promotionName:
          type: string
          description: Promotion name
        retailChannel:
          type: string
          description: Retail channel
        channelType:
          $ref: '#/components/schemas/PromotionChannelType'
        province:
          type: string
          description: Province
        pricePlanId:
          type: string
          description: Price plan identifier
        additionalPromo:
          $ref: '#/components/schemas/AdditionalPromotionEnumeration'
    
    PromotionActivationStatus:
      type: integer
      enum: [-1, 0, 1]
      description: >
        The activationStatus is one of the following values:
         - `-1` - Don't care
         - `0` - NO
         - `1` - YES
    
    PromotionChannelType:
      type: integer
      enum: [-1, 0, 1, 2, 3, 4, 5]
      description: >
        The channelType is one of the following values:
         - `-1` - Don't care
         - `0` - DCRM
         - `1` - AP
         - `2` - WSC
         - `3` - IVR
         - `4` - USSD
         - `5` - DP
    
    AdditionalPromotionEnumeration:
      type: integer
      enum: [-1, 0, 1]
      description: >
        The additionalPromo is one of the following values:
         - `-1` - Don't care
         - `0` - NO
         - `1` - YES
    
    PromotionBundleResponse:
      type: object
      properties:
        id:
          type: string
          description: Identifier of promotion bundle
        name:
          type: string
          description: Name of promotion bundle
        type:
          type: string
          description: Promotion bundle type
        segment:
          type: string
          description: Promotion bundle segment
        recurrenceScheme:
          type: string
          description: Recurrence scheme
        initialBalance:
          type: string
          description: Initial balance
    GetSingleUsePromoResponseBody:
      type: object
      description: Undistributed Promotion code from promotion code set.
      properties:
        promoCode: 
          type: string
          description: Undistributed one time promo code
          example: "ATU_123"
    Error400:
      required:
        - responseCode
        - message
        - detail
      type: object
      properties:
        responseCode:
          type: string
          description: Application error code
          example: ERCRT1001
        message:
          type: string
          description: Details of what went wrong while calling the API.
          example: Bad Request.
        detail:
          type: string
          description: detail of the error scenario.
          example: One or more parameters provided are not valid
      description: Used when an API throws a 400 error

    Error401:
      allOf:
        - $ref: '#/components/schemas/GenericError401'

    Error403:
      allOf:
        - $ref: '#/components/schemas/GenericError'

    Error404:
      allOf:
        - $ref: '#/components/schemas/GenericError404'

    Error405:
      allOf:
        - $ref: '#/components/schemas/GenericError405'

    Error415:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          description: Application error message. Unauthorized(token expired, tempered).
          example: Unsupported Media Type

    Error500:
      allOf:
        - $ref: '#/components/schemas/GenericError'

    ErrorCalculateTax:
      required:
        - responseCode
      type: object
      properties:
        responseCode:
          type: integer
          enum: [1, 2, 3]
          description: >
            Application error code. Possible values:
              - `1` - Validation Failed
              - `2` - Internal Error
              - `3` - External system Error
        errorMessage:
          type: string
          description: Details of what went wrong while calling the Calculate Tax API.
          example: Validation Failed
      description: Used when the Calculate Tax API throws an error

    ErrorApplyPayment:
      required:
        - responseCode
      type: object
      properties:
        responseCode:
          type: integer
          enum: [1, 2, 3, 4]
          description: >
            Application error code. Possible values:
              - `1` - TaxQueryId entry not found
              - `2` - Validation error
              - `3` - Billing Internal Error
              - `4` - External system Error
        errorMessage:
          type: string
          description: Details of what went wrong while calling the Apply Payment API.
          example: TaxQueryId entry not found
      description: Used when the Apply Payment API throws an error
    
    ErrorCreditCardRefund:
      required:
        - responseCode
      type: object
      properties:
        responseCode:
          type: integer
          enum: [1, 2, 3, 4]
          description: >
            Application error code. Possible values:
              - `1` 
              - `2` 
              - `3` 
              - `4` 
        errorMessage:
          type: string
          description: Details of what went wrong while calling the API.
          example: Refund amount ($54.06) is greater than charge amount ($54.04)
      description: Used when API throws an error

    ErrorResourceReserve:
      required:
        - responseCode
      type: object
      properties:
        responseCode:
          type: integer
          enum: [1, 2, 3]
          description: >
            Application error code. Possible values:
             - `1` - Bad Resource Requested
             - `2` - Bad Reservation Id
             - `3` - Internal Error
          example: 1
        errorMessage:
          type: string
          description: Details of the error.
          example: Bad Resource Requested
      description: Used when the Resource Reserve API throws an error

    ErrorCreateCustomerRequest:
      required:
        - responseCode
      type: object
      properties:
        responseCode:
          type: integer
          enum: [2, 3, 4, 5]
          description: >
            Application error code. Possible values:
            - `2` - Validation Failed
            - `3` - Internal Error
            - `4` - Action Processing Failed
            - `5` - Validation Error
          example: 2
        errorMessage:
          type: string
          description: Details of the error.
          example: Bad Resource Requested
      description: Used when the Resource Reserve API throws an error

    ErrorUpdateCustomerRequest:
      required:
        - responseCode
      type: object
      properties:
        responseCode:
          type: integer
          enum: [1, 2, 3, 5]
          description: >
            Application error code. Possible values:
            - `1` - Entry not found
            - `2` - Validation Failed
            - `3` - Internal Error
            - `5` - Validation Error   
          example: 2
        errorMessage:
          type: string
          description: Details of the error.
          example: Bad Resource Requested
      description: Used when the Resource Reserve API throws an error

    ErrorCardPackage:
      required:
        - responseCode
      type: object
      properties:
        responseCode:
          type: integer
          description: Status of the request acceptance by system
          example: 2
        errorMessage:
          type: string
          description: Details of the error.
          example: 'spid is empty or absent'
      description: Used when the Card Package API throws an error
    
    ErrorPricePlanChangeValidation:
      required:
        - status
      type: object
      properties:
        status:
          type: integer
          enum: [2]
          description: >
             - `2` - an error occured
        errorMessage:
          type: string
          description: Details of the error.
          example: 'Subscriber with given msisdn {0} not found in Active state.'
      description: Used when the Price Plan CHange Validation API throws an error

    ErrorSubscriptionPayableAmount:
      required:
        - status
      type: object
      properties:
        status:
          type: integer
          enum: [1]
          description: >
             - `1` - an error occured
        errorMessage:
          type: string
          description: Details of the error
          example: 'For given msisdn someMsisdn Postpaid Subscriber Not found or its in Deactivated state!'
      description: Used when the Subscription Payable Amount API throws an error

    ErrorBalanceTransfer:
      type: object
      required: [ status, errorCode ]
      properties:
        status:
          $ref: '#/components/schemas/BalanceTransferStatus'
        errorCode:
          $ref: '#/components/schemas/BalanceTransferErrorCode'
        errorMessage:
          type: string
          description: This is an optional field. If status!=0, it contains error details such as code returned from OCG
      example:
        status: 2
        errorCode: 1
        errorMessage: RecipientValidationFailed

    ErrorBundleBalanceTransfer:
      type: object
      required: [ status, errorCode ]
      properties:
        status:
          $ref: '#/components/schemas/BundleBalanceTransferStatus'
        errorCode:
          $ref: '#/components/schemas/BundleBalanceTransferErrorCode'
        errorMessage:
          type: string
          description: >
            In case of status={1,2} it describes error cause. 
            In case of errorCode=BundleBalanceTransferFailed, errorMessage can contains one of the following codes:
            - 1001: Transfer Balance decreasing of donor failed with error result.
            - 1002: Transfer Balance decreasing of donor failed with exception.
            - 1003: Transfer Balance Increasing of recipient was ended with error result and rollback procedure with increasing balance of donor was failed with exception.
            - 1004: Transfer Balance Increasing of recipient was ended with error result and rollback procedure with increasing balance of donor was failed with error result too.
            - 1005: Transfer Balance Increasing of recipient was ended with error result and rollback procedure with increasing balance of donor was successful.
            - 1006: Transfer Balance Increasing of recipient was ended with exception and rollback procedure with increasing balance of donor was failed with exception.
            - 1007: Transfer Balance Increasing of recipient was ended with exception and rollback procedure with increasing balance of donor was failed with error result 
            - 1008: Transfer Balance Increasing of recipient was ended with exception and rollback procedure with increasing balance of donor was successful
            
            When errorCode=DonorValidationFailed, errorMessage can contain one of the following codes: For example:errorCode in parent errorMessage can contains one of the following codes:
            {"status" : 1, "errorCode": "DonorValidationFailed", "errorMessage":"bundleListError: status=1/errorCode=21/errorMessage=[246]"}
      example:
        status: 2
        errorCode: BundleBalanceTransferFailed
        errorMessage: Transfer Balance decreasing of donor failed with exception

    ErrorBundleBalanceTransferList:
      type: object
      required: [ status, errorCode ]
      properties:
        status:
          $ref: '#/components/schemas/BundleBalanceTransferListStatus'
        errorCode:
           $ref: '#/components/schemas/BundleBalanceTransferListErrorCode'
        errorMessage:
          type: string
          description: An error message is returned in case of status={1,2}
      example:
        status: 1
        errorCode: 1
        errorMessage: Donor subscriber is not found

    GenericError:
      required:
        - code
        - message
        - detail
      type: object
      properties:
        code:
          type: string
          description: Application error code
        message:
          type: string
          description: Application error message
        detail:
          type: string
          description: Application error message detail, if any
      example:
        message: Internal Server Error

    GenericError400:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          description: Bad request
          example: One or more parameters provided are not valid

    GenericError401:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          description: Application error message. Unauthorized(token expired, tempered).
          example: Required authentication information is either missing or not valid for the request.

    GenericError404:
      required:
        - code
        - message
        - detail
      type: object
      properties:
        code:
          type: string
          description: Application error code
          example: ERCRT1003
        message:
          type: string
          description: Application error message.
          example: Application error message.
        detail:
          type: string
          description: detail of the error scenario.
          example: page not found

    GenericError405:
        required:
          - message
        type: object
        properties:
          message:
            type: string
            description: Method Not Allowed
            example: Only POST is supported.

    GetLinkedImeiResponse:
      type: object
      properties:
        imei:
          type: array
          description: Array of imeis
          items:
            $ref: '#/components/schemas/ImeiResponse'
          
    ImeiResponse:
      type: object
      properties:
            date:
              type: integer
              description: Date of use
              example: 05122025
            time:
              type: integer
              description: Time of use
              example: 120507
            msisdn:
              type: integer
              description: Mobile number
              example: 123456789
            imei:
              type: integer
              description: International Mobile Equipment Identity number
              example: 1111111111

    ReserveOTPCRequestBody:
      required:
        - subscriberKey
        - promotionId
      properties:
        subscriberKey:
          type: string
          description: identifier referencing the subscriber. Can be e-mail or subscriber id
          example: josh@optiva.com.tr
        promotionId:
          type: string
          description: identifier promotion rule to be reserved for the provided one time promotion code
          example: 2GBPromoWithNonRecur
    GenericOTPCResponse:
        required:
          - code
          - errCode
          - message
          - reason
        type: object
        properties:
          code:
            type: string
            description: Response status code
            example: Response Status Code
          errCode:
            type: string
            description: Application related code
            example: OTPCRSRV503
            nullable: true
          message:
            type: string
            description: Text that provide more details and corrective actions related to the error
            example: Please notify a system administrator
            nullable: true
          reason:
            type: string
            description: Text that explains the reason for this error
            example: Store is not available
            nullable: true

    ListSubscriberResponse:
        type: object
        description: Response body for list subscriptions API
        properties:
          subscriberResponseList:
            type: array
            description: Array or subscriptions
            items:
              $ref: '#/components/schemas/SubscriberResponse'
          resultCode:
            type: integer
            description: BSS result code for operation
          resultMessage:
            type: string
            description: Description of the Result
            example: Success
    SubscriberResponse:
      type: object
      description: Full Subscriber details
      properties:
        profile:
          type: object
          description: Profile details for a subscriber
          properties:
            poolLimit:
              type: integer
              description: Pool limit
              example: -1
            poolLimitStrategy:
              type: integer
              description: Pool limit strategy
              example: 0
            identifier:
              type: string
              description: Subscription ID
              example: 11485-1
            accountID:
              type: string
              description: Account ID or BAN
              example: 11485
            spid:
              type: integer
              description: Service Provider ID
              example: 1
            paidType:
              type: integer
              description: Paid Type enumeration
              example: 1
            subscriptionClass:
              type: integer
              description: Class of subscription
              example: 1
            subscriptionType:
              type: integer
              description: Type of subscription
              example: 10001
            mobileNumber:
              type: string
              description: Mobile number for subscription
              example: 1697011038318
            cardPackageID:
              type: string
              description: Card Package ID
              example: 1697011038318
            technologyType:
              type: integer
              description: Technology type
              example: 0
            hlrID:
              type: integer
              description: HLR ID
              example: 0
            notificationPreference:
              type: integer
              description: Notification Preference
              example: 0
            created:
              type: integer
              description: Time subscription was created
              example: 1697011091138
            lastModified:
              type: integer
              description: Time subscription was modified last
              example: 1702288925995
        status:
          type: object
          description: State of the subscription
          properties:
            state:
              type: integer
              description: State type
              example: 2
            startDate:
              type: integer
              description: Date subscription starts
              example: 1697011091601
            endDate:
              type: integer
              description: Date subscription ends
              example: 1702288925627
            expiryDate:
              type: integer
              description: Date subscription expires
              example: 1699596000000
        billing:
          type: object
          description: Billing details for subscription
          properties:
            billingLanguage:
              type: string
              description: Preferred Language to be billed in 
              example: en
            billingOption:
              type: integer
              description: Option for billing
              example: 2
            discountClass:
              type: integer
              description: Discount Class
              example: 0
            maximumBalance:
              type: integer
              description: Maximum balance of subscription
              example: 0
            maximumRecharge:
              type: integer
              description: Minimum recharge for subscription
              example: 0
            reactivationFee:
              type: integer
              description: Fee to reactive subscription
              example: 0
            category:
              type: integer
              description: Subscription category
              example: 0
            initialBalance:
              type: integer
              description: Starting balance of subscription
              example: 50000
            depositDate:
              type: integer
              description: Date of deposit
              example: 1697009159531
            nextDepositReleaseDate:
              type: integer
              description: Date of next deposit
              example: 
        rating:
          type: object
          description: Rating details for subscription
          properties:
            primaryPricePlanID:
              type: integer
              description: ID for primiary price plan for subscription
              example: 100035
            secondaryPricePlanID:
              type: integer
              description: ID of secondary price plan for subscription 
              example: -1
            secondaryPricePlanStart:
              type: integer
              description: Start date for secondary price plan
              example: 2328152400000
            secondaryPricePlanEnd:
              type: integer
              description: End date for secondary price plan
              example: 2328152400000
            pricePlanVersion:
              type: integer
              description: Version of price Plan
              example: 1

    ListAccountResponse:
        type: object
        properties:
          accountResponseList:
            type: array
            items:
              $ref: '#/components/schemas/AccountResponse'
          pageKey:
            type: string
          parameterList:
            type: array
            items:
              $ref: '#/components/schemas/Parameter'
          resultCode:
            type: integer
          resultMessage:
            type: string
    AccountResponse:
        type: object
        properties:
          firstName:
            type: string
            description: First name of the account holder.
          lastName:
            type: string
            description: Last name of the account holder.
          ban:
            type: string
            description: Ban of the account.
          spid:
            type: integer
            description: Service provider id of the account
          accountType:
            type: integer
            description: >-
              Type of the account. The values are
              POSTPAID_INDEX = 0,
              PREPAID_INDEX = 1
          groupType:
            type: integer
            description: >-
              Enum values are 
              SUBSCRIBER_INDEX = 0,
              GROUP_INDEX = 1,
              GROUP_POOLED_INDEX = 3
          state:
            type: integer
            description: >-
              Enum values are 
              ACTIVE_INDEX = 0,
              SUSPENDED_INDEX = 1,
              INACTIVE_INDEX = 2,
              NON_PAYMENT_WARN_INDEX = 3,
              NON_PAYMENT_SUSPENDED_INDEX = 4,
              PROMISE_TO_PAY_INDEX = 5,
              IN_ARREARS_INDEX = 6,
              IN_COLLECTION_INDEX = 7
          parentBan:
            type: string
            description: Ban of the parent account
          billingType:
            type: integer
            description: >-
              Enum values are
              POSTPAID_INDEX = 0,
              PREPAID_INDEX = 1,
              HYBRID_INDEX = 2
          billCycleId:
            type: integer
            description: >-
              Billing cycle to use for the account.  It specifies the day of each month when subscribers in the
              accounts are billed (and the billing cycle restarts).  This means that in any account hierarchy,
              all the children sub-accounts must use the same billing day as the root account.
          responsible:
            type: boolean
            description: >-
              Indicates whether this is a responsible account.
              A responsible account (or sub-account) is one that is billable by the application.
          inCollectionDate:
            type: string
            description: >-
              This marks the time when an account is set to the IN COLLECTION state. It is used to determine if an
              account should be deactivated
          lastModified:
            type: string
            description: Date when this account was last modified.
          creditCategory:
            type: integer
            description: >-
              Credit category to use for the account.  It determines:
              How to re-adjust the credit limit of a subscriber in the account after a deposit is made.
              Whether the account is exempt from the dunning process.
              Whether the account uses the dunning configuration of its Service Provider.
              The custom dunning configuration that the account uses if dunning is not service provider based.
          accountName:
            type: string
            description: Name of this account.

    ListSubAccountsResponse:
        type: object
        properties:
          subAccountResponseList:
            type: array
            description: List of sub-account details.
            items:
              $ref: '#/components/schemas/SubAccountResponse'
          pageKey:
            type: string
            description: Page key for retrieving the next page of results.
          parameterList:
            type: array
            description: Additional parameters, if any.
            items:
              $ref: '#/components/schemas/Parameter'
          resultCode:
            type: integer
            description: Status code of the response (0 = success).
          resultMessage:
            type: string
            description: Description of the result (e.g., "Success").
    SubAccountResponse:
        type: object
        properties:
          spid:
            type: integer
            description: Service provider id of the account
          ban:
            type: string
            description: Ban of the account.
          parent:
            type: string
            description: Parent account ID.
          responsible:
            type: boolean
            description: >-
              Indicates whether this is a responsible account.
              A responsible account (or sub-account) is one that is billable by the application.
          role:
            type: integer
            description: Role ID associated with the sub-account.
          state:
            type: integer
            description: >-
              Enum values are 
              ACTIVE_INDEX = 0,
              SUSPENDED_INDEX = 1,
              INACTIVE_INDEX = 2,
              NON_PAYMENT_WARN_INDEX = 3,
              NON_PAYMENT_SUSPENDED_INDEX = 4,
              PROMISE_TO_PAY_INDEX = 5,
              IN_ARREARS_INDEX = 6,
              IN_COLLECTION_INDEX = 7
          accountName:
            type: string
            description: Name of this account.
          groupType:
            type: integer
            description: >-
              Enum values are 
              SUBSCRIBER_INDEX = 0,
              GROUP_INDEX = 1,
              GROUP_POOLED_INDEX = 3
          systemType:
            type: integer
            description:  >-
              Type of billing applied to all non-responsible sub-accounts and individual subscribers that belong to this account.
              Enum values are 
                POSTPAID_INDEX = 0,
                PREPAID_INDEX = 1,
                HYBRID_INDEX = 2
    SendEmailRequestBody:
      type: object
      required: [ destEmailAddress,templateGroupName,placeHolderList,parameterList ]
      properties:
        destEmailAddress:
          type: string
          description: Destination email address
        templateGroupName:
          type: string
          description: Bss Template to be used
        lang:
          type: string
          description: Language is optional          
        placeHolderList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        parameterList:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      example:
        destEmailAddress: 'optiva.email@optiva.com'
        templateGroupName: 'NTF_API_TEST'
        lang: 'en'
        
    SendEmailResponseBody:
        type: object
        properties:
          status:
            type: integer
            description:  >-
              Enum values are 
              SUCCESS(0)
              SPID_ABSENT(3, "Spid not found"),
              TEMPLATE_ABSENT(4, "Template not found"),
              NOTIFICATION_SEND_FAILURE(5, "Error while sending the Notification"),
              SKIPPED(6, "Skipped Sending Email"),
              NOTIFICATION_DELIVERY_FAILURE(7, "Notification delivery was not confirmed");