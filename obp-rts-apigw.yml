openapi: 3.0.0
info:
  title: OBP SOAP to REST APIs
  description: This is the Swagger UI environment generated for OBP SOAP to REST API specification.
  version: 2.1.0

servers:
  - url: https://obp-apigw.cluster.product-obp.internal
    description: It is a generic apigw ingress endpoint. It requires modification to align with client specifications and the target environment.

  
paths:
  /api/v1/addAccountNote:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      operationId: addAccountNote
      summary: This operation creates an Account note entity.
      description: This method allows you to create a user/CSR note for a particular Account.
      tags:
        - Account Note API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/UpdateAccountAddNote'
      responses:
        '201':
            description: Created
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/SuccessfulResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/subscriptionMonthlySpendAmount/reset:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    patch:
      operationId: updateSubscriptionResetMonthlySpendAmount
      summary: This method updates Subscription by reseting monthly spend amount.
      description: This method updates Subscription by reseting monthly spend amount.
      tags:
        - Subscription Spend Amount API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateSubscriptionResetMonthlySpendAmountRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/SuccessfulResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/addSubscriptionNote:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      operationId: addSubscriptionNote
      summary: This operation creates a Subscription note entity
      description: This method allows you to create a user/CSR note for a particular Subscription.
      tags:
        - Subscription Note API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/UpdateSubscriptionAddNote'
      responses:
        '201':
            description: Created
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/SuccessfulResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/subscriptionStateTransition:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    patch:
      operationId: updateSubscriptionWithStateTransition
      summary: This method allows you to update a Subscription and subscription state as well.
      description: This method allows you to update a Subscription and subscription state as well.
      tags:
        - Subscription State Transition API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateSubscriptionWithStateTransitionRequest'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/updateSubscriptionWithStateTransitionResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/subscriptionPpsmSupporter:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    patch:
      operationId: updateSubscriptionsPPSMSupporter
      summary: This method updates Subscription PPSM Supporter.
      description: This method updates Subscription PPSM Supporter.
      tags:
        - Subscription PPSM Supporter API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateSubscriptionsPPSMSupporterRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/SuccessfulResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/subscriptionCreditLimit:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    patch:
      operationId: updateSubscriptionCreditLimit
      summary: This method updates Subscription Credit Limit.
      description: This method updates Subscription Credit Limit.
      tags:
        - Subscription Credit API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateSubscriptionCreditLimitRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/SuccessfulResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/detailedSubscriptionBucketHistory:
    parameters:
    - $ref: '#/components/parameters/spid'
    - $ref: '#/components/parameters/tenant'
    get:
      operationId: listDetailedSubscriptionBucketHistory
      summary: This method returns a list of detailed subscription bucket histories.
      description: This method returns a list of detailed subscription bucket histories.
      tags:
        - Subscription Bucket History API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema:
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/listDetailedSubscriptionBucketHistory'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listDetailedSubscriptionBucketHistoryResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/subscriptionBucketHistory/{id}:
    parameters:
    - $ref: '#/components/parameters/spid'
    - $ref: '#/components/parameters/tenant'
    get:
      operationId: getBucketHistory
      summary: This method returns a bucket history.
      description: This method returns a bucket history.
      tags:
        - Subscription Bucket History API
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Bucket history identifier
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getBucketHistoryResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/subscriptionProfile:
    parameters:
    - $ref: '#/components/parameters/spid'
    - $ref: '#/components/parameters/tenant'
    patch:
      operationId: updateSubscriptionProfile
      summary: This method allows you to update a Subscription.
      description: This method allows you to update certain profile values of a particular Subscription.
      tags:
        - Subscription Profile API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/updateSubscriptionProfile'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/SuccessfulResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    get:
      operationId: getSubscriptionProfile
      summary: This method allows you to retrieve a Subscription.
      description: This method allows you to retrieve a Subscription.
      tags:
        - Subscription Profile API
      parameters:
        - name: accountID
          description: Identifier of the account
          schema:
            type: string
          in: query
        - name: identifier
          description: Identifier of the subscription
          schema:
            type: string
          in: query
        - name: packageID
          description: Package identifier - SIM
          in: query
          schema:
            type: string
        - name: spid
          description: Service Provider Identifier
          in: query
          schema:
            type: integer
        - $ref: '#/components/parameters/mobileNumber'
        - $ref: '#/components/parameters/mobileNumberOwnership'
        - $ref: '#/components/parameters/subscriptionType'
        - $ref: '#/components/parameters/state'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getSubscriptionProfileResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/subscriptionContractStatus:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getSubscriptionContractStatus
      summary: Returns a Subscription Contract Status.
      description: This method returns a Subscription Contract Status.
      tags:
        - Subscription Contract Status API
      parameters:
        - name: accountID
          description: Identifier of the account
          schema:
            type: string
          in: query
        - name: identifier
          description: Identifier of the subscription
          schema:
            type: string
          in: query
        - name: spid
          description: Service Provider Identifier
          in: query
          schema:
            type: integer
        - $ref: '#/components/parameters/mobileNumber'
        - $ref: '#/components/parameters/mobileNumberOwnership'
        - $ref: '#/components/parameters/subscriptionType'
        - $ref: '#/components/parameters/state'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getSubscriptionContractStatusResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/closedUserGroupEntries:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      operationId: addClosedUserGroupEntries
      summary: This operation adds a closed user group (CUG) entry.
      description: This operation adds a closed user group (CUG) entry.
      tags:
        - Closed User Group Entries API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/addClosedUserGroupEntriesRequest'
      responses:
        '201':
            description: Created
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/SuccessfulResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

    delete:
      operationId: removeClosedUserGroupEntries
      summary: This operation removes a closed user group (CUG) entry.
      description: This operation removes a closed user group (CUG) entry.
      tags:
        - Closed User Group Entries API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema:
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/removeClosedUserGroupEntries'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/SuccessfulResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    get:
      operationId: listClosedUserGroupEntries
      summary: This operation returns a list of closed user group (CUG) entries.
      description: This operation returns a list of closed user group (CUG) entries.
      tags:
        - Closed User Group Entries API
      parameters:
        - name: groupID
          in: query
          required: true
          schema:
            type: integer
          description: Closed user group identifier
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listClosedUserGroupEntriesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/alternateInvoice:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      operationId: generateAlternateInvoice
      summary: This method generates alternate invoice.
      description: This method generates alternate invoice.
      tags:
        - Alternate Invoice API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/generateAlternateInvoiceRequest'
      responses:
        '201':
            description: Created
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/SuccessfulResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    patch:
      operationId: applyChargesForAlternateInvoice
      summary: This method requests that charges be applied for the generation of an alternate invoice
      description: This method requests that charges be applied for the generation of an alternate invoice
      tags:
        - Alternate Invoice API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/applyChargesForAlternateInvoiceRequest'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/applyChargesForAlternateInvoiceResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/getProvinces:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getProvinces
      summary: Returns a list of Provinces.
      description: This method returns a list of Provinces.
      tags:
        - Province API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema: 
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/retrieveEntityRequest'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/RetrieveEntityResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/paymentAgent:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listPaymentAgents
      summary: This method returns a list of Payment Agents.
      description: This method returns a list of Payment Agents.
      tags:
        - Payment Agents API
      parameters:
        - name: spid
          description: Service Provider Identifier
          in: query
          schema:
            type: integer
          required: true
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listPaymentAgentsResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            
  /api/v1/entity:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    patch:
      operationId: updateEntity
      summary: This method updates an entity.
      description: This method updates an entity.
      tags:
        - Entity API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateEntityRequest'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/updateEntityResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            
    get:
      operationId: retrieveEntity
      summary: This method retrieves an entity.
      description: This method retrieves an entity.
      tags:
        - Entity API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema: 
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/retrieveEntityRequest'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/RetrieveEntityResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

            
  /api/v1/creditCategory:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: creditCategory
      summary: This method returns a list of Credit Categories.
      description: This method returns a list of Credit Categories.
      tags:
        - Credit Category API
      parameters:
        - name: spid
          description: Service Provider Identifier
          in: query
          schema: 
            type: integer
          required: true
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listCreditCategoryResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/creditCategory/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getCreditCategory
      summary: This method returns credit category.
      description: This method returns a specified credit category.
      tags:
        - Credit Category API
      parameters:
        - name: id
          description: Identifier of the category
          required: true
          schema:
            type: integer
          in: path
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getCreditCategoryResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/accountTransfer:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listAccountTransferRequest
      summary: This method returns a list of Account Transfers.
      description: This method returns a list of Account Transfers.
      tags:
        - Account Transfer API
      parameters:
        - $ref: '#/components/parameters/isAscending'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/pageKey'
        - $ref: '#/components/parameters/limit'
        - name: contMsisdn
          description: MSISDN of the contributor's subscription
          in: query
          schema:
            type: string
          required: false
        - name: destMsisdn
          description: MSISDN of the recipient's subscription
          in: query
          schema:
            type: string
          required: false
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listAccountTransferResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  
  /api/v1/accountRole:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listAccountRoles
      summary: This method returns a list of Account Roles.
      description: This method returns a list of Account Roles.
      tags:
        - Account Role API
      parameters:
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listAccountRolesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            
  /api/v1/accountTypes:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: accountTypes
      summary: This method returns a list of Account Types.
      description: This method returns a list of Account Types.
      tags:
        - Account Types API
      parameters:
        - name: spid
          description: Service Provider Identifier
          in: query
          schema:
            type: integer
          required: true
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listAccountTypesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/accountAgedDebt/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: accountAgedDebt
      summary: This method returns Aged Debt associated with a specified Account ID.
      description: This method returns Aged Debt associated with a specified Account ID.
      tags:
        - Account Aged Debt API
      parameters:
        - name: id
          description: Identifier of the account
          required: true
          schema:
            type: integer
          in: path
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getAccountAgedDebtResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/accountCug/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: accountCug
      summary: This method returns closed user group associated with a specified Account ID.
      description: This method returns closed user group associated with a specified Account ID.
      tags:
        - Account CUG API
      parameters:
        - name: id
          description: Identifier of the account
          required: true
          schema:
            type: integer
          in: path
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getAccountCugResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/accountExtension:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    patch:
      operationId: updatedAccountExtension
      summary: This method updates Account Extensions.
      description: This method updates Account Extensions.
      tags:
        - Account Extension API
      parameters:
        - name: extensionTypeReference
          description: Type of account extension and it's namespace (MutablePoolAccountExtension, MutableFriendsAndFamilyAccountExtension, MutableSubscriberLimitAccountExtension, MutableGroupPricePlanAccountExtension). For specific extension example refer to '#/components/schemas/mutablePoolAccountExtension'.
          in: query
          schema:
            type: string
          required: false
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateAccountExtensionRequest'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/SuccessfulResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

    get:
      operationId: getAccountExtension
      summary: This method retrieves an Account Extension.
      description: This method retrieves an Account Extension.
      tags:
        - Account Extension API
      parameters:
        - name: extensionTypeReference
          description: Extension namespace for reference
          in: query
          schema:
            type: string
          required: true
        - name: accountID
          description: Identifier of the account
          in: query
          schema:
            type: string
          required: false

      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getAccountExtensionResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/detailedAccountExtension:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listDetailedAccountExtensions
      summary: This method returns a list of Detailed Account Extensions.
      description: This method returns a list of Detailed Account Extensions.
      tags:
        - Detailed Account Extension API
      parameters:
        - name: accountID
          description: Identifier of the account
          required: true
          schema:
            type: string
          in: query
        - name: isAscending
          description: Order of returned data
          required: false
          schema:
            type: boolean
          in: query
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listDetailedAccountExtensionsResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/detailedAccountTransaction:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listDetailedAccountTransactions
      summary: This method returns a list of Detailed Account Transactions.
      description: This method returns a list of Detailed Account Transactions.
      tags:
        - Detailed Account Transaction API
      parameters:
        - name: accountID
          description: Identifier of the account
          required: true
          schema:
            type: string
          in: query
        - name: start
          description: Starting range
          required: false
          schema:
            type: string
          in: query
        - name: end
          description: End range
          required: false
          schema:
            type: string
          in: query
        - name: category
          description: Adjustment Type category ID
          required: false
          schema:
            type: integer
          in: query
        - name: pageKey
          description: Page key
          required: false
          schema:
            type: string
          in: query
        - name: limit
          required: true
          description: Maximum entries returned
          schema:
            type: integer
          in: query
        - name: isAscending
          description: Returns result in ascending order
          required: false
          schema:
            type: boolean
          in: query
        - name: ownerType
          description: Indicates whether or not to return transactions from only the subscription level (default) vs. the account and subscription levels
          required: false
          schema:
            type: integer
          in: query
        - name: accountLevelID
          description: If provided, this is the ID of the account level transaction for which to return subscription-level transactions
          required: false
          schema:
            type: integer
          in: query
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listDetailedAccountTransactionsResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/detailedCallDetails:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: detailedCallDetails
      summary: This method returns a list of detailed Call Detail records.
      description: This method returns detailed list of Call Detail records for a particular Subscription.
      tags:
        - Detailed Call Details API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema: 
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/listDetailedCallDetailsRequest''
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listDetailedCallDetailsResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  
  /api/v1/detailedAccountBalance:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: detailedAccountBalance
      summary: This method returns detailed account balances.
      description: This method returns detailed account balances for a particular Account.
      tags:
        - Detailed Account Balance API
      parameters:
        - name: accountID
          description: Identifier of the account
          required: true
          schema: 
            type: string
          in: query
        - name: ascendToResponsible
          description: 'Default if not provided is false'
          required: false
          schema: 
            type: boolean
          in: query
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getDetailedAccountBalancesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            
  /api/v1/callDetail:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listCallDetails
      summary: This method returns a list of Call Detail records.
      description: This method returns a list of Call Detail records for a particular Subscription.
      tags:
        - Call Detail API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema: 
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/listCallDetailsRequest'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listCallDetailsResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            
  /api/v1/callDetail/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getCallDetail
      summary: This method returns detailed information on a particular Call Detail record.
      description: This method returns detailed information on a particular Call Detail record for a particular Subscription.
      tags:
        -  Call Detail API
      parameters:
        - name: id
          description: Identifier of the call detail
          required: true
          schema: 
            type: integer
          in: path
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getCallDetailResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/discountClass/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getDiscountClass
      summary: This method returns a specified discount class.
      description: This method returns discount class.
      tags:
        - Discount Class API
      parameters:
        - name: id
          description: Identifier of the category
          required: true
          schema:
            type: integer
          in: path
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getDiscountClassResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/discountClass:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listDiscountClasses
      summary: This method returns a list of discount classes.
      description: This method returns a list of discount classes.
      tags:
        - Discount Class API
      parameters:
        - name: spid
          description: Service Provider Identifier
          in: query
          schema:
            type: integer
          required: true
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/listDiscountClassesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    patch:
      operationId: updateDiscountClass
      summary: This method updates discount class.
      description: This method updates discount class.
      tags:
        - Discount Class API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateDiscountClassRequest'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/updateDiscountClassResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/supplementaryData:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getSupplementaryData
      summary: This method returns a Supplementary data.
      description: This method returns a Supplementary data.
      tags:
        - Supplementary Data API
      parameters:
        - name: identifier
          description: Account or Subscription identifier which is connected to the supplementary data
          required: true
          schema:
            type: string
          in: query
        - name: targetType
          description: Target type which defines if Supplementary data be retrieved by Account or Subscription
          required: true
          schema:
            type: string
          in: query
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getSupplementaryDataResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    delete:
      operationId: removeSupplementaryData
      summary: This method removes Supplementary data.
      description: This method returns Supplementary data.
      tags:
        - Supplementary Data API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema:
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/removeSupplementaryData'
        - name: targetType
          required: true
          schema:
            type: string
          in: query
          description: Target type which defines will Supplementary data be retrieved by Account or Subscription.
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/removeSupplementaryDataResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/dispute/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getDisputeRequest
      summary: This method provides a mechanism to fetch a dispute.
      description: This method provides a mechanism to fetch a dispute.
      tags:
        - Dispute API
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Dispute identifier
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getDisputeResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/accountDisputes:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listAccountDisputes
      summary: This method returns a list of disputes associated with an account.
      description: This method returns a list of disputes associated with an account.
      tags:
        - Dispute API
      parameters:
        - name: accountID
          description: Identifier of the account
          required: true
          schema:
            type: string
          in: query
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/pageKey'
        - name: limit
          description: Maximum entries returned.
          required: true
          schema:
            type: integer
          in: query
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listAccountDisputesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/account:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: accountsForID
      summary: This method returns a list of Account entities based on ID(s).
      description: This method returns a list of Account entities based on the ID(s) passed in the request body.
      tags:
        - Account API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema: 
            type: string
          description: Base64 encoded. See the schema '#/components/schema/listAccountsForIDRequest''
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listAccountsForIDResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
                  
    post:
      operationId: createAccount
      summary: This method creates an account.
      description: This method creates an account.
      tags:
        - Account API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/createAccountRequest'
      responses:
        '201':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/createAccountResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/collectionAgencies:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listCollectionAgencies
      summary: This method returns a list of collection agencies.
      description: This method returns a list of collection agencies.
      tags:
        - Collection Agencies API
      parameters:
        - $ref: '#/components/parameters/spid'
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listCollectionAgenciesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/closedUserGroupShortCodeEntries:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      operationId: addClosedUserGroupShortCodeEntries
      summary: This operation adds a closed user group (CUG) short code entries.
      description: This operation adds a closed user group (CUG) short code entries.
      tags:
        - Closed User Group Short Code Entries API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/addClosedUserGroupShortCodeEntriesRequest'
      responses:
        '201':
            description: Created
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/SuccessfulResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

    get:
      operationId: listClosedUserGroupShortCodeEntries
      summary: This method returns a list of closed user group (CUG) short code entries.
      description: This method returns a list of closed user group (CUG) short code entries.
      tags:
        - Closed User Group Short Code Entries API
      parameters:
        - name: groupID
          in: query
          required: true
          schema:
            type: integer
          description: Closed User Group (CUG) identifier
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listClosedUserGroupShortCodeEntriesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

    patch:
      operationId: updateClosedUserGroupShortCodeEntries
      summary: This operation updates closed user group (CUG) short code entries.
      description: This operation updates closed user group (CUG) short code entries.
      tags:
        - Closed User Group Short Code Entries API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateClosedUserGroupShortCodeEntriesRequest'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/SuccessfulResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/closedUserGroupTemplate:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listDetailedClosedUserGroupTemplates
      summary: This method returns a list of detailed closed user group (CUG) templates.
      description: This method returns a list of detailed closed user group (CUG) templates.
      tags:
        - Closed User Group Template API
      parameters:
        - $ref: '#/components/parameters/spid'
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listDetailedClosedUserGroupTemplatesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/closedUserGroup:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      operationId: createClosedUserGroup
      summary: This method creates a closed user group (CUG).
      description: This method creates a closed user group (CUG).
      tags:
        - Closed User Group API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/createClosedUserGroupRequest'
      responses:
        '201':
            description: Created
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/createClosedUserGroupResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    patch:
      operationId: updateClosedUserGroup
      summary: This method updates a closed user group (CUG).
      description: This method updates a closed user group (CUG).
      tags:
        - Closed User Group API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateClosedUserGroupRequest'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/updateClosedUserGroupResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    get:
      operationId: listClosedUserGroups
      summary: This method returns a list of closed user groups (CUGs).
      description: This method returns a list of closed user groups (CUGs).
      tags:
        - Closed User Group API
      parameters:
        - $ref: '#/components/parameters/spid'
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listClosedUserGroupsResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/closedUserGroup/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getClosedUserGroup
      summary: This method returns a closed user group (CUG).
      description: This method returns a closed user group (CUG).
      tags:
        - Closed User Group API
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Closed User Group (CUG) identifier
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getClosedUserGroupResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/detailedClosedUserGroup:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listDetailedClosedUserGroups
      summary: This method returns a list of detailed closed user groups (CUGs).
      description: This method returns a list of detailed closed user groups (CUGs).
      tags:
        - Detailed Closed User Group API
      parameters:
        - $ref: '#/components/parameters/spid'
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listDetailedClosedUserGroupsResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/transactionMethods:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: transactionMethods
      summary: This method returns a list of Transaction Methods.
      description: This method returns a list of Transaction Methods as defined in CRM.
      tags:
        - Transaction Methods API
      parameters:
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listTransactionMethodsResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            
  /api/v1/subscriptionTransaction:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      operationId: subscriptionTransaction
      summary: This method allows you to create a Subscription transaction.
      description: This method allows you to create a transaction for a particular Subscription.
      tags:
        - Subscription Transaction API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/createSubscriptionTransactionRequest'
      responses:
        '201':
            description: Created
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/createSubscriptionTransactionResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/subscription:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      operationId: createSubscription
      summary: This method creates Subscription.
      description: This method creates Subscription.
      tags:
        - Subscription API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/createSubscriptionRequest'
      responses:
        '201':
            description: Created
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/createSubscriptionResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/subscriptionPoolQuotaUsage/reset:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    patch:
      operationId: updateSubscriptionResetPoolQuotaUsage
      summary: This method allows the client to reset a subscription’s monthly group pool quota usage (to zero).
      description: This method allows the client to reset a subscription’s monthly group pool quota usage (to zero).
      tags:
        - Subscription Pool API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateSubscriptionResetPoolQuotaUsageRequest'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/SuccessfulResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/subscriptionCardPackage:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    patch:
      operationId: updateSubscriptionCardPackage
      summary: This method allows you to update a Subscription card package.
      description: This method allows you to update a Subscription card package.
      tags:
        - Subscription Card Package API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateSubscriptionCardPackageRequest'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/SuccessfulResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            
  /api/v1/adjustmentType/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: adjustmentType
      summary: This method returns detailed information for a particular Adjustment Type.
      description: This method returns detailed information for a particular Adjustment Type.
      tags:
        - Adjustment Type API
      parameters:
        - name: id
          description: Identifier of the Customer
          required: true
          schema:
            type: integer
          in: path
        - name: spid
          description: Service Provider Identifier
          in: query
          schema: 
            type: integer
          required: true
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getAdjustmentTypeResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/mnpEligibility:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      tags:
        - Mnp Check Eligibility API
      summary: Checks Mnp Eligibility.
      description: This operation checks Mnp elgibility.
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/mnpEligibilityRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mnpEligibilityResponse'
        '400':
          description: Bad Request
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorCMSpecific'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCMSpecific'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCMSpecific'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCMSpecific'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCMSpecific'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCMSpecific'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCMSpecific'
            
  /api/v1/schedule:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: readSchedules
      summary: This method returns a list of Schedules.
      description: This method returns a list of Schedule entities.
      tags:
        - Schedule API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema: 
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/readSchedulesRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/readSchedulesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  
  /api/v1/schedule/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    patch:
      operationId: updateSchedule
      summary: This method updates a specified Schedule entity.
      description: This method updates a specified Schedule entity determined by the ID identified in the endpoint.
      tags:
        - Schedule API
      parameters:
        - name: id
          description: Identifier of the Schedule
          required: true
          schema:
            type: integer
          in: path
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateScheduleRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/updateScheduleResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            
  /api/v1/token/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    delete:
      operationId: token
      summary: This method deletes a Token entity based on specified ID.
      description: This method deletes a Token entity determined by the ID specified in the endpoint.
      tags:
        - Token API
      parameters:
        - name: id
          description: Identifier of the Token
          required: true
          schema: 
            type: integer
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/deleteTokenResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/fraudListMsisdns:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    delete:
      operationId: removeMsisdnsFromFraudList
      summary: This method deletes MSISDNs from Fraud list.
      description: This method deletes MSISDNs from Fraud list.
      tags:
        - Fraud List MSISDN API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema:
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/removeMsisdnsFromFraudListRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/removeMsisdnsFromFraudListResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            
  /api/v1/balance:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: requestBalance
      summary: This method requests a balance.
      description: This method requests a balance.
      tags:
        - Balance API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema: 
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/requestBalanceRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/requestBalanceResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/directDebit:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      operationId: initiateDirectDebit
      summary: This method initiates Direct Debit.
      description: This method initiates Direct Debit.
      tags:
        - Direct Debit API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/initiateDirectDebitRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/initiateDirectDebitResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/debit:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      operationId: requestDebit
      summary: This method requests debit.
      description: This method requests debit.
      tags:
        - Debit API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/requestDebitRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/requestDebitResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/credit:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      operationId: requestCredit
      summary: This method requests credit.
      description: This method requests credit.
      tags:
        - Credit API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/requestCreditRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/requestCreditResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  
  /api/v1/invoice:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listInvoices
      summary: This method returns a list of invoices for a particular account.
      description: This method returns a list of invoices for a particular account.
      tags:
        - Invoice API
      parameters:
        - name: accountID
          description: Identifier of the account
          required: true
          schema: 
            type: string
          in: query
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/listInvoicesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'  
  
  /api/v1/invoice/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getInvoice
      summary: This method returns an invoice for a particular account
      description: This method returns an invoice for a particular account
      tags:
        - Invoice API
      parameters:
        - name: accountID
          description: Identifier of the account
          required: true
          schema: 
            type: string
          in: query
        - name: id
          description: Identifier of the invoice
          required: true
          schema:
            type: string
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/getInvoiceResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'    

  /api/v1/voucher:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      operationId: createSimpleVoucher
      summary: This method creates a simple voucher.
      description: This method creates a Simple Voucher entity.
      tags:
        - Voucher API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/createSimpleVoucherRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/createSimpleVoucherResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            
    get:
      operationId: getVoucherInfo
      summary: This method retrieves voucher information
      description: This method retrieves voucher information
      tags:
        - Voucher API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema:
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/getVoucherInfoRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/getVoucherInfoResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'   
  
  /api/v1/transaction/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getTransaction
      summary: This method returns a transaction for a particular account.
      description: This method returns a transaction for a particular account.
      tags:
        - Transaction API
      parameters:
        - name: id
          description: Identifier of the Transaction
          required: true
          schema:
            type: integer
          in: path
        - $ref: '#/components/parameters/ownerType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/getTransactionResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/transactions/{externalTransactionNumber}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listTransactionsByExternalTransactionNumber
      summary: Returns a list of Transactions by external transaction number.
      description: Returns a list of Transactions by external transaction number.
      tags:
        - Transaction API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema:
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/listTransactionsByExternalTransactionNumber'
        - name: externalTransactionNumber
          in: path
          required: true
          schema:
            type: string
          description: Transaction external number
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listTransactionsByExternalTransactionNumberResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            
  /api/v1/billCycle:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listBillCycles
      summary: This method returns a list of Bill Cycles.
      description: This method returns a list of Bill Cycles.
      tags:
        - Bill Cycle API
      parameters:
        - name: spid
          description: Service Provider Identifier
          in: query
          schema: 
            type: integer
          required: true
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/listBillCyclesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/billCycle/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getBillCycle
      summary: This method returns a Bill Cycle.
      description: This method returns a Bill Cycle.
      tags:
        - Bill Cycle API
      parameters:
        - name: id
          description: Identifier of the Bill Cycle
          required: true
          schema:
            type: integer
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/getBillCycleResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/accountSystemType:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    patch:
      operationId: updateAccountConvertSystemTypeToHybrid
      summary: This method updates Account by Converting System Type to Hybrid.
      description: This method updates Account by Converting System Type to Hybrid.
      tags:
        - Account System Type API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateAccountConvertSystemTypeToHybridRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/updateAccountConvertSystemTypeToHybridResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/accountBillCycle:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    patch:
      operationId: updateAccountBillCycle
      summary: This method updates Account Bill Cycle.
      description: This method updates Account Bill Cycle.
      tags:
        - Account Bill Cycle API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateAccountBillCycleRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/updateAccountBillCycleResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error' 
            
  /api/v1/voucherStatus:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    patch:
      operationId: updateVoucherStatus
      summary: This method updates a voucher status
      description: This method updates a voucher status
      tags:
        - Voucher API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateVoucherStatusRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/updateVoucherStatusResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error' 
  
  /api/v1/promotions:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getPromotions
      summary: This method returns promotion details.
      description: This method returns promotion details.
      tags:
        - Promotions API
      parameters:
        - name: accountID
          description: Identifier of the account
          schema: 
            type: string
          in: query
        - name: spid
          description: Service Provider Identifier
          in: query
          schema:
            type: integer
        - $ref: '#/components/parameters/identifier'
        - $ref: '#/components/parameters/mobileNumber'
        - $ref: '#/components/parameters/mobileNumberOwnership'
        - $ref: '#/components/parameters/subscriptionType'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/getPromotionsResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /api/v1/findAndValidatePromotions:
    post:
      operationId: findAndValidatePromotions
      summary: This method returns promotions eligible with given criteria and those applicability for the subscriber at the same time.
      description: This method validates applicability of eligible promotions for the subscriber within provided criteria
      tags:
        - Promotions API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/findAndValidatePromotions'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/findAndValidatePromotionResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/subscriptionRewardFlag:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getSubscriptionRewardFlag
      summary: This method returns subscription reward flag information.
      description: This method returns subscription reward flag information.
      tags:
        - Subscription Reward Flag API
      parameters:
        - name: accountID
          description: Identifier of the account
          schema: 
            type: string
          in: query
        - name: spid
          description: Service Provider Identifier
          in: query
          schema:
            type: integer
        - $ref: '#/components/parameters/identifier'
        - $ref: '#/components/parameters/mobileNumber'
        - $ref: '#/components/parameters/mobileNumberOwnership'
        - $ref: '#/components/parameters/subscriptionType'
        - $ref: '#/components/parameters/state'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/getSubscriptionRewardFlagResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'    
            
  /api/v1/subscriptionPromotionStatus:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: subscriptionPromotionStatus
      summary: This method returns subscription promotion status.
      description: This method returns detailed information for a subscription promotion status.
      tags:
        - Subscription Promotion API
      parameters:
        - name: accountID
          description: Identifier of the account
          schema: 
            type: string
          in: query
        - name: spid
          description: Service Provider Identifier
          in: query
          schema:
            type: integer
        - $ref: '#/components/parameters/identifier'
        - $ref: '#/components/parameters/mobileNumber'
        - $ref: '#/components/parameters/mobileNumberOwnership'
        - $ref: '#/components/parameters/subscriptionType'
        - $ref: '#/components/parameters/state'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/getSubscriptionPromotionStatusResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'   

  /api/v1/accountBalanceQuery:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: accountBalanceQuery
      summary: This method executes account balance query.
      description: This method executes account balance query.
      tags:
        - Account Balance API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema: 
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/executeAccountBalanceQueryRequest''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/executeAccountBalanceQueryResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/screeningTemplate:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listScreeningTemplates
      summary: This method returns a list of Screening Templates.
      description: This method returns a list of Screening Templates.
      tags:
        - Screening Template API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema:
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/listScreeningTemplatesRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/listScreeningTemplatesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/accountTransaction:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      operationId: accountTransaction
      summary: This method creates an account transaction.
      description: This method creates an account transaction.
      tags:
        - Account Transaction API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/createAccountTransactionRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/createAccountTransactionResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    get:
      operationId: listAccountTransactions
      summary: This method returns a list of transactions for a particular account.
      description: This method returns a list of transactions for a particular account.
      tags:
        - Account Transaction API
      parameters:
        - name: accountID
          description: Account Identifier
          in: query
          schema: 
            type: string
          required: true
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/category'
        - $ref: '#/components/parameters/pageKey'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/isAscending'
        - $ref: '#/components/parameters/ownerType'
        - $ref: '#/components/parameters/accountLevelID'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/listAccountTransactionsResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/subscriptionPricePlanOptionsFilterable:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getSubscriptionPricePlanOptionsFilterable
      summary: This method returns filtered subscription price plan options
      description: This method returns filtered subscription price plan options
      tags:
        - Subscription Price Plan Option API
      parameters:
        - name: accountID
          description: Identifier of the account
          schema:
            type: string
          in: query
        - name: spid
          description: Service Provider Identifier
          in: query
          schema:
            type: integer
        - $ref: '#/components/parameters/identifier'
        - $ref: '#/components/parameters/mobileNumber'
        - $ref: '#/components/parameters/subscriptionType'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/pricePlanID'
        - $ref: '#/components/parameters/getPlanAmountAndDiscount'
        - $ref: '#/components/parameters/getOptions'
        - $ref: '#/components/parameters/getPlanPeriod'
        - $ref: '#/components/parameters/getExtendedOptionParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/subscriptionPricePlanOptionsFilterableAllFiltersTrue'
                - $ref: '#/components/schemas/subscriptionPricePlanOptionsFilterableAllFiltersFalse'
                - $ref: '#/components/schemas/subscriptionPricePlanOptionsFilterableGetDiscountAndAmountTrue'
                - $ref: '#/components/schemas/subscriptionPricePlanOptionsFilterableGetOptionsTrue'
                - $ref: '#/components/schemas/subscriptionPricePlanOptionsFilterableGetPlanPeriodTrue'
                - $ref: '#/components/schemas/subscriptionPricePlanOptionsFilterableGetDiscountAndAmountAndGetOptionsTrue'
                - $ref: '#/components/schemas/subscriptionPricePlanOptionsFilterableGetDiscountAndAmountAndGetPlanPeriodTrue'
                - $ref: '#/components/schemas/subscriptionPricePlanOptionsFilterableGetOptionsAndGetPlanPeriodTrue'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/subscriptionRechargeVoucherBatch:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    patch:
      operationId: updateSubscriptionRechargeVoucherBatch
      summary: This method updates a batch of Subscription Recharge Vouchers.
      description: This method updates a batch of Subscription Recharge Vouchers.
      tags:
        - Subscription Recharge Voucher API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/updateSubscriptionRechargeVoucherBatchRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/updateSubscriptionRechargeVoucherBatchResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'


  /api/v1/contract:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listContracts
      summary: This method returns a list of contracts.
      description: This method returns a list of contracts.
      tags:
        - Contract API
      parameters:
        - name: spid
          description: Service Provider Identifier
          in: query
          schema:
            type: integer
          required: true
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/listContractsResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/contract/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getContract
      summary: This method returns a specified contract based on the contract ID.
      description: This method returns a specified contract based on the contract ID.
      tags:
        - Contract API
      parameters:
        - name: id
          description: Identifier of the contract
          required: true
          schema:
            type: integer
          in: path
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getContractResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/paymentPlan:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listPaymentPlans
      summary: This method returns a list of Payment Plans.
      description: This method returns a list of Payment Plans.
      tags:
        - Payment Plan API
      parameters:
        - name: spid
          description: Service Provider Identifier
          in: query
          schema:
            type: integer
          required: true
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/listPaymentPlansResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/paymentPlan/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getPaymentPlan
      summary: This method returns a specified payment plan based on the ID.
      description: This method returns a specified payment plan based on the ID.
      tags:
        - Payment Plan API
      parameters:
        - name: id
          description: Identifier of the payment plan
          required: true
          schema:
            type: integer
          in: path
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getPaymentPlanResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/subscriptionSecondaryBalance:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getSubscriptionSecondaryBalance
      summary: This method returns subscription secondary balances.
      description: This method returns subscription secondary balances.
      tags:
        - Subscription Secondary Balance API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema:
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/getSubscriptionSecondaryBalanceRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/getSubscriptionSecondaryBalanceResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/subscriptionBundleBalancesWithSummary:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getSubscriptionBundleBalancesWithSummary
      summary: This method returns subscription bundle balances with summary.
      description: This method returns subscription bundle balances with summary.
      tags:
        - Subscription Bundle Balance API
      parameters:
        - name: accountID
          required: false
          description: Identifier of the account.
          schema:
            type: string
          in: query
        - name: spid
          required: false
          description: Service Provider Identifier.
          in: query
          schema:
            type: integer
        - name: identifier
          required: false
          description: Subscription identifier.
          in: query
          schema:
            type: string
        - name: mobileNumber
          required: false
          description: Mobile number.
          in: query
          schema:
            type: string
        - name: mobileNumberOwnership
          required: false
          description: Mobile number ownership.
          in: query
          schema:
            type: string
        - name: subscriptionType
          required: false
          description: Subscription type.
          in: query
          schema:
            type: string
        - name: state
          required: false
          description: Subscription's state
          in: query
          schema:
            type: string
        - name: bucketID
          required: false
          description: If provided, balances returned will be filtered by bucket ID
          in: query
          schema:
            type: string
        - name: bundleID
          required: false
          description: If provided, balances returned will be filtered by bundle ID
          in: query
          schema:
            type: string
        - name: bundleCategory
          required: false
          description: If provided, balances returned will be filtered by bundle category
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/getSubscriptionBundleBalancesWithSummaryResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/accountParentV2:
    parameters:
    - $ref: '#/components/parameters/spid'
    - $ref: '#/components/parameters/tenant'
    patch:
      operationId: updateAccountParentV2
      summary: This method allows you to update an account's parent.
      description: This method allows you to update an account's parent.
      tags:
        - Account Parent API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/updateAccountParentV2Request'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/updateAccountParentV2Response'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/usageType:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listUsageTypes
      summary: This method returns a list of Usage Types.
      description: This method returns a list of Usage Types.
      tags:
        - Usage Type API
      parameters:
        - name: spid
          description: Service Provider Identifier
          in: query
          schema:
            type: integer
          required: true
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/listUsageTypesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/usageType/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getUsageType
      summary: This method returns a Usage Type.
      description: This method returns a Usage Type.
      tags:
        - Usage Type API
      parameters:
        - name: id
          description: Identifier of the Usage Type
          required: true
          schema:
            type: integer
          in: path
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/getUsageTypeResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/callType:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listCallTypes
      summary: This method returns a list of Call Type records.
      description: This method returns a list of Call Type records.
      tags:
        - Call Type API
      parameters:
        - name: spid
          description: Service Provider Identifier
          in: query
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/listCallTypesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/callType/{id}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getCallType
      summary: This method returns information regarding Call Type specified by the Call ID.
      description: This method returns information regarding Call Type specified by the Call ID.
      tags:
        -  Call Type API
      parameters:
        - name: id
          description: Identifier of the call
          required: true
          schema:
            type: integer
          in: path
        - name: spid
          description: Service Provider Identifier
          required: true
          schema:
            type: integer
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/getCallTypeResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/glCode:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listGLCodes
      summary: This method lists GL codes.
      description: This method lists GL codes.
      tags:
        - GL Code API
      parameters:
        - name: spid
          description: Service Provider Identifier
          required: true
          schema:
            type: integer
          in: query
        - name: limit
          description: Maximum entries returned
          required: true
          schema:
            type: integer
          in: query
        - $ref: '#/components/parameters/pageKey'
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/listGLCodesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/invoiceDeliveryOptions:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listInvoiceDeliveryOptions
      summary: This method returns a list of Invoice Delivery Options.
      description: This method returns a list of Invoice Delivery Options.
      tags:
        - Invoice Delivery Options API
      parameters:
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/listInvoiceDeliveryOptionsResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/blacklistStatus:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getBlacklistStatus
      summary: This method returns a blacklist status.
      description: This method returns a blacklist status.
      tags:
        - Blacklist Status API
      parameters:
        - name: identificationType
          description: Identification type
          required: false
          schema:
            type: string
          in: query
        - name: identificationValue
          description: Identification value
          required: false
          schema:
            type: string
          in: query
        - name: identificationExpiry
          description: Identification expiry
          required: false
          schema:
            type: string
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/getBlacklistStatusResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/detailedSubscriptionContracts:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listDetailedSubscriptionContracts
      summary: This method returns a list of Detailed Subscription Contracts.
      description: This method returns a list of Detailed Subscription Contracts.
      tags:
        - Detailed Subscription Contracts API
      parameters:
        - name: spid
          description: Service Provider Identifier
          required: true
          schema:
            type: integer
          in: query
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/listDetailedSubscriptionContractsResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/subscriptionContracts:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listSubscriptionContracts
      summary: This method returns a list of Subscription Contracts.
      description: This method returns a list of Subscription Contracts.
      tags:
        - Subscription Contracts API
      parameters:
        - name: spid
          description: Service Provider Identifier
          required: true
          schema:
            type: integer
          in: query
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/listSubscriptionContractsResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/convertIndividualToGroup:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    patch:
      operationId: convertIndividualToGroup
      summary: This method converts individual account to the group.
      description: This method converts individual account to the group.
      tags:
        - Convert Individual To Group API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/convertIndividualToGroupRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/convertIndividualToGroupResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/accountExtension/{accountId}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    delete:
      operationId: updateAccountRemoveExtension
      summary: This method updates account and removes extension.
      description: This method updates account and removes extension.
      tags:
        - Account Extension API
      parameters:
        - name: accountId
          description: Identifier of the Account
          required: true
          schema:
            type: integer
          in: path
        - name: extensionTypeReference
          description: Extension type reference
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/SuccessfulResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/subscriptionDeviceType:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getSubscriptionDeviceType
      summary: Returns the Subscription Device Type.
      description: This method returns the Subscription Device Type.
      tags:
        - Subscription Device Type API
      parameters:
        - name: accountID
          description: Identifier of the account
          schema:
            type: string
          in: query
        - name: identifier
          description: Identifier of the subscription
          schema:
            type: string
          in: query
        - name: spid
          description: Service Provider Identifier
          in: query
          schema:
            type: integer
        - $ref: '#/components/parameters/mobileNumber'
        - $ref: '#/components/parameters/mobileNumberOwnership'
        - $ref: '#/components/parameters/subscriptionType'
        - $ref: '#/components/parameters/state'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getSubscriptionDeviceTypeResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/accountBalance/{accountID}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getAccountBalance
      summary: Returns the Account Balance.
      description: This method returns the Account Balance.
      tags:
        - Account Balance API
      parameters:
        - name: accountID
          description: Identifier of the account
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getAccountBalanceResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/accountBillCycleActivity/{accountID}:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: getAccountBillCycleActivity
      summary: Returns information related to the specified accounts Bill Cycle activity.
      description: This method returns information related to the specified accounts Bill Cycle activity.
      tags:
        - Account Bill Cycle API
      parameters:
        - name: accountID
          description: Identifier of the account
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/getAccountBillCycleActivityResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/individualSubscriber:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      operationId: createIndividualSubscriber
      summary: This method creates an individual subscriber.
      description: This method creates an individual subscriber.
      tags:
        - Subscriber API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/createIndividualSubscriberRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/createIndividualSubscriberResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/billingType:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    patch:
      operationId: convertBillingType
      summary: This method converts billing type.
      description: This method converts billing type.
      tags:
        - Billing Type API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/convertBillingTypeRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/convertBillingTypeResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/detailedCallDetailBundles:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listDetailedCallDetailsWithBundles
      summary: This method returns a list of detailed Call Detail records with bundles.
      description: This method returns detailed list of Call Detail records for a particular Subscription with bundles.
      tags:
        - Detailed Call Details API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema:
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/listDetailedCallDetailsRequest''
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listDetailedCallDetailsWithBundlesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/options/validate:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    patch:
      operationId: validateAndUpdateOptions
      summary: This method validates and updates options.
      description: This method validates and updates options.
      tags:
        - Options API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/validateAndUpdateOptionsRequest'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/validateAndUpdateOptionsResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/subscriptionPersonalListPlanEntries:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    post:
      operationId: addSubscriptionPersonalListPlanEntries
      summary: This method adds plan entries to a personal subscription list.
      description: This method adds plan entries to a personal subscription list.
      tags:
        - Subscription Personal List Plan API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/addSubscriptionPersonalListPlanEntriesRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/SuccessfulResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

    get:
      operationId: listSubscriptionPersonalListPlanEntries
      summary: This method lists plan entries from a personal subscription list.
      description: This method lists plan entries from a personal subscription list.
      tags:
        - Subscription Personal List Plan API
      parameters:
        - name: accountID
          description: Identifier of the account
          schema:
            type: string
          in: query
        - name: identifier
          description: Identifier of the subscription
          schema:
            type: string
          in: query
        - name: spid
          description: Service Provider Identifier
          in: query
          schema:
            type: integer
        - $ref: '#/components/parameters/mobileNumber'
        - $ref: '#/components/parameters/mobileNumberOwnership'
        - $ref: '#/components/parameters/subscriptionType'
        - $ref: '#/components/parameters/state'
        - name: listID
          description: The subscription’s personal list plan ID. Required in case the subscriber has more than one Personal List Plan provisioned.
          in: query
          schema:
            type: integer
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listSubscriptionPersonalListPlanEntriesResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

    delete:
      operationId: removeSubscriptionPersonalListPlanEntries
      summary: This method removes a plan entry/entries from a personal subscription list.
      description: This method removes a plan entry/entries from a personal subscription list.
      tags:
        - Subscription Personal List Plan API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema:
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/removeSubscriptionPersonalListPlanEntries'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/SuccessfulResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /api/v1/ppsmSupportee:
    parameters:
      - $ref: '#/components/parameters/spid'
      - $ref: '#/components/parameters/tenant'
    get:
      operationId: listPPSMSupportees
      summary: Lists the subscriptions currently supported by the given subscription.
      description: Lists the subscriptions currently supported by the given subscription.
      tags:
        - PPSM Supportee API
      parameters:
        - name: requestPayload
          in: query
          required: true
          schema:
            type: string
          description: Base64 encoded. See the schema '#/components/schemas/listPPSMSupporteesRequest'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  oneOf:
                  - $ref: '#/components/schemas/listPPSMSupporteesResponse'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/activateMobile:
    post:
      operationId: activateMobile
      summary: This method activates a mobile.
      description: This method  activates a mobile.
      tags:
        - Mobile API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/requestActivateMobile'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/activateMobileResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          
          
  /api/v1/rechargeMobile:
    post:
      operationId: rechargeMobile
      summary: This method recharges a mobile.
      description: This method  recharges a mobile.
      tags:
        - Mobile API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/requestRechargeMobile'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/rechargeMobileResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

          
  /api/v1/reverseActivation:
    post:
      operationId: reverseActivation
      summary: This method reverses an activation.
      description: This method  recharges an activation.
      tags:
        - Mobile API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/requestReverseActivation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/reverseActivationResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/v1/detailedPersonalListPlans:
    get:
      operationId: listDetailedPersonalListPlans
      summary: This method returns a list of detailed personal list plans.
      description: This method returns a list of detailed personal list plans.
      tags:
        - Detailed Personal List Plans API
      parameters:
        - $ref: '#/components/parameters/spid'
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/isAscending'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/listDetailedPersonalListPlansResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/reverseRecharge:
    post:
      operationId: reverseRecharge
      summary: This method reverses a recharge.
      description: This method  recharges a recharge.
      tags:
        - Mobile API
      requestBody:
        required: true
        description: Request payload
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/requestReverseRecharge'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/reverseRechargeResponse'
        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error400'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error404'
        '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
                  

  /api/v1/mobileNumbers:
    get:
      operationId: listMobileNumbers
      summary: This method returns a list of mobile numbers.
      description: This method returns a list of mobile numbers.
      tags:
        - Mobile Numbers API
      parameters:
        - $ref: '#/components/parameters/spid'
        - $ref: '#/components/parameters/tenant'
        - name: groupId
          in: query
          required: true
          description: GroupId of the mobile numbers.
          schema:
            type: integer
        - name: state
          in: query
          required: false
          description: Mobile number state.
          schema:
            type: integer
        - name: pageKey
          in: query
          required: false
          description: Page key.
          schema:
            type: string
        - name: limit
          in: query
          required: true
          description: Limit.
          schema:
            type: integer
        - name: isAscending
          in: query
          required: false
          description: Returns result in ascending order.
          schema:
            type: boolean
        - name: collisionAvoidance
          in: query
          required: false
          description: Collision avoidance.
          schema:
            type: boolean
        - name: Region
          in: query
          required: false
          description: Limit the results only to ranges assigned to a given region.
          schema:
            type: integer
        - name: ASL
          in: query
          required: false
          description: Limit the results only to ranges assigned to a given location.
          schema:
            type: integer
        - name: paidType
          in: query
          required: false
          description: Indicates the type of subscription (e.g., prepaid), which may use the mobile number.
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/listMobileNumbersResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

security:
  - oAuth2:
    - obp-apigw:read
    - obp-apigw:write

components:
  securitySchemes:
    oAuth2:
      type: oauth2
      description: See http://developers.gettyimages.com/api/docs/v3/oauth2.html
      flows: 
        clientCredentials: 
          tokenUrl: protocol/openid-connect/token
          scopes:
            obp-apigw:read: Read access
            obp-apigw:write: Write access 
        authorizationCode:
          authorizationUrl: protocol/openid-connect/auth
          tokenUrl: protocol/openid-connect/token
          scopes:
            obp-apigw:read: Read access
            obp-apigw:write: Write access
            
  parameters:
    spid:
      in: header
      name: spid
      description: Service Provider Identifier
      schema:
        type: integer
      required: true
      
    tenant:
      in: header
      name: tenant
      description: Name of the tenant
      schema:
        type: string
      required: true
      
    isAscending:
      in: query
      name: isAscending
      description: Returns result in ascending order
      schema:
        type: boolean

    identifier:
      in: query
      name: identifier
      description: Identifier of the account
      schema:
        type: string
        
    mobileNumber:
      in: query
      name: mobileNumber
      description: Mobile number
      schema:
        type: string
        
    mobileNumberOwnership:
      in: query
      name: mobileNumberOwnership
      description: Mobile number ownership
      schema:
        type: string
        
    subscriptionType:
      in: query
      name: subscriptionType
      description: Subscription type
      schema:
        type: string
        
    state:
      in: query
      name: state
      description: State
      schema:
        type: string
        
    lang:
      in: query
      name: lang
      description: Language
      schema:
        type: string
      
    start:
      in: query
      name: start
      description: Start
      schema:
        type: string
        
    end:
      in: query
      name: end
      description: End
      schema:
        type: string
        
    category:
      in: query
      name: category
      description: Category
      schema:
        type: string
        
    pageKey:
      in: query
      name: pageKey
      description: Page key
      schema:
        type: string
        
    limit:
      in: query
      name: limit
      description: Maximum entries returned
      schema:
        type: integer
    
    ownerType:
      in: query
      name: ownerType
      description: Owner type
      schema:
        type: string
        
    accountLevelID:
      in: query
      name: accountLevelID
      description: Account Level Identifier
      schema:
        type: string

    pricePlanID:
      in: query
      name: pricePlanID
      description: Price Plan Identifier
      schema:
        type: string

    getPlanAmountAndDiscount:
      in: query
      name: getPlanAmountAndDiscount
      description: Filter that determines whether 'MRCAmount' and 'DiscountAmount' are included in the response 'parameters'
      schema:
        type: boolean

    getOptions:
      in: query
      name: getOptions
      description: Filter that determines whether 'parameters' are included per 'item' in the response
      schema:
        type: boolean

    getPlanPeriod:
      in: query
      name: getPlanPeriod
      description: Filter that determines whether 'recurrence' is included per 'item' in the response
      schema:
        type: boolean

    getExtendedOptionParameters:
      in: query
      name: getExtendedOptionParameters
      description: If 'true', will return all optional parameters except 'name'
      schema:
        type: boolean

  schemas:
    executeAccountBalanceQueryRequest:
      type: object
      properties:
        executeAccountBalanceQuery:
          $ref: '#/components/schemas/executeAccountBalanceQuery'
  
    updateAccountConvertSystemTypeToHybridRequest:
      type: object
      properties:
        updateAccountConvertSystemTypeToHybrid:
          $ref: '#/components/schemas/updateAccountConvertSystemTypeToHybrid'

    UpdateAccountAddNote:
      type: object
      properties:
        updateAccountAddNote:
          $ref: '#/components/schemas/AccountNote'
          
    UpdateSubscriptionAddNote: 
      type: object
      properties:
        updateSubscriptionAddNote:
          $ref: '#/components/schemas/SubscriptionNote'
    
    addClosedUserGroupEntriesRequest:
      type: object
      properties:
        addClosedUserGroupEntries:
          $ref: '#/components/schemas/addClosedUserGroupEntries'

    updateSubscriptionProfile:
      type: object
      properties:
        updateSubscriptionProfile:
          $ref: '#/components/schemas/SubscriptionProfile'  

    updateSubscriptionsPPSMSupporterRequest:
      type: object
      properties:
        updateSubscriptionsPPSMSupporter:
          $ref: '#/components/schemas/updateSubscriptionsPPSMSupporter'

    updateSubscriptionCardPackageRequest:
      type: object
      properties:
        updateSubscriptionCardPackage:
          $ref: '#/components/schemas/updateSubscriptionCardPackage'

    updateEntityRequest:
      type: object
      properties:
        updateEntity:
          $ref: '#/components/schemas/updateEntity'
          
    retrieveEntityRequest: 
      type: object
      properties:
        retrieveEntity:
          $ref: '#/components/schemas/retrieveEntity'
    
    listDetailedCallDetailsRequest: 
      type: object
      properties:
        listDetailedCallDetails:
          $ref: '#/components/schemas/listDetailedCallDetails'
          
    listCallDetailsRequest: 
      type: object
      properties:
        listCallDetails:
          $ref: '#/components/schemas/listDetailedCallDetails'
    
    listAccountsForIDRequest: 
      type: object
      properties:
        listAccountsForID:
          $ref: '#/components/schemas/listAccountsForID'
           
    addClosedUserGroupShortCodeEntriesRequest:
      type: object
      properties:
        addClosedUserGroupShortCodeEntries:
          $ref: '#/components/schemas/addClosedUserGroupShortCodeEntries'

    updateClosedUserGroupShortCodeEntriesRequest:
      type: object
      properties:
        updateClosedUserGroupShortCodeEntries:
          $ref: '#/components/schemas/updateClosedUserGroupShortCodeEntries'

    getPromotionsRequest:
      type: object
      properties:
        getPromotions:
          $ref: '#/components/schemas/getPromotionsInnerRequest'
    
    removeMsisdnsFromFraudListRequest:
      type: object
      properties:
        getPromotions:
          $ref: '#/components/schemas/removeMsisdnsFromFraudList'

    initiateDirectDebitRequest:
      type: object
      properties:
        initiateDirectDebit:
          $ref: '#/components/schemas/initiateDirectDebit'

    createClosedUserGroupRequest:
      type: object
      properties:
        createClosedUserGroup:
          $ref: '#/components/schemas/createClosedUserGroup'

    updateClosedUserGroupRequest:
      type: object
      properties:
        updateClosedUserGroup:
          $ref: '#/components/schemas/updateClosedUserGroup'

    createSubscriptionRequest:
      type: object
      properties:
        createSubscription:
          $ref: '#/components/schemas/createSubscription'

    createSubscriptionTransactionRequest:
      type: object
      properties:
        createSubscriptionTransaction:
          $ref: '#/components/schemas/createSubscriptionTransaction'

    updateSubscriptionWithStateTransitionRequest:
      type: object
      properties:
        updateSubscriptionWithStateTransition:
          $ref: '#/components/schemas/updateSubscriptionWithStateTransition'

    updateSubscriptionResetMonthlySpendAmountRequest:
      type: object
      properties:
        updateSubscriptionResetMonthlySpendAmount :
          $ref: '#/components/schemas/updateSubscriptionResetMonthlySpendAmount'

    updateSubscriptionCreditLimitRequest:
      type: object
      properties:
        updateSubscriptionCreditLimit:
          $ref: '#/components/schemas/updateSubscriptionCreditLimit'

    getSubscriptionSecondaryBalanceRequest:
      type: object
      properties:
        getSubscriptionSecondaryBalance:
          $ref: '#/components/schemas/getSubscriptionSecondaryBalance'

    readSchedulesRequest:
      type: object
      properties:
        readSchedules:  
          $ref: '#/components/schemas/readSchedules'
      
    updateScheduleRequest:
      type: object
      properties:
        updateSchedule:  
          $ref: '#/components/schemas/updateSchedule'

    updateAccountBillCycleRequest:
      type: object
      properties:
        updateAccountBillCycle:
          $ref: '#/components/schemas/updateAccountBillCycle'

    applyChargesForAlternateInvoiceRequest:
      type: object
      properties:
        applyChargesForAlternateInvoice:
          $ref: '#/components/schemas/applyChargesForAlternateInvoice'

    generateAlternateInvoiceRequest:
      type: object
      properties:
        generateAlternateInvoice:
          $ref: '#/components/schemas/generateAlternateInvoice'

    requestBalanceRequest:
      type: object
      properties:
        requestBalance6In:  
          $ref: '#/components/schemas/requestBalance'
          
    requestDebitRequest:
      type: object
      properties:
        requestDebit4In:  
          $ref: '#/components/schemas/requestDebit'
          
    requestCreditRequest:
      type: object
      properties:
        requestCredit5In:  
          $ref: '#/components/schemas/requestCredit'

    listScreeningTemplatesRequest:
      type: object
      properties:
        listScreeningTemplates:
          $ref: '#/components/schemas/listScreeningTemplates'

    createSimpleVoucherRequest:
      type: object
      properties:
        createSimpleVoucher:  
          $ref: '#/components/schemas/createSimpleVoucher'
          
    updateVoucherStatusRequest: 
      type: object
      properties: 
        updateVoucherStatus:
          $ref: '#/components/schemas/updateVoucherStatusInner'
    
    updateAccountExtensionRequest:
      type: object
      properties:
        updateAccountExtension:
          $ref: '#/components/schemas/updateAccountExtension'

    createAccountRequest:
      type: object
      properties:
        createAccount:
          $ref: '#/components/schemas/createAccount'
          
    createAccountTransactionRequest:
      type: object
      properties:
        createAccountTransaction:
          $ref: '#/components/schemas/createAccountTransactionInner'

    updateSubscriptionRechargeVoucherBatchRequest:
      type: object
      properties:
        updateSubscriptionRechargeVoucherBatch:
          $ref: '#/components/schemas/updateSubscriptionRechargeVoucherBatchInner'

    updateDiscountClassRequest:
      type: object
      properties:
        updateDiscountClass:
          $ref: '#/components/schemas/updateDiscountClassInner'

    updateAccountParentV2Request:
      type: object
      properties:
        updateAccountParentV2:
          $ref: '#/components/schemas/updateAccountParentV2Inner'

    convertIndividualToGroupRequest:
      type: object
      properties:
        convertIndividualToGroup:
          $ref: '#/components/schemas/convertIndividualToGroupInner'

    createIndividualSubscriberRequest:
      type: object
      properties:
        createIndividualSubscriber:
          $ref: '#/components/schemas/createIndividualSubscriberInner'

    listDetailedCallDetailsWithBundlesRequest:
      type: object
      properties:
        listDetailedCallDetailsWithBundles:
          $ref: '#/components/schemas/listDetailedCallDetails'

    validateAndUpdateOptionsRequest:
      type: object
      properties:
        validateAndUpdateOptions:
          $ref: '#/components/schemas/validateAndUpdateOptions'

    listPPSMSupporteesRequest:
      type: object
      properties:
        listPPSMSupportees:
          $ref: '#/components/schemas/listPPSMSupportees'

    listPPSMSupportees:
      type: object
      required:
      - supporterRef
      description: PPSM Supportee object
      properties:
        supporterRef:
          $ref: '#/components/schemas/SubscriptionRef'
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        supporterRef:
          accountID: '1111'
          identifier: '1111-1'
          mobileNumber: '1703101647228'
          mobileNumberOwnership: '2024-02-19T05:30:52.809-06:00'
          spid: 0
          subscriptionType: 10001
          state: 2
          subscriptionIdentifierType: 'true'
          parameters:
            - name: subRefParam
              value: subRefValue

    validateAndUpdateOptions:
      type: object
      required:
      - channel
      - agentID
      - language
      - operationType
      - pricePlanId
      description: Validate and update options object
      properties:
        channel:
          type: integer
          description: Channel
        agentID:
          type: string
          description: Identifier of agent
        dealerCode:
          type: string
          description: Dealer code
        language:
          type: string
          description: Language
        operationType:
          type: boolean
          description: Operation type boolean
        bypassBalanceCheck:
          type: boolean
          description: Bypass balance check
        subscriptionReference:
          $ref: '#/components/schemas/subscriptionReference'
        pricePlanId:
          type: integer
          description: Identification of price plan
        currentOptions:
          type: array
          items:
            $ref: '#/components/schemas/currentAndUpdatedOptions'
        requestedUpdatedOptions:
          type: array
          items:
            $ref: '#/components/schemas/currentAndUpdatedOptions'
        options:
          $ref: '#/components/schemas/options'
        parameter:
          $ref: '#/components/schemas/RequestParametersInvididualValueTypes'
      example:
        channel: -2
        agentID: '1'
        dealerCode: '1'
        language: en
        operationType: 0
        bypassBalanceCheck: true
        subscriptionReference:
          accountID: '111'
          identifier: 111-1
          mobileNumber: '9986542564'
          mobileNumberOwnership: '2024-02-19T05:30:52.809-06:00'
          spid: 0
          subscriptionType: 10001
          state: 2
          subscriptionIdentifierType: 'true'
          parameters:
            - name: subscriptionRefParam
              stringvalue: subscriptionRefParamStringvalue
              longvalue: subscriptionRefParamLongvalue
              booleanvalue: subscriptionRefParamBooleanvalue
        pricePlanId: 22222222
        currentOptions:
          - identifier: 1111
            optionType: 1
            updateType: 3
            optionState: '2'
            name: test
            isSelected: true
            provisioningState: '2'
            startDate: '2023-11-28T04:43:35.287-06:00'
            endDate: '2026-11-28T04:43:35.287-06:00'
            numberOfPayments: 10
            recurrenceScheme:
              recurrenceType: '1'
              startDate: '2023-11-28T04:43:35.287-06:00'
              endDate: '2026-11-28T04:43:35.287-06:00'
              period: '30'
              periodUnitType: '1'
            adjustmentTypeID: 3333333
            fee: 10
            prorationEnabled: true
            parameter:
              - name: currentOptionsParamName
                stringvalue: currentOptionsParamStringvalue
                longvalue: currentOptionsParamLongvalue
                booleanvalue: currentOptionsParamBooleanvalue
        requestedUpdatedOptions:
          - identifier: 1111
            optionType: 1
            updateType: 2
            optionState: '2'
            name: test
            isSelected: true
            provisioningState: '1'
            startDate: '2023-11-28T04:43:35.287-06:00'
            endDate: '2026-11-28T04:43:35.287-06:00'
            numberOfPayments: '20'
            recurrenceScheme:
              recurrenceType: 1
              startDate: '2023-11-28T04:43:35.287-06:00'
              endDate: '2026-11-28T04:43:35.287-06:00'
              period: '60'
              periodUnitType: '2'
            adjustmentTypeID: 2222
            fee: '10'
            prorationEnabled: true
            parameter:
              - name: requestedUpdateParamName
                stringvalue: requestedUpdateParamStringvalue
                longvalue: requestedUpdateParamLongvalue
                booleanvalue: requestedUpdateParamBooleanvalue
        options:
          isSelected: true
          pricePlanDetails:
            currentVersion: 2
            enabled: true
            identifier: 1111
            spid: 0
            name: name
            paidType: 2
            subscriptionType: 10001
            subscriptionLevel: 3
            technology: 1
            billingMessage:
              - identifier: 1111
                language: en
                message: test
                spid: 0
                state: 1
            criteria:
              - contractDuration:
                  minimumDuration: 30
                  maximumDuration: 90
                  durationFrequency: 5
            nextVersion: 3
            versions:
              - version: 1
                activation: true
                activationDate: '2024-11-28T04:43:35.287-06:00'
                createdDate: '2023-11-28T04:43:35.287-06:00'
                defaultDeposit: 100
                defaultCreditLimit: 1000
                defaultPerMinuteAirRate: 30
                overUsageVoiceRate: 20
                overUsageSMSRate: 10
                overUsageDataRate: 40
                description: testDescription
                serviceFees:
                  - fee: 1
                    identifier: 4444444
                    packageID: 10000
                    period: 30
                    preference: 2
                    type: 3
                    recurrenceInterval: 5
                bundleFees:
                  - fee: 1
                    identifier: 5555555
                    packageID: 10000
                    period: 30
                    preference: 1
                parameters:
                  - name: versionsParamName
                    stringvalue: versionsParamStringvalue
                    longvalue: versionsParamLongvalue
                    booleanvalue: versionsParamBooleanvalue
            function: '12'
            group:
              - 10
            voiceRatePlan:
              - voicePlan1
            smsRatePlan:
              - smsPlan1
            dataRatePlan:
              - dataPlan1
            parameters:
              - name: pricePlanParamName
                stringvalue: pricePlanParamStringvalue
                longvalue: pricePlanParamLongvalue
                booleanvalue: pricePlanParamBooleanvalue
          items:
            - identifier: 1111
              optionType: 1
              updateType: 1
              optionState: '2'
              name: name
              isSelected: true
              provisioningState: 2
              startDate: '2023-11-28T04:43:35.287-06:00'
              endDate: '2026-11-28T04:43:35.287-06:00'
              numberOfPayments: 15
              recurrenceScheme:
                recurrenceType: 1
                startDate: '2023-11-28T04:43:35.287-06:00'
                endDate: '2026-11-28T04:43:35.287-06:00'
                period: 10
                periodUnitType: 1
              adjustmentTypeID: 88888888
              fee: 10
              prorationEnabled: true
              parameter:
                - name: itemParamName
                  stringvalue: itemParamStringvalue
                  longvalue: itemParamLongvalue
                  booleanvalue: itemParamBooleanvalue
          parameters:
            - name: optionsParamName
              stringvalue: optionsParamStringvalue
              longvalue: optionsParamLongvalue
              booleanvalue: optionsParamBooleanvalue
        parameter:
          - name: genericParamName
            stringvalue: genericParamStringvalue
            longvalue: genericParamLongvalue
            booleanvalue: genericParamBooleanvalue


    pricePlanDetailsOptions:
      type: object
      properties:
        currentVersion:
          type: integer
          description: Current version of price plan
        enabled:
          type: boolean
          description: Is price plan enabled
        identifier:
          type: integer
          description: Price plan identifier
        spid:
          type: integer
          description: Service provider identifier
        name:
          type: string
          description: Price plan name
        paidType:
          $ref: '#/components/schemas/PaidTypeEnumeration'
        subscriptionType:
          type: integer
          description: Subscription Type
        subscriptionLevel:
          type: integer
          description: Subscription Level
        technology:
          $ref: '#/components/schemas/TechnologyTypeEnumeration'
        billingMessage:
          type: array
          items:
            $ref: '#/components/schemas/BillingMessageObject'
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionCriteriaObject'
        nextVersion:
          type: integer
          description: Price plan next version
        versions:
          type: array
          items:
            $ref: '#/components/schemas/PricePlanDetailsVersion'
        function:
          $ref: '#/components/schemas/PricePlanFunctionTypeEnumeration'
        group:
          type: array
          description: A list of groups
          items:
            type: integer
            description: Price plan group
        voiceRatePlan:
          type: array
          description: A list of voice rate plans
          items:
            type: string
            description: Price plan voice rate plan
        smsRatePlan:
          type: array
          description: A list of SMS rate plans
          items:
            type: string
            description: Price plan SMS rate plan
        dataRatePlan:
          type: array
          description: A list of data rate plans
          items:
            type: string
            description: Price plan data rate plan
        parameters:
          $ref: '#/components/schemas/RequestParametersInvididualValueTypes'

    versions:
      type: array
      items:
        $ref: '#/components/schemas/Version'

    Version:
      type: object
      properties:
        version:
          type: integer
          description: Price plan version
        activation:
          type: string
          description: Price plan version activation
        activationDate:
          type: string
          description: Price plan version activation date
        createdDate:
          type: string
          description: Price plan version created date
        defaultDeposit:
          type: integer
          description: Price plan default deposit
        defaultCreditLimit:
          type: integer
          description: Price plan default credit limit
        defaultPerMinuteAirRate:
          type: integer
          description: Price plan default per minute air rate
        overUsageVoiceRate:
          type: integer
          description: Price plan over usage voice rate
        overUsageSMSRate:
          type: integer
          description: Price plan over usage SMS rate
        overUsageDataRate:
          type: integer
          description: Price plan over usage data rate
        description:
          type: string
          description: Price plan description
        serviceFees:
          type: array
          items:
            $ref: '#/components/schemas/ServiceFeeObject'
        bundleFees:
          type: array
          items:
            $ref: '#/components/schemas/BundleFeeObject'
        parameters:
            $ref: '#/components/schemas/RequestParameters'

    PricePlanDetailsVersion:
      type: object
      properties:
        version:
          type: integer
          description: Price plan version
        activation:
          type: string
          description: Price plan version activation
        activationDate:
          type: string
          description: Price plan version activation date
        createdDate:
          type: string
          description: Price plan version created date
        defaultDeposit:
          type: integer
          description: Price plan default deposit
        defaultCreditLimit:
          type: integer
          description: Price plan default credit limit
        defaultPerMinuteAirRate:
          type: integer
          description: Price plan default per minute air rate
        overUsageVoiceRate:
          type: integer
          description: Price plan over usage voice rate
        overUsageSMSRate:
          type: integer
          description: Price plan over usage SMS rate
        overUsageDataRate:
          type: integer
          description: Price plan over usage data rate
        description:
          type: string
          description: Price plan description
        serviceFees:
          type: array
          items:
            $ref: '#/components/schemas/ServiceFeeObject'
        bundleFees:
          type: array
          items:
            $ref: '#/components/schemas/BundleFeeObject'
        parameters:
            $ref: '#/components/schemas/RequestParametersInvididualValueTypes'

    options:
      type: object
      required:
      - isSelected
      properties:
        isSelected:
          type: boolean
          description: Is option selected
        pricePlanDetails:
          $ref: '#/components/schemas/pricePlanDetailsOptions'
        items:
          $ref: '#/components/schemas/optionItems'
        parameters:
          $ref: '#/components/schemas/RequestParametersInvididualValueTypes'

    optionItems:
      type: array
      items:
        type: object
        required:
        - identifier
        - optionType
        - updateType
        properties:
          identifier:
            type: integer
            description: Price plan option identifier
          optionType:
            $ref: '#/components/schemas/PricePlanOptionTypeEnumeration'
          updateType:
            type: string
            description: Update type
          optionState:
            $ref: '#/components/schemas/PricePlanOptionStateTypeEnumeration'
          name:
            type: string
            description: Price plan option name
          isSelected:
            type: boolean
            description: Is price plan option selected
          provisioningState:
            $ref: '#/components/schemas/ProvisioningStateTypeEnumeration'
          startDate:
            type: string
            description: Price plan start date
          endDate:
            type: string
            description: Price plan end date
          numberOfPayments:
            type: integer
            description: Price plan number of payments
          recurrenceScheme:
            $ref: '#/components/schemas/recurrence'
          adjustmentTypeID:
            type: integer
            description: Price plan adjustment type identifier
          fee:
            type: integer
            description: Price plan fee
          prorationEnabled:
            type: boolean
            description: Is proration enabled in price plan
          parameter:
            $ref: '#/components/schemas/RequestParametersInvididualValueTypes'

    currentAndUpdatedOptions:
      type: object
      required:
      - identifier
      - optionType
      - updateType
      - isSelected
      properties:
        identifier:
          type: integer
          description: Identifier
        optionType:
           $ref: '#/components/schemas/PricePlanOptionTypeEnumeration'
        updateType:
          type: integer
          description: Option state
        optionState:
          type: string
          description: Option state
        name:
          type: string
          description: Name of the option
        isSelected:
          type: boolean
          description: Is option selected
        provisioningState:
          $ref: '#/components/schemas/ProvisioningStateTypeEnumeration'
        startDate:
          type: string
          description: The date on which the option should start if dated in the future; otherwise the date on which the option started
        endDate:
          type: string
          description: The date on which the option should end if dated in the future; otherwise the date on which the option ended
        numberOfPayments:
          type: integer
          description: Number of payments
        recurrenceScheme:
            $ref: '#/components/schemas/recurrence'
        adjustmentTypeID:
          type: integer
          description: Identifier of the adjustment type
        fee:
          type: integer
          description: The fee charged for the option
        prorationEnabled:
          type: boolean
          description: Indicates whether or not the option has been configured to prorate the initial fee based on when the service was provisioned relative to the beginning of the billing period
        parameters:
          $ref: '#/components/schemas/RequestParametersInvididualValueTypes'

    currentAndUpdatedOptionsResponse:
      type: object
      required:
      - identifier
      - optionType
      - updateType
      - isSelected
      properties:
        identifier:
          type: string
          description: Identifier
        optionType:
           $ref: '#/components/schemas/PricePlanOptionTypeEnumeration'
        updateType:
          type: string
          description: Option state
        optionState:
          type: string
          description: Option state
        name:
          type: string
          description: Name of the option
        isSelected:
          type: string
          description: Is option selected
        provisioningState:
          $ref: '#/components/schemas/ProvisioningStateTypeEnumeration'
        startDate:
          type: string
          description: The date on which the option should start if dated in the future; otherwise the date on which the option started
        endDate:
          type: string
          description: The date on which the option should end if dated in the future; otherwise the date on which the option ended
        numberOfPayments:
          type: string
          description: Number of payments
        recurrenceScheme:
            $ref: '#/components/schemas/recurrence'
        adjustmentTypeID:
          type: string
          description: Identifier of the adjustment type
        fee:
          type: string
          description: The fee charged for the option
        prorationEnabled:
          type: string
          description: Indicates whether or not the option has been configured to prorate the initial fee based on when the service was provisioned relative to the beginning of the billing period
        parameters:
          $ref: '#/components/schemas/ResponseParametersInvididualValueTypes'

    subscriptionReference:
      type: object
      description: Subscription reference object
      properties:
        accountID:
          type: string
          description: Identifier of the account
        identifier:
          type: string
          description: Identifier of the subscription
        mobileNumber:
          type: string
          description: Mobile number
        mobileNumberOwnership:
          type: string
          description: Mobile number ownership
        spid:
          type: integer
          description: Service Provider Identifier
        subscriptionType:
          type: integer
          description: Subscription type
        state:
          $ref: '#/components/schemas/SubscriptionStateEnum'
        subscriptionIdentifierType:
          type: string
          description: Subscription identifier type
        parameters:
            $ref: '#/components/schemas/RequestParametersInvididualValueTypes'

    RequestParametersInvididualValueTypes:
      type: array
      description: List of request parameters
      items:
        type: object
        properties:
          name:
            type: string
            description: Name
          stringvalue:
            type: string
            description: String value
          longvalue:
            type: integer
            description: Long value
          booleanvalue:
            type: boolean
            description: Boolean value

    ResponseParametersInvididualValueTypes:
      type: array
      description: List of response parameters
      items:
        type: object
        properties:
          name:
            type: string
            description: Name
          stringvalue:
            type: string
            description: String value
          longvalue:
            type: string
            description: Long value
          booleanvalue:
            type: string
            description: Boolean value

    addSubscriptionPersonalListPlanEntriesRequest:
      type: object
      properties:
        addSubscriptionPersonalListPlanEntries:
          $ref: '#/components/schemas/addSubscriptionPersonalListPlanEntries'

    RequestParameters:
      type: array
      description: Request Parameters object
      items:
        type: object
        required:
          - name
          - value
          - valueType
        properties:
          name:
            type: string
            description: Name
          value:
            type: string
            description: Value
          valueType:
            type: string
            description: Value type

    ResponseParameters:
      type: array
      description: Response Parameters object
      items:
        type: object
        required:
          - name
          - value
        properties:
          name:
            type: string
            description: Name
          value:
            type: string
            description: Value

    Parameters_OCG:
      type: array
      description: OCG Parameters object
      items:
        type: object
        required:
          - parameterID
          - value
        properties:
          parameterID:
            type: integer
            description: Identifier of the parameter
          value:
            type: object
            properties:
              "intValue":
                type: integer
                description: Value of type int
              "longValue":
                type: integer
                description: Value of type long
              "floatValue":
                type: number
                description: Value of type float
              "doubleValue":
                type: number
                description: Value of type double
              "stringValue":
                type: string
                description: Value of type string
              "booleanValue":
                type: boolean
                description: Value of type boolean
              "byteArrayValue":
                type: string
                description: Value of type byte array
              "discriminator":
                type: integer
                description: Value of type discriminator
              "uninitialized":
                type: boolean
                description: Value of type uninitialized
        example:
          - parameterID: 53
            value:
              booleanValue: false
              byteArrayValue: ''
              doubleValue: '0.0'
              floatValue: '0.0'
              intValue: 0
              longValue: 10
              stringValue: ''
              discriminator: 0
              uninitialized: false

    convertBillingTypeRequest:
      type: object
      properties:
        convertBillingTypeRequest:
          $ref: '#/components/schemas/convertBillingTypeRequestInner'

    convertBillingTypeRequestInner:
      type: object
      required:
        - request
      properties:
        validateOnly:
          type: boolean
          description: If TRUE then BSS will validate the account conversion request instead of performing the actual account conversion. False, if not provided.
        request:
          $ref: '#/components/schemas/accountRequest'
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example: {
        validateOnly: true,
        request: {
          currentAccountReference: {
            accountID: '123',
            spid: 'test',
            systemType: 'test',
            parameters: [
              {
              name: 'test',
              value: 'test',
              valueType: 'test'
              }
            ]
          },
          convertAccountReference: {
            billCycle: 'test',
            systemType: 'test',
            contact: {
              address1: 'test',
              address2: 'test',
              address3: 'test',
              city: 'test',
              contactNumber: 'test',
              country: 'test',
              emailAddress: 'test',
              firstName: 'test',
              initials: 'test',
              lastName: 'test',
              postalCode: 'test',
              province: 'test',
              title: 'test',
              contactFax: 'test',
              contactName: 'test',
              employer: 'test',
              employerAddress: 'test',
              emailNotification: true
            },
            identification: {
              dateOfBirth: 'test',
              identification: [
                {
                type: 0,
                value: 'test',
                expiry: 'test'
                }
              ],
              occupationID: 0,
              securityQuestion: [
                {
                question: 'test',
                answer: 'test'
                }
              ]
            },
            parameters: [
            {
            name: 'test',
            value: 'test',
            valueType: 'test'
            }
            ]
          },
          convertSubscriptionDetail: {
            originalIdentifier: 'test',
            msisdn: 'test',
            toBillingType: 'test',
            pricePlanDetails: {
              pricePlanId: 'test',
              parameter: [
                {
                name: 'test',
                value: 'test',
                valueType: 'test'
                }
            ]
            },
            billing: {
              billingLanguage: 'test',
              billingOption: 'test',
              category: 'test',
              chargeToPostpaid: 'test',
              discountClass: 'test',
              maximumBalance: 'test',
              maximumRecharge: 'test',
              postpaidSupport: 'test',
              reactivationFee: 'test',
              creditLimit: 'test',
              deposit: 'test',
              initialBalance: 'test',
              initialExpiryDateExtension: 'test'
            },
            parameter: [
              {
              name: 'test',
              value: 'test',
              valueType: 'test'
              }
            ]
            },
          parameters: [
          {
          name: 'test',
          value: 'test',
          valueType: 'test'
          }
          ]
        },
        parameters: [
          {
          name: 'test',
          value: 'test',
          valueType: 'test'
          }
        ]
      }

    accountRequest:
      type: object
      required:
        - currentAccountReference
        - convertAccountReference
      properties:
        currentAccountReference:
          $ref: '#/components/schemas/currentAccountReference'
        convertAccountReference:
          $ref: '#/components/schemas/convertAccountReference'
        convertSubscriptionDetail:
          $ref: '#/components/schemas/convertSubscriptionDetail'
        parameters:
          $ref: '#/components/schemas/RequestParameters'

    convertSubscriptionDetail:
      type: object
      required:
        - originalIdentifier
      properties:
        originalIdentifier:
          type: string
          description: Original identifier
        msisdn:
          type: string
          description: msisdn
        toBillingType:
          type: string
          description: To billing type
        pricePlanDetails:
          $ref: '#/components/schemas/pricePlanDetails'
        billing:
          $ref: '#/components/schemas/subscriptionBilling'
        parameter:
          $ref: '#/components/schemas/RequestParameters'

    pricePlanDetails:
      type: object
      properties:
        pricePlanId:
          type: string
          description: Price plan identification
        parameter:
          $ref: '#/components/schemas/RequestParameters'

    convertAccountReference:
      type: object
      required:
       - billCycle
      properties:
        billCycle:
          type: integer
          description: Bill cycle
        systemType:
          type: string
          description: System type
        contact:
          $ref: '#/components/schemas/accountContact'
        identification:
          $ref: '#/components/schemas/accountIdentification'
        parameters:
          $ref: '#/components/schemas/RequestParameters'

    currentAccountReference:
      type: object
      properties:
        accountID:
          type: string
          description: Account identifier (BAN).
        spid:
          type: string
          description: Service provider Identifier
        systemType:
          type: string
          description: System type
        parameters:
          $ref: '#/components/schemas/RequestParameters'

    mobileNumbersReference:
      type: object
      properties:
        groupID:
          type: string
          description: "Group ID"
        identifier:
          type: string
          description: "Identifier"
        paidType:
          type: string
          description: "Paid type"
        spid:
          type: string
          description: "SPID"
        state:
          type: string
          description: "State"
        technology:
          type: string
          description: "Technology"
        feeAmount:
          type: number
          format: float
          description: "Fee amount"
    
    createAccountTransactionInner:
      type: object
      required:
        - accountID
        - request
      properties:
        accountID:
          type: string
          description: Identifier of the account
        request:
          type: object
          required:
            - adjustmentType
          properties:
            adjustmentType:
              type: integer
              description: Adjustment type ID
            amount:
              type: integer
              description: Transaction amount
            subscriptionType:
              type: integer
              description: Subscription type
            csrInput:
              type: string
              description: General CSR input field
            expiryDateExtension:
              type: integer
              description: Expiry date extension (in days)
            externalTransactionNumber:
              type: string
              description: External transaction number
            locationCode:
              type: string
              description: Location code
            paymentAgency:
              type: string
              description: Payment agency
            paymentDetails:
              type: string
              description: Payment details
            reasonCode:
              type: integer
              description: Reason code
            transactionDate:
              type: string
              description: Transaction date
            transactionMethodID:
              type: integer
              description: Identifier of the transaction method
            receiptNumber:
              type: string
              description: Receipt number
        parameter:
            $ref: '#/components/schemas/RequestParameters'
      example:
        accountID: '1'
        request: 
          adjustmentType: 'test'
          amount: '2'
          subscriptionType: 'test'
          csrInput: '1'
          expiryDateExtension: '10-10-2020'
          externalTransactionNumber: '123'
          locationCode: '3200'
          paymentAgency: 'test'
          paymentDetails: 'test'
          reasonCode: '1200'
          transactionDate: '20-10-2020'
          transactionMethodID: '34'
          receiptNumber: '123321'

    listScreeningTemplates:
      type: object
      required:
        - criteria
      properties:
        criteria:
          type: object
          properties:
            spid:
              type: integer
              description: Service Provider Identifier
            states:
              type: array
              description: If one or more states are provided, then only templates with one of those states are returned
              items:
                $ref: '#/components/schemas/ScreeningTemplateStateType'
            identifiers:
              type: array
              description: A list of one or more template identifiers
              items:
                type: integer
        isAscending:
          type: boolean
          description: Returns result in ascending order
      example:
        criteria:
          spid: 1
          states: 0
          identifiers:
          - 671048
          - 671049

    ScreeningTemplateStateType:
      type: integer
      enum: [0, 1]
      description: >
        The ScreeningTemplateStateType can be the following values:
         - `0` - ACTIVE
         - `1`- DEPRECATED

    BalanceTypeEnum:
      type: string
      enum: [BALANCE, CURRENCY, LAST_INVOICE_AMOUNT, PAYMENTS_SINCE_LAST_INVOICE, ADJUSTMENTS_SINCE_LAST_INVOICE, LAST_INVOICE_IDENTIFIER, LAST_INVOICE_DUE_DATE]
      description: >
        The BalanceType can be the following values:
         - `BALANCE` - The accumulated balance owing of the account
         - `CURRENCY`- The currency associated with the amount
         - `LAST_INVOICE_AMOUNT` - Amount due on last lnvoice
         - `PAYMENTS_SINCE_LAST_INVOICE` - Accumulated Payment Amount – Sum of payments received since the last (most recent) invoice
         - `ADJUSTMENTS_SINCE_LAST_INVOICE` - Accumulated Other Adjustments – Sum of adjustments (not including payments) and usage charges accumulated since the last invoice, plus tax
         - `LAST_INVOICE_IDENTIFIER` - A unique identifier for the last invoice
         - `LAST_INVOICE_DUE_DATE` - The date on which payment is due for the last invoice

    executeAccountBalanceQuery:
      type: object
      required:
        - accountID
        - balanceTypes
      properties:
        accountID:
          type: string
          description: Identifier of the account
        balanceTypes:
          type: array
          description: List of balance types required
          items:
            $ref: '#/components/schemas/BalanceTypeEnum'
        parameters:
            $ref: '#/components/schemas/RequestParameters'
      example:
        accountID: '17'
        balanceTypes: ['BALANCE']
  
    AccountNote: 
      type: object
      required: 
        - accountID
        - note
        - mainType
        - subType
      properties: 
        accountID: 
          type: string
          description: Identifier of the account
        note:
          type: string
          description: Account note
        mainType:
          type: string
          description: Main note type
        subType:
          type: string
          description: Sub note type
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        accountID: '17'
        note: 'Transaction Done'
        mainType: '1'
        subType: 'Account Notification'

    updateSubscriptionResetMonthlySpendAmount:
      type: object
      required:
      - subscriptionRef
      properties:
        subscriptionRef:
          $ref: '#/components/schemas/SubscriptionRef'
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        subscriptionRef:
          accountID: '1163'
          identifier: '1163-1'
          mobileNumber: '998998998'
          spid: 1
          subscriptionType: 10001

    listDetailedCallDetails:
      type: object
      required:
        - subscriptionRef
        - limit
      properties: 
        subscriptionRef:
            $ref: '#/components/schemas/SubscriptionRef'
        start: 
          type: string
          description: Starting range
        end:
          type: string
          description: End range
        pageKey:
          type: string
          description: Page key
        limit:
          type: integer
          description: Maximum entries returned
        isAscending:
          type: boolean
          description: Returns result in ascending order
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        subscriptionRef: 
          accountID: '17'
          identifier: '17-1'
          mobileNumber: '7731003103'
        limit: 10
        pageKey: '1'
        isAscending: true
                
    listAccountsForID: 
      type: object
      required: 
        - ids
      properties: 
        ids:
          $ref: '#/components/schemas/Ids'
        states: 
          type: array
          description: List of states
          items:
            type: integer
        parameters: 
          $ref: '#/components/schemas/RequestParameters'
      example:
        ids: [
          {
            type: 0,
            value: '12545',
            expiry: '2023-09-25T05:07:57.000-05:00'
          }
        ]
        states: [ 0, 1 ]
                
    createSubscriptionTransaction:
      type: object
      required:
        - subscriptionRef
        - request
      properties: 
        subscriptionRef:
            $ref: '#/components/schemas/SubscriptionRef'
        request:
            $ref: '#/components/schemas/SubscriptionTransaction'
        parameters:
            $ref: '#/components/schemas/RequestParameters'
      example:
        subscriptionRef: 
          accountID: '17'
          identifier: '17-1'
        request: 
          adjustmentType: 21000
          amount: 5000
          receiptNumber: '1'
            
    readSchedules:
      type: object
      required: 
        - request
      properties: 
        request:
            $ref: '#/components/schemas/readSchedulesInnerRequest'
        parameters:
            $ref: '#/components/schemas/RequestParameters'
      example:
        request: 
          criteria: 
            subscriptionRef:
              accountID: '129'
              identifier: '129-1'
              subscriptionType: 10001
              state: 0
            scheduleID: 91
            tokenID: 110
            
    readSchedulesInnerRequest:
      type: object
      properties: 
        parameters:
          $ref: '#/components/schemas/RequestParameters'
        criteria: 
          type: object
          properties: 
            subscriptionRef:
              $ref: '#/components/schemas/SubscriptionRef'
            scheduleID:
              type: integer
              description: Identifier of the schedule
            tokenID:
              type: integer
              description: Identifier of the token

    updateSchedule:
      type: object
      required: 
        - request
      properties:
        request:
          $ref: '#/components/schemas/updateScheduleInnerRequest'
      example:
        request: 
          scheduleFields: [
            {
              name: 'AMOUNT',
              value: '10',
              valueType: 'integer'
            }
          ]
                    
    updateScheduleInnerRequest:
      type: object
      required: 
        - scheduleFields
      properties: 
        parameters:
          $ref: '#/components/schemas/RequestParameters'
        scheduleFields: 
          type: array
          items: 
            $ref: '#/components/schemas/RequestParameters'

    updateAccountBillCycle:
      type: object
      required:
        - accountID
        - billCycleID
      properties:
        accountID:
          type: string
          description: Identifier of the account
        billCycleID:
          type: integer
          description: Identifier of the bill cycle
        parameters:
            $ref: '#/components/schemas/RequestParameters'
      example:
        accountID: '1164'
        billCycleID: 1

    requestBalance:
      type: object
      required: 
        - erReference
      properties:
        msisdn:
          type: string
          description: Mobile Station International Subscriber Directory Number
        currencyType:
          type: string
          description: Currency type
        sendExpiry:
          type: boolean
          description: Send expiry boolean
        parameters:
            $ref: '#/components/schemas/Parameters_OCG'
        erReference: 
          type: string
          description: ER reference
      example:
        msisdn: '1670855867302'
        currencyType: 'GDB'
        sendExpiry: true
        erReference: '1'
          
    requestCredit:
      type: object
      required:
        - erReference
      properties:
        msisdn:
          type: string
          description: Mobile Station International Subscriber Directory Number
        amount:
          type: integer
          description: Amount
        currencyType:
          type: string
          description: Currency type
        updExp:
          type: boolean
          description: Update expiry boolean
        extendExpiryBy:
          type: integer
          description: Extend expiry by
        inputParamSet:
            $ref: '#/components/schemas/Parameters_OCG'
        erReference: 
          type: string
          description: ER reference
      example:
        msisdn: '1670855867302'
        currencyType: 'GDB'
        erReference: '1'

    AccountStateEnum:
      type: integer
      enum: [0, 1, 2, 3, 4, 5, 6, 7]
      description: >
        The AccountStateType is one of the following values:
         - `0` - Active
         - `1` - Suspended
         - `2` - Inactive
         - `3` - Non-payment warned
         - `4` - Non-payment suspended
         - `5` - Promise to pay
         - `6` - In arrears
         - `7` - In collection

    updateSubscriptionWithStateTransition:
      type: object
      required:
      - subscriptionRef
      - newState
      properties:
        subscriptionRef:
         $ref: '#/components/schemas/SubscriptionRef'
        currentState:
          description: The current state of the subscription
          $ref: '#/components/schemas/SubscriptionStateEnum'
        newState:
          description: The new state to transition the subscription to
          $ref: '#/components/schemas/SubscriptionStateEnum'
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        subscriptionRef:
          accountID: '1'
          mobileNumber: '1702903141313'
          spid: 1
          subscriptionType: 10001
          state: 1
        newState: 3

    updateSubscriptionWithStateTransitionResponse:
      type: object
      properties:
        updateSubscriptionWithStateTransitionResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                parameters:
                 $ref: '#/components/schemas/ResponseParameters'
                oldState:
                  type: string
                  description: The old state of the subscription before the transition was applied
          example:
            return:
              parameters:
              - name: 'test'
                value: 'test'
              oldState: '1'

    getTransactionResponse:
      type: object
      properties:
        return:
          type: object
          properties:
            csrInput:
              type: string
              description: General CSR input field
            subscriptionType:
              type: string
              description: Subscription type
            accountID:
              type: string
              description: Identifier of the account
            adjustmentTypeID:
              type: string
              description: Identifier of the adjustment type
            agent:
              type: string
              description: The agent responsible for initiating the transaction, if available
            amount:
              type: string
              description: The monetary amount of this transaction
            balance:
              type: string
              description: The balance of the subscriber after the transaction was applied. This value is only available for certain transactions
            identifier:
              type: string
              description: A unique ID assigned to the transaction when it was created
            receiveDate:
              type: string
              description: The date when the payment is received by the system
            transactionDate:
              type: string
              description: Transaction date
            receiptNumber:
              type: string
              description: Receipt number
            parameters:
              $ref: '#/components/schemas/RequestParameters'
            externalTransactionNumber:
              type: string
              description: External transaction number
            glCode:
              type: string
              description: The GL code assigned to the transaction
            locationCode:
              type: string
              description: Location code
            mobileNumber:
              type: string
              description: Mobile number
            paymentAgency:
              type: string
              description: Payment agency
            paymentDetails:
              type: string
              description: Payment details
            reasonCode:
              type: string
              description: Reason code
            supportedSubscriptionID:
              type: string
              description: Identifier of the supported subscription
            taxPaid:
              type: string
              description: Tax paid
            transactionMethodID:
              type: string
              description: Identifier of the transaction method
      example:
        getTransactionResponse:
          return:
            csrInput: "string"
            subscriptionType: "10001"
            accountID: "17"
            adjustmentTypeID: "32601"
            agent: "rkadm"
            amount: "0"
            balance: "0"
            identifier: "0"
            receiveDate: "2023-09-27T00:32:56.916-05:00"
            transactionDate: "2023-09-27T00:32:56.824-05:00"
            parameters:
            - name: "RNAdjustmentTypeID"
              value: "Initial Balance"
            - name: "RNTransactionMethodID"
              value: "Cash"
            - name: "ownerType"
              value: "0"
            externalTransactionNumber: "1"
            glCode: "GL_1"
            locationCode: "1"
            mobileNumber: "7731003103"
            paymentAgency: "default"
            paymentDetails: "test"
            reasonCode: "9223372036854775807"
            supportedSubscriptionID: "test"
            taxPaid: "0"
            transactionMethodID: "1"
            
    initiateDirectDebit:
      type: object
      required:
      - accountID
      properties:
        accountID:
          type: string
          description: Account identifier
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        accountID: '1110'
        parameters:
        - name: 'test1'
          value: 'test1'
        - name: 'test2'
          value: 'test2'

    initiateDirectDebitResponse:
      type: object
      properties:
        initiateDirectDebitResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                resultCode:
                  $ref: '#/components/schemas/DirectDebitInitiationResultCodeEnumeration'
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
      example:
        initiateDirectDebitResponse:
          return:
            resultCode: '0'

    requestDebit:
      type: object
      properties:
        msisdn:
          type: string
          description: Mobile Station International Subscriber Directory Number
        amount:
          type: integer
          description: Amount
        currencyType:
          type: string
          description: Currency type
        balFlag:
          type: boolean
          description: Bal flag boolean
        inputParamSet:
            $ref: '#/components/schemas/Parameters_OCG'
        erReference: 
          type: string
          description: ER reference
      example:
        msisdn: '1670855867302'
        currencyType: 'GDB'
        balFlag: 'true'
        erReference: '1'

    updateSubscriptionsPPSMSupporter:
      type: object
      required:
      - currentSupporterRef
      - newSupporterRef
      properties:
        currentSupporterRef:
          $ref: '#/components/schemas/SubscriptionRef'
        newSupporterRef:
          $ref: '#/components/schemas/SubscriptionRef'
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        currentSupporterRef:
          accountID: '1113'
          identifier: '1113-1'
          mobileNumber: '1703101733436'
          spid: 1
          subscriptionType: 10001
        newSupporterRef:
          accountID: '1111'
          identifier: '1111-1'
          mobileNumber: '1703101647228'
          spid: 1
          subscriptionType: 10001

    createSimpleVoucher:
      type: object
      required:
        - requestHeader
      properties:
        requestHeader:
            $ref: '#/components/schemas/requestHeader'
        createSimpleVoucherInput:
            $ref: '#/components/schemas/CreateSimpleVoucherInput'
        parameters:
             $ref: '#/components/schemas/RequestParameters'
      example:
        requestHeader:
          username: 'rkadm'
          password: 'rkadm'
        createSimpleVoucherInput: [
          {
            requestID: '123',
            retailAmount: '1000',
            StoreID: 'StoreID_100501',
            homelocation: 'HomeLocation',
            sublocation: 'SubLocation',
            voucherlocation: 1
          }
        ]

    requestHeader:
      type: object
      properties:
        username:
          type: string
          description: VRA login username
        password:
          type: string
          description: VRA login password

    CreateSimpleVoucherInput:
      type: array
      items:
        type: object
        properties:
            parameters:
              $ref: '#/components/schemas/RequestParameters'
            requestID:
              type: string
              description: Identifier of the request
            retailAmount:
              type: integer
              description: Retail amount
            StoreID:
              type: string
              description: Identifier of the store
            homelocation:
              type: string
              description: Home location
            sublocation:
              type: string
              description: Sub location
            voucherlocation:
              type: integer
              description: Voucher location
            associatedData:
              $ref: '#/components/schemas/RequestParameters'

    getVoucherInfoRequest:
      type: object
      required:
        - requestHeader
      properties:
        requestHeader:
          $ref: '#/components/schemas/requestHeader'
        voucherInfoRetrieveInput:
          type: object
          properties:
            voucherNumber:
              type: string
              description: Voucher number
            serialNumber:
              type: string
              description: Serial number
            homeLocation:
              type: string
              description: Home location
            subLocation:
              type: string
              description: Sub location
            voucherLocation:
              type: integer
              description: Voucher location
    
    updateVoucherStatusInner:
      type: object
      required:
        - requestHeader
      properties:
        requestHeader:
          $ref: '#/components/schemas/requestHeader'
        voucherDetails:
            $ref: '#/components/schemas/VoucherDetails'
      example:
        requestHeader:
          username: 'rkadm'
          password: 'rkadm'
        voucherDetails:
          msisdn: '1'
          msisdnSpid: '1'
          state: '1'
          voucherNumber: '1'
          serialNumber: '1'
          homeLocation: '1'
          subLocation: '1'
          voucherLocation: 1
          
    VoucherDetails:
      type: object
      properties:
        msisdn: 
          type: string
          description: Mobile Station International Subscriber Directory Number
        msisdnSpid:
          type: string
          description: Service Provider Identifier for Mobile Station International Subscriber Directory Number
        state:
          type: string
          description: State
        voucherNumber:
          type: string
          description: Voucher number
        serialNumber:
          type: string
          description: Serial number
        homeLocation:
          type: string
          description: Home location
        subLocation:
          type: string
          description: Sub location
        voucherLocation:
          type: integer
          description: Voucher location

    SubscriptionNote: 
      type: object
      required: 
        - subscriptionRef
        - note
        - mainType
        - subType
      properties: 
        subscriptionRef:
            $ref: '#/components/schemas/SubscriptionRef'
        note: 
          type: string
          description: Subscription note
        mainType:
          type: string
          description: Main note type
        subType:
          type: string
          description: Sub note type
        parameters:
            $ref: '#/components/schemas/RequestParameters'
      example:
        subscriptionRef:
          accountID: '17'
          identifier: '17-1'
          mobileNumber: '14100120072'
          mobileNumberOwnership: '2023-09-27T00:32:56.586-05:00'
          spid: 1
          subscriptionType: 10001
          state: 1
        note: 'Transaction Done'
        mainType: '1'
        subType: 'Account Notification'
    

    CreateSubscriptionBilling:
      type: object
      description: Billing object
      properties:
        billingLanguage:
          type: string
          description: Billing language
        billingOption:
          type: integer
          description: Billing option
        category:
          type: integer
          description: Subscription category
        chargeToPostpaid:
          type: boolean
          description: Charge to postpaid boolean
        discountClass:
          type: integer
          description: Discount class
        maximumBalance:
          type: integer
          description: Maximum balance
        maximumRecharge:
          type: integer
          description: Maximum recharge
        postpaidSupport:
          type: string
          description: Postpaid support mobile number
        reactivationFee:
          type: integer
          description: Reactivation fee
        creditLimit:
          type: integer
          description: Credit limit
        deposit:
          type: integer
          description: Deposit
        initialBalance:
          type: integer
          description: Initial balance
        initialExpiryDateExtension:
          type: integer
          description: Initial expiry date extension

    CreateSubscriptionProfile:
      type: object
      required:
      - mobileNumber
      - subscriptionClass
      - subscriptionType
      - technologyType
      properties:
        poolLimit:
          type: integer
          description: Pool limit
        poolLimitStrategy:
          $ref: '#/components/schemas/PoolLimitStrategyEnum'
        notificationPreference:
          $ref: '#/components/schemas/NotificationPreferenceEnum'
        accountID:
          type: string
          description: Identifier of the account
        cardPackageID:
          type: string
          description: Package identifier - SIM
        hlrID:
          type: integer
          description: Home location register ID
        identifier:
          type: string
          description: Identifier of the subscription
        mobileNumber:
          type: string
          description: Subscription mobile number
        paidType:
          $ref: '#/components/schemas/PaidTypeEnumeration'
        spid:
          type: integer
          description: Service Provider Identifier
        subscriptionClass:
          type: integer
          description: Subscription Class
        subscriptionType:
          type: integer
          description: Type of subscription
        technologyType:
          $ref: '#/components/schemas/TechnologyTypeEnumeration'

    CreateSubscriptionOptions:
      type: object
      properties:
        isSelected:
          type: boolean
          description: Is option selected
        pricePlanDetails:
          type: object
          properties:
            currentVersion:
              type: integer
              description: Current version of price plan
            enabled:
              type: boolean
              description: Is price plan enabled
            identifier:
              type: integer
              description: Price plan identifier
            spid:
              type: integer
              description: Service provider ID
            name:
              type: string
              description: Price plan name
            paidtype:
              $ref: '#/components/schemas/PaidTypeEnumeration'
            subscriptionType:
              type: integer
              description: Subscription Type
            subscriptionLevel:
              type: integer
              description: Subscription Level
            technology:
              $ref: '#/components/schemas/TechnologyTypeEnumeration'
            billingMessage:
              type: array
              items:
                $ref: '#/components/schemas/BillingMessageObject'
            criteria:
              type: array
              items:
                $ref: '#/components/schemas/SubscriptionCriteriaObject'
            nextVersion:
              type: integer
              description: Price plan next version
            versions:
              type: array
              items:
                $ref: '#/components/schemas/Version'
            function:
              $ref: '#/components/schemas/PricePlanFunctionTypeEnumeration'
            group:
              type: array
              description: A list of groups
              items:
                type: integer
                description: Price plan group
            voiceRatePlan:
              type: array
              description: A list of voice rate plans
              items:
                type: string
                description: Price plan voice rate plan
            smsRatePlan:
              type: array
              description: A list of SMS rate plans
              items:
                type: string
                description: Price plan SMS rate plan
            dataRatePlan:
              type: array
              description: A list of data rate plans
              items:
                type: string
                description: Price plan data rate plan
            parameters:
              $ref: '#/components/schemas/RequestParameters'
        items:
          type: array
          items:
            type: object
            properties:
              identifier:
                type: integer
                description: Price plan option identifier
              optionType:
                $ref: '#/components/schemas/PricePlanOptionTypeEnumeration'
              optionState:
                $ref: '#/components/schemas/PricePlanOptionStateTypeEnumeration'
              name:
                type: string
                description: Price plan option name
              isSelected:
                type: boolean
                description: Is price plan option selected
              provisioningState:
                $ref: '#/components/schemas/ProvisioningStateTypeEnumeration'
              startDate:
                type: string
                description: Price plan start date
              endDate:
                type: string
                description: Price plan end date
              numberOfPayments:
                type: integer
                description: Price plan number of payments
              recurrence:
                $ref: '#/components/schemas/recurrence'
              adjustmentTypeID:
                type: integer
                description: Price plan adjustment type identifier
              fee:
                type: integer
                description: Price plan fee
              prorationEnabled:
                type: boolean
                description: Is proration enabled in price plan
              parameters:
                $ref: '#/components/schemas/RequestParameters'
        parameters:
          $ref: '#/components/schemas/RequestParameters'

    CreateSubscriptionRating:
      type: object
      properties:
        primaryPricePlanID:
          type: integer
          description: Primary price plan identifier
        secondaryPricePlanEnd:
          type: string
          description: Secondary price plan end date
        secondaryPricePlanID:
          type: integer
          description: Secondary price plan identifier
        secondaryPricePlanStart:
          type: string
          description: Secondary price plan start date
        contractID:
          type: integer
          description: Contract identifier

    createSubscription:
      type: object
      required:
      - profile
      - status
      - rating
      - billing
      properties:
        creationTemplate:
          type: integer
          description: Subscription creation template
        profile:
          $ref: '#/components/schemas/CreateSubscriptionProfile'
        status:
          type: object
          required:
          - state
          properties:
            state:
              type: integer
              enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
              description: >
                The subscription state can be one of the following values:
                 - `1`
                 - `2`
                 - `3`
                 - `4`
                 - `5`
                 - `6`
                 - `7`
                 - `8`
                 - `9`
                 - `10`
                 - `11`
                 - `12`
        rating:
          $ref: '#/components/schemas/CreateSubscriptionRating'
        billing:
          $ref: '#/components/schemas/CreateSubscriptionBilling'
        cardPackage:
          $ref: '#/components/schemas/CardPackage'
        options:
          $ref: '#/components/schemas/CreateSubscriptionOptions'
        extension:
          type: array
          items:
            type: object
            description: Base subscription extension
        promotion:
          type: array
          items:
            type: object
            properties:
              identifier:
                type: string
                description: Promotion identifier
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        creationTemplateID: 1
        profile:
          accountID: '333'
          cardPackageID: '114477'
          mobileNumber: '22222222'
          paidType: 1
          spid: 1
          subscriptionClass: 1
          subscriptionType: 10001
          technologyType: 0
        status:
          state: 1
        rating:
          primaryPricePlanID: 100007
          secondaryPricePlanID: 100005
          contractID: 1
        billing:
          billingLanguage: 'en'
          creditLimit: 100
          deposit: 100
        cardPackage:
          identifier: '13'
          packageGroupID: '114477'
          spid: 1
          dealer: '1'
        options:
          pricePlanDetails:
            subscriptionType: 10001
            technology: 1
            billingMessage:
            - null
            criteria:
            - contractDuration:
                minimumDuration: 3
                maximumDuration: 10
                durationFrequency: 1
          versions:
            - serviceFees:
              - null
              bundleFees:
              - null
          items:
          - identifier: 1
        promotion:
        - identifier: '7'

    createSubscriptionResponse:
      type: object
      properties:
        return:
          type: object
          properties:
            accountID:
              type: string
              description: Account identifier
            identifier:
              type: string
              description: Identifier
            mobileNumber:
              type: string
              description: Subscription Mobile Number
            mobileNumberOwnership:
              type: string
              description: Subscription Mobile Number Ownership
            spid:
              type: string
              description: Service provider identifier
            subscriptionType:
              type: string
              description: Subscription type
            state:
              type: string
              description: Subscription state
            parameters:
              $ref: '#/components/schemas/ResponseParameters'
      example:
        createSubscriptionResponse:
          return:
            accountID: '334'
            identifier: '334-1'
            mobileNumber: '1223344556'
            mobileNumberOwnership: '2023-09-27T00:32:56.586-05:00'
            spid: '1'
            subscriptionType: '10001'
            state: '1'
            parameters:
              name: 'PointReward'
              value: 'test'

    updateSubscriptionResetPoolQuotaUsageRequest:
      type: object
      required:
        - subscriptionRef
      properties:
        subscriptionRef:
          $ref: '#/components/schemas/SubscriptionRef'
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        subscriptionRef:
          accountID: '1746'
          identifier: '1746-1'
          mobileNumber: '21365456212'
          mobileNumberOwnership: '2023-09-27T00:32:56.586-05:00'
          spid: 1
          subscriptionType: 10001
          state: 0

    BundleFeeObject:
      type: object
      properties:
        fee:
          type: integer
          description: Bundle fee
        identifier:
          type: integer
          description: Bundle Fee identifier
        packageID:
          type: integer
          description: Bundle Fee package identifier
        period:
          $ref: '#/components/schemas/ServicePeriodEnumeration'
        preference:
          $ref: '#/components/schemas/ServicePreferenceEnumeration'

    ServiceFeeObject:
      type: object
      properties:
        fee:
          type: integer
          description: Service fee
        identifier:
          type: integer
          description: Service fee identifier
        packageID:
          type: integer
          description: Service fee package ID
        period:
          $ref: '#/components/schemas/ServicePeriodEnumeration'
        preference:
          $ref: '#/components/schemas/ServicePreferenceEnumeration'
        type:
          $ref: '#/components/schemas/ServiceTypeEnumeration'
        recurrenceInterval:
          type: integer
          description: Service fee recurrence interval

    BillingMessageObject:
      type: object
      properties:
        identifier:
          type: integer
          description: Identifier
        language:
          type: string
          description: Language
        message:
          type: string
          description: Message
        spid:
          type: integer
          description: Service Provider Identifier
        state:
          type: integer
          enum: [0, 1]
          description: >
            The billing message state can be one of the following values:
             - `0`
             - `1`

    SubscriptionCriteriaObject:
      type: object
      properties:
        contractDuration:
          type: object
          required:
          - durationFrequency
          properties:
            minimumDuration:
              type: integer
              description: Price plan criteria minimum duration
            maximumDuration:
              type: integer
              description: Price plan criteria maximum duration
            durationFrequency:
              type: integer
              enum: [0, 1, 2]
              description: >
                The contact fee frequency - duration frequency, can be one of the following values:
                 - `0`
                 - `1`
                 - `2`

    DisputeInitiatorEnumeration:
      type: string
      enum: ['-1', '0', '1']
      description: >
        Invoice PDF state can be one of the following values:
         - `-1` - NO-FEE
         - `0` - CONTRIBUTOR
         - `1` - RECIPIENT

    DisputeStateEnumeration:
      type: string
      enum: ['0', '1', '2']
      description: >
        Invoice PDF state can be one of the following values:
         - `0` - INITIATED
         - `1` - ASSIGNED
         - `2` - ACCEPTED
         - `3` - REJECTED

    PdfInvoiceStateResponseEnumeration:
      type: string
      enum: ['0', '1', '2', '3']
      description: >
        Invoice PDF state can be one of the following values:
         - `0` - NOT_AVAILABLE
         - `1` - PENDING
         - `2` - NOT_APPROVED
         - `3` - AVAILABLE

    SettlementStateResponseEnumeration:
      type: string
      enum: ['0', '1']
      description: >
        Settlement state can be one of the following values:
         - `0` - NOT_PROCESSED
         - `1` - SETTLEMENT_SENT

    CugStateEnumeration:
      type: integer
      enum: [0, 1]
      description: >
        The CUG state can be one of the following values:
         - `0` - Enabled
         - `1` - Disabled

    PaidTypeEnumeration:
      type: integer
      enum: [0, 1, 2]
      description: >
        The paidType can be one of the following values:
         - `0` - PREPAID
         - `1` - POSTPAID
         - `2` - UNSPECIFIED

    TechnologyTypeEnumeration:
      type: integer
      enum: [0, 1, 2, 3, 4, 31000]
      description: >
            The technologyType can be one of the following values:
             - `0` - GSM
             - `1` - TDMA
             - `2` - CDMA
             - `3` - ANY
             - `4` - VSAT_PSTN
             - `31000`- NO_TECH

    ProvisioningStateTypeEnumeration:
      type: string
      enum: ['1', '2', '3', '4', '5', '6', '7', '8', '9']
      description: >
        Provisioning State Type option type can be one of the following values:
         - `1` - NOT_PROVISIONED
         - `2` - PROVISIONED
         - `3` - PROVISIONED_WITH_ERRORS
         - `4` - SUSPENDED
         - `5` - SUSPENDED_WITH_ERRORS
         - `6` - UNPROVISIONED_WITH_ERRORS
         - `7` - UNPROVISIONED
         - `8` - SUSPENDED_CLCT
         - `9` - SUSPENDED_CLCT_WITH_ERRORS

    PricePlanFunctionTypeEnumeration:
      type: integer
      enum: [0, 1, 2]
      description: >
       Price plan function type can be one of the following values:
         - `0` - Normal
         - `1` - Pool
         - `2` - VPN

    CallingGroupServiceTypeEnum:
      type: integer
      enum: [0, 1, 2]
      description: >
        Indicates the calling group service type:
         - `0` - VOICE
         - `1` - SMS
         - `2` - ALL
         
    PricePlanOptionTypeEnumeration:
      type: integer
      enum: [0, 1, 2, 3, 4]
      description: >
        Price plan option type can be one of the following values:
         - `0` - SERVICE
         - `1` - PACKAGE
         - `2` - BUNDLE
         - `3` - AUXILARY_SERVICE
         - `4` - AUXILARY_BUNDLE

    PricePlanOptionStateTypeEnumeration:
      type: integer
      enum: [0, 1, 2]
      description: >
        Price plan state option type can be one of the following values:
         - `0` - Active
         - `1` - Deprecated
         - `2` - Closed

    ServiceTypeEnumeration:
      type: integer
      enum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
      description: >
        The service type can be one of the following values:
         - `0` - Generic
         - `1` - Voicemail
         - `2` - Voice
         - `3` - SMS
         - `4` - Data
         - `5` - Transfer
         - `6` - EVDO
         - `7` - Blackberry
         - `8` - Alcatel ssc
         - `9` - Package
         - `10` - Service Provisioning Gateway
         - `11` - External Price Plan
         - `12` - Bolt on service
         - `13` - Calling group

    ServicePeriodEnumeration:
      type: integer
      enum: [0, 1, 2, 3, 4, 5]
      description: >
        The service period can be one of the following values:
         - `0` - Monthly
         - `1` - Annual
         - `2` - Weekly
         - `3` - Multi-Monthly
         - `4` - Daily
         - `5` - Hourly

    ServicePreferenceEnumeration:
      type: integer
      enum: [0, 1, 2]
      description: >
        The service preference can be one of the following values:
         - `0` - Default
         - `1` - Optional
         - `2` - Mandatory

    DirectDebitInitiationResultCodeEnumeration:
      type: string
      enum: ['0', '1', '2']
      description: >
        The service preference can be one of the following values:
         - `0` - SUCCESS
         - `1` - INCOMPLETE_DATA
         - `2` - NOT_PERMITTED

    createAccount:
      type: object
      required:
      - profile
      - detail
      - billing
      properties: 
        profile: 
            $ref: '#/components/schemas/accountProfile'
        detail:
            $ref: '#/components/schemas/accountDetails'
        billing:
            $ref: '#/components/schemas/accountBilling'
        paymentInfo: 
            $ref: '#/components/schemas/accountPaymentInfo'
        identification: 
            $ref: '#/components/schemas/accountIdentification'
        company:
            $ref: '#/components/schemas/accountCompany'
        bank:
            $ref: '#/components/schemas/accountBank'
        contact:
            $ref: '#/components/schemas/accountContact'
        extension:
          type: array
          items:
            type: object
            properties:
             groupMobileNumber: 
              type: string
              description: Group mobile number
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        profile:
          companyName: 'test'
          name: 'tester'
          identifier: '17'
          parent: 'test'
          responsible: true
          spid: 1
          state: 0  
        detail:
          accountManager: 'test'
          currency: 'USD'
          greeting: 'test'
          icm: false
          language: 'en'
          ownerMobileNumber: '88888888888'
          blockingTemplate: 'test'
          role: 1
          accountType: 0
          groupType: 0
          systemType: 1
          vpnMobileNumber: '88888888888'
        billing:
          billingMessage: 'test'
          billingMsgPreference: 2
          collectionAgentID: 0
          contractEnd: '2023-09-23T12:48:43.695-05:00'
          contractID: 1
          contractStart: '2023-09-23T12:48:43.695-05:00'
          creditCategory: 0
          dealerCode: '1-AUTO_DL'
          discountClass: 1
          promiseToPayDate: '2023-09-23T12:48:43.695-05:00'
          taxAuthority: 1093
          taxExemption: false
          useIfNoSubCreditInfo: true
          invoiceDeliveryOptionID: 10
          paymentPlanID: 1
          billCycle: 1
        paymentInfo:
          paymentMethodTypeID: 1
          creditCardNumber: '1234567890123456'
          creditCardTypeID: 0
          expiryDate: '2023-09-23T12:48:43.695-05:00'
          holderName: 'test'
          bankID: '421764'
          debitBankTransit: 'test'
          debitAccountNumber: '4321876501234567'
          maximumDebitAmount: 0
          invoiceTaxType: 0
        identification:
          dateOfBirth: '2000-02-16T00:00:00.000-06:00'
          identification:
          - type: 0
            value: 12545
            expiry: '2000-02-16T00:00:00.000-06:00'
          occupationID: 10
          securityQuestion:
          - question: 'Q1'
            answer: 'A1'
          - question: 'Q2'
            answer: 'A2'
          - question: 'Q3'
            answer: 'A3'
        company:
         address1: 'test'
         address2: 'test'
         address3: 'test'
         city: 'Toronto'
         contactNumber: '88888888888'
         country: 'Canada'
         emailAddress: 'test'
         firstName: 'test'
         initials: 'tt'
         lastName: 'test'
         postalCode: '43964'
         province: '1-Region'
         title: 'test'
         companyFax: '88888888888'
         companyNumber: '88888888888'
         registrationNumber: 1245
         tradingName: 'test'
        bank:
         address1: 'test'
         address2: 'test'
         address3: 'test'
         city: 'Toronto'
         contactNumber: '88888888888'
         country: 'Canada'
         emailAddress: 'test'
         firstName: 'test'
         initials: 'tt'
         lastName: 'test'
         postalCode: '43964'
         province: '1-Region'
         title: 'test'
         bankAccountName: 'test'
         bankAccountNumber: '1111222233334444'
         bankID: '111122'
         bankName: 'test'
         bankNumber: '88888888888'
        contact:
         address1: 'test'
         address2: 'test'
         address3: 'test'
         city: 'Toronto'
         contactNumber: '88888888888'
         country: 'Canada'
         emailAddress: 'test'
         firstName: 'test'
         initials: 'tt'
         lastName: 'Test KD'
         postalCode: '43964'
         province: '1-Region'
         title: 'test'
         contactFax: '88888888888'
         contactName: 'Test'
         employer: 'test'
         employerAddress: 'test'
         emailNotification: true
        extension:
        - groupMobileNumber: '88888888888'

    updateSubscriptionRechargeVoucherBatchInner:
      type: object
      properties:
        return:
          type: object
          properties:
            order:
              $ref: '#/components/schemas/Order'
            parameters:
              $ref: '#/components/schemas/RequestParameters'
      example:
        order:
        - orderResult: "0"
          subscriptionRef:
            accountID: "1372"
            identifier: "1372-1"
            mobileNumber: "977728282882"
          voucher: "9177853260560188"
          exception:
            code: 0
            message: "NULL"
        - orderResult: "0"
          subscriptionRef:
            accountID: "1373"
            identifier: "1373-1"
            mobileNumber: "9898989191"
          voucher: "5895406140109259"
          exception:
            code: 0
            message: "NULL"

    ResultCode:
      type: integer
      enum: [0, 1, 2]
      description: >
        An indication of the result of the order:
         - `0` - SUCCESS -Indicates the order was successfully processed and voucher redeemed
         - `1` - FAILURE - Indicates the order was processed and the voucher was not redeemed successfully
         - `2` - NOT_PROCESSED - Indicates the order was not processed and voucher not redeemed

    Order:
      type: array
      required:
      - subscriptionRef
      - voucher
      items:
        type: object
        properties:
          orderResult:
            $ref: '#/components/schemas/ResultCode'
          subscriptionRef:
            $ref: '#/components/schemas/SubscriptionRef'
          voucher:
            type: string
            description: Voucher
          exception:
            type: object
            properties:
              code:
                type: integer
                description: Code
              message:
                type: string
                description: Message
              profileStored:
                type: boolean
                description: Indicates if data was stored successfully

    createAccountResponse:
      type: object
      properties:
        createAccountResponse:
          type: object
          required:
          - return
          properties:
            return:
              type: object
              properties:
                identifier:
                  type: string
                  description: Account ID (BAN)
                parent:
                  type: string
                  description: Account Parent BAN
                responsible:
                  type: boolean
                  description: True if this account is responsible for its invoice; false otherwise (in which case one of the account's ancestors in the account hierarchy will be responsible for it)
                spid:
                  type: integer
                  description: Service Provider Identifier
                role:
                  type: integer
                  description: The ID of the Account Role
                state:
                  type: integer
                  description:   Account's state
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
      example:
         createAccountResponse:
          return:
           identifier: '165'
           parent: '123'
           responsible: true
           spid: 1
           role: 1
           state: 0
           parameters:
           - name: 'parameter1'
             value: 'value1'

    updateSubscriptionCreditLimit:
      type: object
      required:
      - subscriptionRef
      - creditLimit
      properties:
        subscriptionRef:
          $ref: '#/components/schemas/SubscriptionRef'
        creditLimit:
          type: integer
          description: Subscription Credit Limit
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        subscriptionRef:
          accountID: '1163'
          identifier: '1163-1'
          mobileNumber: '998998998'
          spid: 1
          subscriptionType: 10001
        creditLimit: 100

    CardPackage:
      type: object
      required:
      - identifier
      - packageGroupID
      - dealer
      properties:
        identifier:
          type: string
          description: Identifier
        packageGroupID:
          type: string
          description: Package group Identifier
        spid:
          type: integer
          description: Service Provider Identifier
        state:
          $ref: '#/components/schemas/CardPackageState'
        technology:
          $ref: '#/components/schemas/TechnologyTypeEnumeration'
        dealer:
          type: string
          description: Dealer code
        esn:
          type: string
          description: ESN
        imsi:
          type: string
          description: International mobile subscriber identity
        lastModified:
          type: string
          description: Last modified
        min:
          type: string
          description: Min
        serialNumber:
          type: string
          description: Serial number

    CardPackageState:
      type: integer
      enum: [0, 1, 2]
      description: >
        The CardPackageState is one of the following values:
         - `0` - AVAILABLE
         - `1` - IN_USE
         - `2` - HELD

    SubscriptionRef: 
      type: object
      description: Subscription reference object
      properties:
        accountID: 
          type: string
          description: Identifier of the account
        identifier:
          type: string
          description: Identifier of the subscription
        mobileNumber:
          type: string
          description: Mobile number
        mobileNumberOwnership:
          type: string
          description: Mobile number ownership
        spid:
          type: integer
          description: Service Provider Identifier
        subscriptionType:
          type: integer
          description: Subscription type
        state:
          type: integer
          enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
          description: >
            The subscription state is one of the following values:
             - `1`
             - `2`
             - `3`
             - `4`
             - `5`
             - `6`
             - `7`
             - `8`
             - `9`
             - `10`
             - `11`
             - `12`
        parameters:
            $ref: '#/components/schemas/RequestParameters'
            
    SubscriptionProfile:
      type: object
      required: 
        - subscriptionRef
      properties: 
        subscriptionRef:
            $ref: '#/components/schemas/SubscriptionRef'
        profile:
            $ref: '#/components/schemas/Profile'
        billing: 
            $ref: '#/components/schemas/Billing'
        parameters:
            $ref: '#/components/schemas/RequestParameters'
      example:
        subscriptionRef:
          accountID: '18'
          identifier: '18-1'
          mobileNumber: '7731003104'
          mobileNumberOwnership: '2023-09-27T00:32:56.586-05:00'
          spid: 2
          subscriptionType: 10001
          state: 1
        profile:
          poolLimit: 10
          poolLimitStrategy: 1
          notificationPreference: 1
        billing:
          billingLanguage: 'language'
          billingOption: 1
          category: 1
          chargeToPostpaid: true
          discountClass: 1
          maximumBalance: 200
          maximumRecharge: 200
          postpaidSupport: 'support1'
          reactivationFee: 5

    SubscriptionContractStatus:
      type: object
      properties:
        subscriptionRef:
            $ref: '#/components/schemas/SubscriptionRef'
      example:
        subscriptionRef:
          accountID: '18'
          identifier: '18-1'
          mobileNumber: '7731003104'
          mobileNumberOwnership: '2023-09-27T00:32:56.586-05:00'
          spid: 2
          subscriptionType: 10001
          state: 1

    Billing:
      type: object
      description: Billing object
      properties:
        billingLanguage: 
          type: string
          description: Billing language
        billingOption:
          type: integer
          description: Billing option
        category:
          type: integer
          description: Subscription category
        chargeToPostpaid:
          type: boolean
          description: Charge to postpaid boolean
        discountClass:
          type: integer
          description: Discount class
        maximumBalance:
          type: integer
          description: Maximum balance
        maximumRecharge:
          type: integer
          description: Maximum recharge
        postpaidSupport:
          type: string
          description: Postpaid support mobile number
        reactivationFee:
          type: integer
          description: Reactivation fee

    Profile:
      type: object
      description: Profile object
      properties:
        poolLimit: 
          type: integer
          description: Pool limit
        poolLimitStrategy:
          $ref: '#/components/schemas/PoolLimitStrategyEnum'
        notificationPreference:
          $ref: '#/components/schemas/NotificationPreferenceEnum'

    NotificationPreferenceEnum:
      type: integer
      enum: [0, 1, 2, 3, 4]
      description: >
        Indicates the type of notification (e.g., SMS, e-mail) that is preferred:
         - `0` - Default
         - `1` - SMS
         - `2` - Email
         - `3` - SMS and Email
         - `4` - None
            
    Schedule:
      type: object
      description: Schedule object
      properties:
        parameters:
          $ref: '#/components/schemas/RequestParameters'
        scheduleID: 
          type: string
          description: Identifier of the schedule
        subscriptionRef:
          $ref: '#/components/schemas/SubscriptionRef'
        amount: 
          type: string
          description: Amount
        tokenID:
          type: string
          description: Identifier of the token
        nextApplication:
          type: string
          description: Next application

    SubscriptionTransaction:
      type: object
      properties: 
        adjustmentType: 
          type: integer
          description: Adjustment type
        amount:
          type: integer
          description: Amount
        subscriptionType:
          type: integer
          description: Subscription type
        csrInput:
          type: string
          description: General CSR input field
        expiryDateExtension:
          type: integer
          description: Expiry date extension
        externalTransactionNumber:
          type: string
          description: External transaction number
        locationCode:
          type: string
          description: Location code
        paymentAgency:
          type: string
          description: Payment agency
        paymentDetails:
          type: string
          description: Payment details
        reasonCode:
          type: integer
          description: Reason code
        transactionDate:
          type: string
          description: Transaction date
        transactionMethodID:
          type: integer
          description: Identifier of the transaction method
        receiptNumber:
          type: string
          description: Receipt number

    listTransactionsByExternalTransactionNumber:
      type: object
      required:
      - limit
      properties:
        accountID:
          type: string
          description: Account identifier
        subscriptionRef:
          $ref: '#/components/schemas/SubscriptionRef'
        start:
          type: string
          description: Transaction start date
        end:
          type: string
          description: Transaction end date
        category:
          type: integer
          description: Transaction category
        pageKey:
          type: string
          description: Page key
        limit:
          type: integer
          description: Limit
        isAscending:
          type: boolean
          description: Transaction order
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        externalTransactionNumber: 1
        accountID: '1372'
        subscriptionRef:
          accountID: '1372'
          identifier: '1372-1'
          mobileNumber: '977728282882'
          spid: 1
          subscriptionType: 10001
        limit: 1
        isAscending: true

    listTransactionsByExternalTransactionNumberResponse:
      type: object
      properties:
        return:
          type: object
          properties:
            pageKey:
              type: string
            references:
              type: object
              properties:
                csrInput:
                  type: string
                  description: General CSR input field
                subscriptionType:
                  type: string
                  description: Subscription Type
                accountID:
                  type: string
                  description: Account Identifier
                adjustmentTypeID:
                  type: string
                  description: Adjustment type identifier
                agent:
                  type: string
                  description: The agent responsible for initiating the transaction, if available
                amount:
                  type: string
                  description: The monetary amount of this transaction
                balance:
                  type: string
                  description: The balance of the subscriber after the transaction was applied. This value is only available for certain transactions
                identifier:
                  type: string
                  description: A unique ID assigned to the transaction when it was created
                receiveDate:
                  type: string
                  description: The date when the payment is received by the system
                transactionDate:
                  type: string
                  description: Transaction date
                receiptNumber:
                  type: string
                  description: Receipt number
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
      example:
        listTransactionsByExternalTransactionNumberResponse:
          return:
            pageKey: '8207'
            references:
              csrInput: null
              subscriptionType: '10001'
              accountID: '1372'
              adjustmentTypeID: '28820'
              agent: 'rkadm'
              amount: '0'
              balance: '21655'
              identifier: '8207'
              receiveDate: '2024-02-20T10:49:18.228-06:00'
              transactionDate: '2024-02-20T10:49:18.228-06:00'
              parameters:
              - name: 'RNAdjustmentTypeID'
                value: 'Dispute Contributer Refund Credit'
              - name: 'ownerType'
                value: '0'

    ShortCodeEntryObject:
      type: object
      properties:
        mobileNumber:
          type: string
          description: Phone ID/Number of the CUG member. It must match the pattern specified in the corresponding Service Provider (SPID) Default Value configuration
        shortCode:
          type: string
          description: Short-Code assigned to the CUG member. It must match the pattern configured in CUG's template

    addClosedUserGroupShortCodeEntries:
      type: object
      required:
      - groupID
      properties:
        groupID:
          type: string
          description: Closed user group (CUG) identifier
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ShortCodeEntryObject'
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        groupID: 4
        entries:
        - mobileNumber: '762733151112'
          shortCode: '1234'
        - mobileNumber: '862733151112'
          shortCode: '1234'

    updateClosedUserGroupShortCodeEntries:
      type: object
      required:
      - groupID
      properties:
        groupID:
          type: string
          description: Closed user group (CUG) identifier
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ShortCodeEntryObject'
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        groupID: 4
        entries:
        - mobileNumber: '762733151112'
          shortCode: '1234'
        - mobileNumber: '862733151112'
          shortCode: '1234'

    listClosedUserGroupShortCodeEntriesResponse:
      type: object
      properties:
        listClosedUserGroupShortCodeEntriesResponse:
          properties:
            return:
              type: array
              items:
                $ref: '#/components/schemas/ShortCodeEntryObject'
      example:
        listClosedUserGroupShortCodeEntriesResponse:
           return:
           - mobileNumber: '762733151112'
             shortCode: '1234'
           - mobileNumber: '862733151112'
             shortCode: '1234'

    getPromotionsInnerRequest:
      type: object
      required:
      - subscriptionRef
      properties: 
        subscriptionRef: 
          $ref: '#/components/schemas/SubscriptionRef'
      example:
        subscriptionRef: 
          accountID: '17'
          identifier: '17-1'
          mobileNumber: '7731003103'
          mobileNumberOwnership: '2023-09-27T00:32:56.586-05:00'
          spid: 1
          subscriptionType: 10001
          state: 1

    retrieveEntity:
      type: object
      required:
        - entity
      properties: 
        entity:
          $ref: '#/components/schemas/Entity'
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        entity: [
          {
            type: 'com.redknee.app.crm.bean.Province',
            property: [
              {
                name: "spid",
                value: 1,
                valueType: "int"
              }
            ]
          }
        ]
        
    updateEntity:
      type: object
      required:
        - entity
      properties:
        entity: 
          $ref: '#/components/schemas/Entity'
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        entity: [
          {
            type: "com.redknee.app.crm.bean.Province",
            property: [
              {
                name: "spid",
                value: 1,
                valueType: "int"
              }
            ]
          }
        ]
        
    updateAccountParentV2Inner:
      type: object
      properties:
        accountID:
          type: string
          description: Identifier of the account
        parentID:
          type: string
          description: Identifier of the account parent
        newDepositAmount:
          type: number
          description: Subscriber's new deposit amount when moved to the new account
        responsible:
          type: boolean
          description: 'True if the account should be invoice responsible after the move; false otherwise'
        expiryExtension:
          type: integer
          description: Number of days that each prepaid subscription's expiry date must be extended when moving it from a pooled to a non-pooled account. Only applies to prepaid subscriber accounts moving from pooled to non-pooled group accounts.
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        accountID: '2'
        parentID: '1'
        newDespositAmount: 20
        responsible: true
        expiryExtension: 7

    Entity:
     type: array
     description: Entity object
     items:
      type: object
      required:
        - type
      properties:
          type:
            type: string
          property:
            type: array
            items:
              type: object
              required:
                - valueType
              properties:
                name:
                  type: string
                  description: Name
                value:
                  type: string
                  description: Value
                valueType:
                  type: string
                  description: Value type
            example:
              - name: "spid"
                value: "1"
                valueType: "int"

    Ids:
      type: array
      description: List of identifiers
      items:
        type: object
        properties:
          type:
            type: integer
            description: Type
          value:
            type: string
            description: Value
          expiry:
            type: string
            description: Expiry

    mutablePoolAccountExtension:
      type: object
      properties:
        subscriptionPoolProperty:
          type: object
          properties:
            subscriptionType:
              type: integer
              description: Subscription type
            initialPoolBalance:
              type: integer
              description: Initial pool balance
        bundleIDs:
          type: array
          description: A collection of bundle IDs to be pooled
          items:
            type: integer
        poolLimit:
          type: integer
          description: The maximum amount of the group's balance which can be used by the member subscriber
        poolLimitStrategy:
          type: integer
          description: Indicates the type of limit imposed on the balance used by members of a pooled group

    mutableFriendsAndFamilyAccountExtension:
      type: object
      properties:
        cugTemplateID:
          type: integer
          description: Identifier of the Closed User Group template
        cugOwnerMSISDN:
          type: string
          description: Closed User Group owner MSISDN
        smsNotificationMSISDN:
          type: string
          description: SMS notification MSISDN

    mutableSubscriberLimitAccountExtension:
      type: object
      properties:
        maxSubscribers:
          type: integer
          description: Maximum number of subscribers

    mutableGroupPricePlanAccountExtension:
      type: object
      properties:
        prepaidPricePlanID:
          type: integer
          description: Identifier of the prepaid price plan
        postpaidPricePlanID:
          type: integer
          description: Identifier of the postpaid price plan

    updateAccountConvertSystemTypeToHybrid:
      type: object
      required:
      - accountID
      - contact
      - identification
      properties:
        accountID:
          type: string
          description: Account identifier
        contact:
          $ref: '#/components/schemas/accountContact'
        identification:
          $ref: '#/components/schemas/accountIdentification'
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        accountID: '1100'
        contact:
          address1: 'test'
          city: 'test'
          contactNumber: '9899827390'
          country: 'test'
          emailAddress: 'kjm.rao@redknee.com'
          firstName: 'test'
          lastName: 'test'
          contactName: 'test2'
        identification:
          identification:
            type: 0
            value: '11729'
          occupationID: 10
          securityQuestion:
          - question: 'Q'
            answer: 'A'
          - question: 'Q'
            answer: 'A'
          - question: 'Q'
            answer: 'A'

    updateAccountConvertSystemTypeToHybridResponse:
      type: object
      required:
      - return
      properties:
        return:
          type: object
          properties:
            identifier:
              type: string
              description: Account identifier
            parent:
              type: string
              description: Account parent
            responsible:
              type: string
              description: Responsible bool
            spid:
              type: string
              description: Service provider identifier
            role:
              type: string
              description: Account role
            state:
              type: string
              description: Account state
            parameters:
              $ref: '#/components/schemas/ResponseParameters'
      example:
        updateAccountConvertSystemTypeToHybridResponse:
          return:
            identifier: '1110'
            parent: null
            responsible: 'true'
            spid: '1'
            role: '1'
            state: '0'

    updateAccountExtension:
      type: object
      required:
      - extensionReference
      - extension
      properties:
        extensionReference:
          type: object
          properties:
            accountID:
              type: string
              description: Identifier of the account
        extension:
          type: object
          oneOf:
          - $ref: '#/components/schemas/mutablePoolAccountExtension'
          - $ref: '#/components/schemas/mutableFriendsAndFamilyAccountExtension'
          - $ref: '#/components/schemas/mutableSubscriberLimitAccountExtension'
          - $ref: '#/components/schemas/mutableGroupPricePlanAccountExtension'
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        extensionReference:
          accountID: '1369'
        extension:
          subscriptionPoolProperty:
            subscriptionType: 10001
            initialPoolBalance: 77000
          bundleIDs: 5
          poolLimit: "9230000"
          poolLimitStrategy: "1"
    
    accountProfile:
     type: object
     required:
     - responsible
     - spid
     - state
     properties: 
      companyName: 
        type: string
        description: Company name
      name:
        type: string
        description: Name of the account
      identifier:
        type: string
        description: Identifier
      parent:
        type: string
        description: Account Parent BAN
      responsible:
        type: boolean
        description: Responsible
      spid:
        type: integer
        description: Service Provider Identifier
      state:
        $ref: '#/components/schemas/accountState'

    accountState:
      type: integer
      enum: [0, 1, 2, 3, 4, 5, 6, 7]
      description: >
        The accountStateType is one of the following values:
         - `0` - ACTIVE
         - `1` - SUSPENDED
         - `2` - INACTIVE
         - `3` - NON_PAYMENT_WARNED
         - `4` - NON_PAYMENT_SUSPENDED
         - `5` - PROMISE_TO_PAY
         - `6` - IN_ARREARS
         - `7` - IN_COLLECTION
    
    accountDetails:
     type: object
     required:
     - role
     - accountType
     - groupType
     - systemType
     properties: 
      accountManager: 
        type: string
        description: Account manager
      currency:
        type: string
        description: Account currency
      greeting:
        type: string
        description: Account greeting message
      icm:
        type: string
        description: ICM enabled
      language:
        type: string
        description: Account's preferred language
      ownerMobileNumber:
        type: string
        description: Owner mobile number
      blockingTemplate:
        type: string
        description: If the blocking preference is something other than NONE, then this identifies the Blocking Template that to use in determining blocked calls
      role:
        type: integer
        description: Account role ID
      accountType:
        type: integer
        description: Account type ID
      groupType:
        $ref: '#/components/schemas/accountGroupType'
      systemType:
        $ref: '#/components/schemas/accountSystemType'
      vpnMobileNumber:
        type: string
        description: VPN mobile number

    accountGroupType:
      type: integer
      enum: [0, 1, 3]
      description: >
        The type of group represented by this account. It is one of the following values:
         - `0` - SUBSCRIBER
         - `1` - GROUP
         - `3` - GROUP_POOLED

    accountSystemType:
      type: integer
      enum: [0, 1, 2]
      description: >
        Account system type. It is one of the following values:
         - `0` - PREPAID
         - `1` - POSTPAID
         - `2` - CONVERGE
    
    accountBilling:
      type: object
      required:
      - billCycle
      properties: 
        billingMessage: 
          type: string
          description: Billing message
        billingMsgPreference:
          $ref: '#/components/schemas/accountBillingMsgPreference'
        collectionAgentID:
          type: integer
          description: Identifier of the collection agent
        contractEnd:
          type: string
          description: Contract end
        contractID:
          type: integer
          description: Identifier of the contract
        contractStart:
          type: string
          description: Contract start
        creditCategory:
          type: integer
          description: Credit category
        dealerCode:
          type: string
          description: Dealer code
        discountClass:
          type: integer
          description: Discount class
        promiseToPayDate:
          type: string
          description: Promise to pay date
        taxAuthority:
          type: integer
          description: Tax authority
        taxExemption:
          type: boolean
          description: Tax exemption boolean
        useIfNoSubCreditInfo:
          type: boolean
          description: 'Use if no sub credit info boolean'
        invoiceDeliveryOptionID:
          type: integer
          description: Identifier of the invoice delivery option
        paymentPlanID:
          type: integer
          description: Identifier of the payment plan
        billCycle:
          type: integer
          description: Account bill cycle

    accountBillingMsgPreference:
      type: integer
      enum: [0, 1, 2]
      description: >
        Account billing message preference. It is one of the following values:
         - `0` - NONE
         - `1` - OVERRIDE
         - `2` - DEFAULT

    accountPaymentInfo:
      type: object
      properties: 
        paymentMethodTypeID: 
          type: integer
          description: Identifier of the payment method type
        creditCardNumber:
          type: string
          description: Credit card number
        creditCardTypeID:
          type: integer
          description: Identifier of the credit card type
        expiryDate:
          type: string
          description: Expiry date
        holderName:
          type: string
          description: Holder name
        bankID:
          type: string
          description: Identifier of the bank
        debitBankTransit:
          type: string
          description: Debit bank transit
        debitAccountNumber:
          type: string
          description: Debit account number
        maximumDebitAmount:
          type: integer
          description: Maximum amount permitted for a single automatic debit
        invoiceTaxType:
          type: integer
          description: Invoice tax type

    accountIdentification:
      type: object
      properties: 
        dateOfBirth: 
          type: string
          description: Date of birth
        identification:
          type: array
          items:
            type: object
            properties:
             type:
              type: integer
              description: Type
             value:
              type: string
              description: Value
             expiry:
              type: string
              description: The date on which the identification expires
        occupationID:
          type: integer
          description: Identifier of the occupation
        securityQuestion:
          type: array
          description: Security questions and answers
          items:
            type: object
            properties: 
              question: 
                type: string
                description: Question
              answer:
                type: string
                description: Answer

    accountCompany:
      type: object
      properties: 
        address1: 
          type: string
          description: 'Address line 1'
        address2:
          type: string
          description: 'Address line 2'
        address3:
          type: string
          description: 'Address line 3'
        city:
          type: string
          description: City
        contactNumber:
          type: string
          description: Contact number
        country:
          type: string
          description: Country
        emailAddress:
          type: string
          description: Email address
        firstName:
          type: string
          description: First name
        initials:
          type: string
          description: Initials
        lastName:
          type: string
          description: Last name
        postalCode:
          type: string
          description: Postal code
        province:
          type: string
          description: Province
        title:
          type: string
          description: Title
        companyFax:
          type: string
          description: Company fax
        companyNumber:
          type: string
          description: Company number
        registrationNumber:
          type: string
          description: Registration number
        tradingName:
          type: string
          description: Trading name

    accountBank:
      type: object
      properties: 
        address1: 
          type: string
          description: 'Address line 1'
        address2:
          type: string
          description: 'Address line 2'
        address3:
          type: string
          description: 'Address line 3'
        city:
          type: string
          description: City
        contactNumber:
          type: string
          description: Contact number
        country:
          type: string
          description: Country
        emailAddress:
          type: string
          description: Email address
        firstName:
          type: string
          description: First name
        initials:
          type: string
          description: Initials
        lastName:
          type: string
          description: Last name
        postalCode:
          type: string
          description: Postal code
        province:
          type: string
          description: Province
        title:
          type: string
          description: Title
        bankAccountName:
          type: string
          description: Bank account name
        bankAccountNumber:
          type: string
          description: Bank account number
        bankID:
          type: string
          description: Identifier of the bank
        bankName:
          type: string
          description: Bank name
        bankNumber:
          type: string
          description: Bank number

    accountContact:
      type: object
      properties:
        address1: 
          type: string
          description: 'Address line 1'
        address2:
          type: string
          description: 'Address line 2'
        address3:
          type: string
          description: 'Address line 3'
        city:
          type: string
          description: City
        contactNumber:
          type: string
          description: Contact number
        country:
          type: string
          description: Country
        emailAddress:
          type: string
          description: Email address
        firstName:
          type: string
          description: First name
        initials:
          type: string
          description: Initials
        lastName:
          type: string
          description: Last name
        postalCode:
          type: string
          description: Postal code
        province:
          type: string
          description: Province
        title:
          type: string
          description: Title
        contactFax:
          type: string
          description: Contact fax
        contactName:
          type: string
          description: Contact name
        employer:
          type: string
          description: Employer
        employerAddress:
          type: string
          description: Employer address
        emailNotification:
          type: boolean
          description: Email notification boolean

    removeClosedUserGroupEntries:
      type: object
      required:
      - groupID
      properties:
        groupID:
          type: integer
          description: Closed user group identifier
        mobileNumbers:
          type: array
          description: Phone numbers of subscribers to be removed from the CUG.
          items:
            type: string
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        groupID: 5
        mobileNumbers:
        - '8383939300'
        - '7283939560'

    ClosedUserGroupObject:
      type: object
      properties:
        auxilaryServiceID:
          type: integer
          description: Auxilary Service identifier
        identifier:
          type: integer
          description: CUG identifier
        name:
          type: string
          description: CUG name
        spid:
          type: integer
          description: CUG service provider identifier
        cugTemplateID:
          type: integer
          description: CUG template identifier
        ownerMSISDN:
          type: string
          description: CUG owner MSISDN
        cugState:
          $ref: '#/components/schemas/CugStateEnumeration'
        smsNotifyUser:
          type: string
          description: CUG SMS which notifies user
        deprecated:
          type: boolean
          description: Is CUG deprecated
        parameters:
          $ref: '#/components/schemas/RequestParameters'

    updateClosedUserGroup:
      type: object
      required:
      - cug
      properties:
        cug:
          $ref: '#/components/schemas/ClosedUserGroupObject'
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        cug:
          identifier: 2
          name: 'TESTPAJBS'
          spid: 1
          cugTemplateID: 4
          ownerMSISDN: '23100040'
          cugState: 1

    createClosedUserGroup:
      type: object
      required:
      - cug
      properties:
        cug:
          $ref: '#/components/schemas/ClosedUserGroupObject'
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        cug:
          identifier: 2
          name: 'TESTPAJBS'
          spid: 1
          cugTemplateID: 4
          ownerMSISDN: '23100040'
          cugState: 1

    closedUserGroupReturnObject:
      type: object
      properties:
        auxiliaryServiceID:
          type: string
          description: Auxilary Service identifier
        identifier:
          type: string
          description: CUG identifier
        name:
          type: string
          description: CUG name
        spid:
          type: string
          description: CUG service provider identifier
        cugTemplateID:
          type: string
          description: CUG template identifier
        ownerMSISDN:
          type: string
          description: CUG owner MSISDN
        cugState:
          type: string
          enum: ['0', '1']
          description: >
            The CUG state can be one of the following values:
            - `0` - Enabled
            - `1` - Disabled
        smsNotifyUser:
          type: string
          description: CUG SMS which notifies user
        deprecated:
          type: string
          description: Is CUG deprecated
        parameters:
          $ref: '#/components/schemas/ResponseParameters'

    createClosedUserGroupResponse:
      type: object
      properties:
        createClosedUserGroupResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                cug:
                  $ref: '#/components/schemas/closedUserGroupReturnObject'
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
      example:
        createClosedUserGroupResponse :
          return:
            auxiliaryServiceID: '16'
            identifier: '3'
            name: 'TESTPAJBS'
            spid: '1'
            cugTemplateID: '4'
            ownerMSISDN: '23100040'
            cugState: '1'
            deprecated: 'false'

    updateClosedUserGroupResponse:
      type: object
      properties:
        updateClosedUserGroupResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                cug:
                  $ref: '#/components/schemas/closedUserGroupReturnObject'
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
      example:
        updateClosedUserGroupResponse :
          return:
            auxiliaryServiceID: '16'
            identifier: '3'
            name: 'TESTPAJBS'
            spid: '1'
            cugTemplateID: '4'
            ownerMSISDN: '23100040'
            cugState: '1'
            deprecated: 'false'

    getClosedUserGroupResponse:
      type: object
      properties:
        getClosedUserGroupResponse:
          type: object
          properties:
            return:
              $ref: '#/components/schemas/closedUserGroupReturnObject'
      example:
        getClosedUserGroupResponse :
          return:
            auxiliaryServiceID: '16'
            identifier: '3'
            name: 'TESTPAJBS'
            spid: '1'
            cugTemplateID: '4'
            ownerMSISDN: '23100040'
            cugState: '1'
            deprecated: 'false'

    listDetailedClosedUserGroupsResponse:
      type: object
      properties:
        return:
          type: array
          items:
            $ref: '#/components/schemas/closedUserGroupReturnObject'
      example:
        listDetailedClosedUserGroupsResponse:
          return:
          - auxiliaryServiceID: '16'
            identifier: '3'
            name: 'TESTPAJBS'
            spid: '1'
            cugTemplateID: '4'
            ownerMSISDN: '23100040'
            cugState: '1'
            deprecated: 'false'
          - auxiliaryServiceID: '15'
            identifier: '3'
            name: 'test'
            spid: '1'
            cugTemplateID: '4'
            ownerMSISDN: '23100040'
            cugState: '1'
            deprecated: 'false'

    listMobileNumbersResponse:
      type: object
      properties:
        mobileNumbersResponse:
          type: object
          properties:
            pageKey:
              type: string
              description: Page key
            references:
              type: array
              items:
                $ref: '#/components/schemas/mobileNumbersReference'
          example:
            - groupID: '1'
              identifier: '12345678910'
              paidType: '1'
              spid: '1'
              state: '0'
              technology: '0'
            - groupID: '1'
              identifier: '1702902343397'
              paidType: '1'
              spid: '1'
              state: '0'
              technology: '0'
            - groupID: '1'
              identifier: '1702902901160'
              paidType: '1'
              spid: '1'
              state: '0'
              technology: '0'
    
    
    listClosedUserGroupsResponse:
      type: object
      properties:
        listClosedUserGroupsResponse:
          type: object
          properties:
            return:
              type: array
              items:
                type: object
                properties:
                  auxiliaryServiceID:
                    type: string
                    description: Auxilary Service identifier
                  identifier:
                    type: string
                    description: CUG identifier
                  name:
                    type: string
                    description: CUG name
                  spid:
                    type: string
                    description: CUG service provider identifier
                  cugTemplateID:
                    type: string
                    description: CUG template identifier
      example:
        listClosedUserGroupsResponse :
          return:
          - auxiliaryServiceID: '16'
            identifier: '3'
            name: 'TESTPAJBS'
            spid: '1'
            cugTemplateID: '4'
          - auxiliaryServiceID: '11'
            identifier: '3'
            name: 'test_'
            spid: '1'
            cugTemplateID: '3'

    closedUserGroupResponseObject:
      type: object
      properties:
        identifier:
          type: string
          description: Closed user group identifier
        spid:
          type: string
          description: Closed user group service provider identifier
        name:
          type: string
          description: Closed user group name
        auxiliaryServiceID:
          type: string
          description: Closed user group auxiliary service identifier
        cugType:
          type: string
          description: Closed user group type
        cugServiceType:
          type: string
          description: Closed user group service type
        voiceDiscountType:
          type: string
          description: Closed user group voice discount type
        voiceOutgoingValue:
          type: string
          description: Closed user group voice outgoing value
        voiceIncomingValue:
          type: string
          description: Closed user group voice incoming value
        smsDiscountType:
          type: string
          description: Closed user group SMS discount type
        smsOutgoingValue:
          type: string
          description: Closed user group SMS outgoing value
        smsIncomingValue:
          type: string
          description: Closed user group SMS incoming value
        serviceCharge:
          type: string
          description: Closed user group service charge
        serviceChargePostpaid:
          type: string
          description: Closed user group service charge postpaid
        serviceChargePrepaid:
          type: string
          description: Closed user group service charge prepaid
        serviceChargeExternal:
          type: string
          description: Closed user group service charge external
        activationFeeType:
          type: string
          description: Closed user group activation fee type
        smartSuspensionEnabled:
          type: string
          description: Closed user group smart suspension enabled
        glCode:
          type: string
          description: Closed user group GL code
        taxAuthority:
          type: string
          description: Closed user group tax authority
        startDate:
          type: string
          description: Closed user group start date
        endDate:
          type: string
          description: Closed user group end date
        deprecated:
          type: string
          description: Is closed user group deprecated
        shortCodeEnabled:
          type: string
          description: Is closed user group short code enabled
        shortCodePattern:
          type: string
          description: Closed user group short code pattern
        priority:
          type: string
          description: Closed user group priority
        parameters:
          $ref: '#/components/schemas/ResponseParameters'


    listDetailedClosedUserGroupTemplatesResponse:
      type: object
      properties:
        listDetailedClosedUserGroupTemplatesResponse:
          type: object
          properties:
            return:
              type: array
              items:
                $ref: '#/components/schemas/closedUserGroupResponseObject'
          example:
            return:
            - identifier: '117'
              spid: '1'
              name: 'testUpdateShortCode'
              auxiliaryServiceID: '14'
              cugType: '0'
              cugServiceType: '2'
              voiceDiscountType: '0'
              voiceOutgoingValue: '0'
              voiceIncomingValue: '0'
              smsDiscountType: '0'
              smsOutgoingValue: '0'
              smsIncomingValue: '0'
              serviceCharge: '0'
              activationFeeType: '1'
              smartSuspensionEnabled: 'false'
              glCode: '1-AUTO_GL_CODE'
              taxAuthority: '0'
              startDate: '2024-03-18T00:00:00.000-06:00'
              endDate: '3024-03-18T00:00:00.000-06:00'
              deprecated: 'false'
              shortCodeEnabled: 'true'
              shortCodePattern: ''
              priority: '0'
            - identifier: '118'
              spid: '1'
              name: 'testUpdateShortCode2'
              auxiliaryServiceID: '14'
              cugType: '0'
              cugServiceType: '2'
              voiceDiscountType: '0'
              voiceOutgoingValue: '0'
              voiceIncomingValue: '0'
              smsDiscountType: '0'
              smsOutgoingValue: '0'
              smsIncomingValue: '0'
              serviceCharge: '0'
              activationFeeType: '1'
              smartSuspensionEnabled: 'false'
              glCode: '1-AUTO_GL_CODE'
              taxAuthority: '0'
              startDate: '2024-03-18T00:00:00.000-06:00'
              endDate: '3024-03-18T00:00:00.000-06:00'
              deprecated: 'false'
              shortCodeEnabled: 'true'
              shortCodePattern: ''
              priority: '0'

    removeMsisdnsFromFraudList:
      type: object
      properties:
        msisdns:
          type: array
          description: List of Mobile Station International Subscriber Directory Numbers
          items:
            type: string
        homeLocation:
          type: string
          description: Home location
        subLocation:
          type: string
          description: Sub location
        voucherLocation:
          type: integer
          description: Voucher location
      example:
        msisdns:
          - '2223331112'
          - '2223331113'
        homeLocation: 'test'
        sublocation: 'test'
        voucherLocation: '1'

    getSubscriptionSecondaryBalance:
      type: object
      properties:
        subscriptionRef:
          $ref: '#/components/schemas/SubscriptionRef'
        categoryId:
          type: array
          description: List of category identifiers
          items:
            type: integer
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        subscriptionRef:
          accountID: '1163'
          mobileNumber: '998998998'
          spid: 1
          subscriptionType: 10001
          state: '1'
        categoryId: 1

    getSubscriptionSecondaryBalanceResponse:
      type: object
      properties:
        return:
          type: object
          required:
          - status
          - statusMessage
          properties:
            subscriptionSecondaryBalanceReference:
              type: array
              description: List of subscription secondary balance references
              items:
                type: object
                required:
                - categoryId
                - amountInSecondaryBalanceBucket
                properties:
                  categoryId:
                    type: string
                    description: Subscription secondary balance refrence category identifier
                  amountInSecondaryBalanceBucket:
                    type: string
                    description: Subsbscription amount in secondary balance bucket
            status:
              type: string
              description: Subscription Secondary Balance status
            statusMessage:
              type: string
              description: Subscription Secondary Balance status message
            parameter:
              $ref: '#/components/schemas/ResponseParameters'
          example:
            getSubscriptionSecondaryBalanceResponse:
              return:
                subscriptionSecondaryBalanceReference:
                - categoryId: '0'
                  amountInSecondaryBalanceBucket: '-5435'
                - categoryId: '1'
                  amountInSecondaryBalanceBucket: '2335'
                status: '0'
                statusMessage: 'Successfully retrieved subscription secondary balance. Could not retrieve balance for categories '

    removeMsisdnsFromFraudListResponse:
      type: object
      properties:
        removeMsisdnsFromFraudListResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                fraudInfo:
                  type: array
                  items:
                    type: object
                    properties:
                      fraudResultCode:
                        type: string
                        description: Fraud result code
                      msisdn:
                        type: string
                        description: Mobile Station International Subscriber Directory Number
                      vmsException:
                        $ref: '#/components/schemas/vmsException'
                numberOfMsisdns:
                  type: string
                  description: Number of Mobile Station International Subscriber Directory Numbers
                numberOfSuccesses:
                  type: string
                  description: Number of successes
                overallResultCode:
                  type: string
                  description: Overall result code
              example:
                fraudInfo:
                  - fraudResultCode: '1'
                    msisdn: '2223331112'
                    vmsException:
                      - errorCode: '201'
                        message: 'test'
                numberOfMsisdns: '1'
                numberOfSuccesses: '1'
                overallResultCode: '200'

    mnpEligibilityRequest: 
      properties:
        phoneNumber:
          description: Phone number to check
          type: string
          example: 332222323
        productType:
          description: Product type
          type: string
          example: EXT_2R
        targetBrand:
          description: Target brand
          type: number
          example: 1
        parameters:
            $ref: '#/components/schemas/RequestParameters'

    convertIndividualToGroupInner:
      type: object
      properties:
        accountID:
          type: string
          description: Identifier of the account
        validateOnly:
          type: boolean
          description: 'If true then BSS will validate the account conversion request instead of performing the actual account conversion. False, if not provided.'
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        accountID: '17'
        validateOnly: true

    createIndividualSubscriberInner:
      type: object
      required:
        - accountProfile
        - detail
        - accountBilling
        - subscriptionProfile
        - status
        - rating
        - subscriptionBilling
      properties:
        creationTemplateID:
          type: integer
          description: Creation template identifier
        accountProfile:
          $ref: '#/components/schemas/accountProfile'
        detail:
          $ref: '#/components/schemas/accountDetails'
        accountBilling:
          $ref: '#/components/schemas/accountBilling'
        paymentInfo:
          $ref: '#/components/schemas/accountPaymentInfo'
        identification:
          $ref: '#/components/schemas/accountIdentification'
        company:
          $ref: '#/components/schemas/accountCompany'
        bank:
          $ref: '#/components/schemas/accountBank'
        contact:
          $ref: '#/components/schemas/accountContact'
        extension:
          description: Subscriber extension
          type: array
          items:
            type: object
            description: "Type of extension and it's namespace. For example: accountdtns:BaseAccountExtension"
        subscriptionProfile:
          $ref: '#/components/schemas/subscriberSubscriptionProfile'
        status:
          description: Subscriber status
          type: object
          properties:
            state:
              $ref: '#/components/schemas/SubscriptionStateEnum'
        rating:
          $ref: '#/components/schemas/rating'
        subscriptionBilling:
          $ref: '#/components/schemas/subscriptionBilling'
        cardPackage:
          $ref: '#/components/schemas/CardPackage'
        options:
          $ref: '#/components/schemas/subscriberOptions'
        subscriptionExtension:
          type: array
          description: Subsriber subscription extension
          items:
            type: object
            description: "Type of subscription extension and it's namespace. For example: subscriptiondtns:BaseSubscriptionExtension"
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        accountProfile:
          companyName: Company Inc
          name: Name
          parent: 1267
          responsible: 'TRUE'
          spid: 1
          state: 0
        detail:
          role: 1
          accountType: 1
          groupType: 0
          systemType: 0
        accountBilling:
          creditCategory: 0
          discountClass: 1
          taxAuthority: 0
          billCycle: 1
        paymentInfo:
          paymentMethodTypeID: 1
        identification:
          dateOfBirth: '1981-12-18T00:00:00.000+05:00'
          identification:
            type: 1
            value: 123
          occupationID: 10
          securityQuestion:
            - question: Q
              answer: A
            - question: Q1
              answer: A1
            - question: Q1
              answer: A1
        company:
          address1: KK
          address2: MultiPlay
          address3: MultiPlay
          city: CityName
          contactNumber: 1111222222
          country: CountryName
          emailAddress: user.name@optiva.com
          firstName: FirstName
          initials: Mr
          lastName: S
          postalCode: 411128
          title: Title
        bank:
          city: CityName
          contactNumber: 9423174377
          country: CountryName
          lastName: LastName
        contact:
          address1: Address 1
          city: CityName
          contactNumber: 99312312385
          country: CountryName
          emailAddress: user.name@optiva.com
          firstName: FirstName
          lastName: S
          title: Mr
          contactName: contactName
          employer: EmployerName
          employerAddress: test
          emailNotification: true
        subscriptionProfile:
          cardPackageID: 73453343334
          mobileNumber: 73453343334
          paidType: 0
          spid: 1
          subscriptionClass: 1
          subscriptionType: 10001
          technologyType: 0
        status:
          state: 1
        rating:
          primaryPricePlanID: 100007
        subscriptionBilling:
          creditLimit: 15000
          deposit: 0
          initialBalance: 11000

    subscriberSubscriptionProfile:
      type: object
      required:
        - mobileNumber
        - subscriptionClass
        - subscriptionType
        - technologyType
      properties:
        poolLimit:
          description: Subscriber subscription profile pool limit
          type: integer
        poolLimitStrategy:
          $ref: '#/components/schemas/PoolLimitStrategyEnum'
        notificationPreference:
          $ref: '#/components/schemas/NotificationPreferenceEnum'
        accountID:
          description: Subscriber profile account identifier
          type: string
        cardPackageID:
          description: Subscriber profile card package identifier
          type: string
        hlrID:
          description: Home Location Register identifier
          type: integer
        identifier:
          description: Subscription profile identifier
          type: string
        mobileNumber:
          description: Mobile number
          type: string
        paidType:
          $ref: '#/components/schemas/PaidTypeEnumeration'
        spid:
          description: Service Provider identifier
          type: integer
        subscriptionClass:
          description: Subscription class
          type: integer
        subscriptionType:
          description: Subscription type
          type: integer
        technologyType:
          $ref: '#/components/schemas/TechnologyTypeEnumeration'

    rating:
      description: Rating object
      type: object
      properties:
        primaryPricePlanID:
          description: Primary price plan identifier
          type: integer
        secondaryPricePlanEnd:
          description: Secondary price plan end date
          type: string
        secondaryPricePlanID:
          description: Secondary price plan identifier
          type: integer
        secondaryPricePlanStart:
          description: Secondary price plan start date
          type: string
        contractID:
          description: Contract identifier
          type: integer

    subscriptionBilling:
      type: object
      description: Billing object
      properties:
        billingLanguage:
          type: string
          description: Billing language
        billingOption:
           $ref: '#/components/schemas/BillingOptionTypeEnum'
        category:
          type: integer
          description: Subscription category
        chargeToPostpaid:
          type: boolean
          description: Charge to postpaid boolean
        discountClass:
          type: integer
          description: Discount class
        maximumBalance:
          type: integer
          description: Maximum balance
        maximumRecharge:
          type: integer
          description: Maximum recharge
        postpaidSupport:
          type: string
          description: Postpaid support mobile number
        reactivationFee:
          type: integer
          description: Reactivation fee
        creditLimit:
          type: integer
          description: Credit limit
        deposit:
          type: integer
          description: Deposit
        initialBalance:
          type: integer
          description: Initial balance
        intialExpiryDateExtension:
          type: integer
          description: Initial expiry date extension

    subscriberOptions:
      description: Options object
      type: object
      properties:
        isSelected:
          description: Option is selected boolean
          type: boolean
        pricePlanDetails:
           $ref: '#/components/schemas/subscriberPricePlanDetails'
        items:
          type: array
          items:
            $ref: '#/components/schemas/subscriberItem'
        parameters:
          $ref: '#/components/schemas/RequestParameters'

    subscriberItem:
      description: Subscriber item object
      type: object
      properties:
        identifier:
          type: integer
          description: Identifier
        optionType:
          $ref: '#/components/schemas/PricePlanOptionTypeEnumeration'
        optionState:
          $ref: '#/components/schemas/PricePlanOptionStateTypeEnum'
        name:
          type: string
          description: Name of the option
        provisioningState:
          $ref: '#/components/schemas/ProvisioningStateTypeEnumeration'
        startDate:
          type: string
          description: The date on which the option should start if dated in the future; otherwise the date on which the option started
        endDate:
          type: string
          description: The date on which the option should end if dated in the future; otherwise the date on which the option ended
        numberOfPayments:
          type: integer
          description: Number of payments
        recurrence:
          $ref: '#/components/schemas/recurrence'
        adjustmentTypeID:
          type: integer
          description: Identifier of the adjustment type
        fee:
          type: integer
          description: The fee charged for the option
        prorationEnabled:
          type: boolean
          description: Indicates whether or not the option has been configured to prorate the initial fee based on when the service was provisioned relative to the beginning of the billing period
        parameters:
          $ref: '#/components/schemas/RequestParameters'

    subscriberPricePlanDetails:
      description: Subscriber price plan details object
      type: object
      properties:
        currentVersion:
          description: Current version
          type: integer
        enabled:
          description: Enabled boolean
          type: boolean
        identifier:
          description: Identifier
          type: integer
        spid:
          description: Service Provider identifier
          type: integer
        name:
          description: Name
          type: string
        paidType:
          $ref: '#/components/schemas/PaidTypeEnumeration'
        subscriptionType:
          description: Subscription type
          type: integer
        subscriptionLevel:
          description: Subscription level
          type: integer
        technology:
          $ref: '#/components/schemas/TechnologyTypeEnumeration'
        billingMessage:
          $ref: '#/components/schemas/billingMessage'
        criteria:
          $ref: '#/components/schemas/criteria'
        nextVersion:
          description: Next version
          type: integer
        versions:
           $ref: '#/components/schemas/versions'
        function:
          $ref: '#/components/schemas/PricePlanFunctionTypeEnum'
        group:
          description: Group(s)
          type: array
          items:
            type: integer
        voiceRatePlan:
          description: Voice rate plan(s)
          type: array
          items:
            type: string
        smsRatePlan:
          description: SMS rate plan(s)
          type: array
          items:
            type: string
        dataRatePlan:
          description: Data rate plan(s)
          type: array
          items:
            type: string
        parameters:
          $ref: '#/components/schemas/RequestParameters'

    billingMessage:
      description: Billing message object
      type: array
      items:
        type: object
        properties:
          identifier:
            type: integer
            description: Identifier
          language:
            type: string
            description: Language
          message:
            type: string
            description: Message
          spid:
            type: integer
            description: Service Provider Identifier
          state:
            $ref: '#/components/schemas/BillingMessageStateEnum'

    criteria:
      description: Criteria
      type: array
      items:
        description: Criteria item(s)
        type: object
        required:
          - durationFrequency
        properties:
          contractDuration:
            description: Contraction duration
            type: object
            properties:
              minimumDuration:
                description: Minimum contract duration
                type: integer
              maximumDuration:
                description: Maximum contract duration
                type: integer
              durationFrequency:
                $ref: '#/components/schemas/ContractFeeFrequencyEnum'

    PoolLimitStrategyEnum:
      type: integer
      enum: [0, 1, 2]
      description: >
        Indicates the pool limit strategy:
         - `0` - NONE
         - `1` - COMMON_LIMIT
         - `2` - INDIVIDUAL_LIMIT

    BillingOptionTypeEnum:
      type: integer
      enum: [0, 1, 2]
      description: >
        Indicates the billing option type:
         - `0` - SUMMARY
         - `1` - INTERMEDIATE
         - `2` - DETAILED

    PricePlanOptionStateTypeEnum:
      type: integer
      enum: [0, 1, 2]
      description: >
        Indicates the price plan option state type:
         - `0` - Active
         - `1` - Deprecated
         - `2` - Closed

    PricePlanFunctionTypeEnum:
      type: integer
      enum: [0, 1, 2]
      description: >
        Indicates the price plan function type:
         - `0` - Normal
         - `1` - Pool
         - `2` - VPN

    BillingMessageStateEnum:
      type: integer
      enum: [0, 1]
      description: >
        Indicates the billing message state:
         - `0` - Active
         - `1` - Inactive

    ContractFeeFrequencyEnum:
      type: integer
      enum: [0, 1, 2]
      description: >
        Indicates the contract fee frequency:
         - `0` - Day
         - `1` - Month
         - `2` - Year

    ServicePeriodEnum:
      type: integer
      enum: [0, 1, 2, 3, 4, 5]
      description: >
        Indicates the service period:
         - `0` - Monthly
         - `1` - Annual
         - `2` - Weekly
         - `3` - Multi-Monthly
         - `4` - Daily
         - `5` - Hourly

    SubscriptionStateEnum:
      type: integer
      enum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
      description: >
        Indicates the subscription state:
         - `0` - PENDING
         - `1` - ACTIVE
         - `2` - INACTIVE
         - `3` - SUSPENDED
         - `4` - MOVED
         - `5` - LOCKED
         - `6` - EXPIRED
         - `7` - AVAILABLE
         - `8` - NON_PAYMENT_WARNED
         - `9` - NON_PAYMENT_SUSPENDED
         - `10` - PROMISE_TO_PAY
         - `11` - IN_ARREARS
         - `12` - IN_COLLECTION
         - `13` - DORMANT

    addSubscriptionPersonalListPlanEntries:
      type: object
      required:
      - subscriptionRef
      properties:
        subscriptionRef:
           $ref: '#/components/schemas/SubscriptionRef'
        listID:
          type: integer
          description: The subscription’s personal list plan ID.
        mobileNumbers:
          type: array
          description: Phone numbers of subscribers to be added to the personal list plan.
          items:
            type: string
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        subscriptionRef:
          accountID: "127-1"
          mobileNumber: "23100040"
          spid: 1
        listID: 2
        mobileNumbers:
          - "560000008"

    Error400:
      description: Used when an API throws an Error with an HTTP error response code 400
      type: object
      required:
        - code
        - reason
      properties:
        code:
          type: string
          description: Error code
          example: '400'
        reason:
          type: string
          description: Error reason
          example: 'Bad Request'
        message:
          type: string
          description: More details and corrective actions related to the error which can be shown to a client user.
          example: 'obp code=14,text=VALIDATION_EXCEPTION'

    Error404:
      description: Used when an API throws an Error with an HTTP error response code 404
      type: object
      required:
        - code
        - reason
      properties:
        code:
          type: string
          description: Error code
          example: '404'
        reason:
          type: string
          description: Error reason
          example: 'Not Found'
        message:
          type: string
          description: More details and corrective actions related to the error which can be shown to a client user.
          example: 'obp code=4,text=INVALID_SPID'

    Error:
      description: Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)
      type: object
      required:
        - code
        - reason
      properties:
        code:
          type: string
          description: Error code
          example: '500'
        reason:
          type: string
          description: Error reason
          example: 'Internal Server Error'
        message:
          type: string
          description: More details and corrective actions related to the error which can be shown to a client user.
          example: 'obp code=1200,text=OBP internal Error'
          
    ErrorCMSpecific:
      description: Additional error elements specific to customer management.
      type: object
      properties:
        code:
          description: >-
            Application relevant detail, defined in the API or a
            common list.
          type: string
        reason:
          description: >-
            Explanation of the reason for the error which can be shown
            to a client user.
          type: string
        message:
          description: >-
            More details and corrective actions related to the error
            which can be shown to a client user.
          type: string
        status:
          description: HTTP Error code extension
          type: string
        referenceError:
          description: URI of documentation describing the error.
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class.
          type: string
        '@schemaLocation':
          description: >-
            A URI to a JSON-Schema file that defines additional
            attributes and relationships
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name.
          type: string
          
    SuccessfulResponse:
      description: Used when an API sends successful response.
      type: object
      properties:
        SuccessfulResponse:
          type: object
          properties:
            result:
              type: string
              description: Application relevant detail.
          example: 
            result: '0'
            
    executeAccountBalanceQueryResponse:
      type: object
      properties:
        executeResultResponse:
          type: object
          required:
            - result
          properties:
            result:
              type: object
              required:
                - resultCode
              properties:
                resultCode:
                  type: string
                  description: Result code
                resultMessage:
                  type: string
                  description: Result message
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
          example:
            result:
              resultCode: '0'
              resultMessage: 'example'
              parameters: [
                {
                  name: 'parameter1',
                  value: 'value1'
                }
              ]
              
    RetrieveEntityResponse: 
      type: object
      properties:
        retrieveEntityResponse:
          type: object
          required:
            - return
          properties:
            return: 
              type: object
              required:
                - statusCode
                - statusMessage
              properties:
                statusCode: 
                  type: string
                  description: Status code
                statusMessage:
                  type: string
                  description: Status message
                parameters:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Name
                    value:
                      type: object
                      properties:
                        entity:
                          $ref: '#/components/schemas/Entity'
          example:
            return:
              parameters: 
                - name: 'RetrievedEntities'
                  value:
                    entity: [
                      {
                        property: [
                          {
                            name: 'name',
                            value: 'NL',
                            valueType: 's341:string'
                          }
                        ],
                        type: 'com.redknee.app.crm.bean.Province1'
                      }
                    ]
                  statusCode: '0000'
                  statusMessage: 'Operation completed successfully'
                
    updateEntityResponse:
      type: object
      properties:
        updateEntityResponse:
          type: object
          required:
            - return
          properties:
            return: 
              type: object
              required:
                - statusCode
                - statusMessage
              properties:
                statusCode: 
                  type: string
                  description: Status code
                statusMessage:
                  type: string
                  description: Status message
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
      example:
          updateEntityResponse:
            return:
              statusCode: "0000"
              statusMessage: "Operation completed successfully"
              parameters: [
                {
                  name: "parameter1",
                  value: "value1"
                }
              ]


    listPaymentAgentsResponse:
      type: object
      properties:
        listPaymentAgentsResponse:
          type: object
          properties:
            return: 
              type: array
              items: 
                type: object
                properties:
                  description: 
                    type: string
                    description: Description
                  name:
                    type: string
                    description: Name
                  spid:
                    type: string
                    description: Service Provider Identifier
          example:
           return: [
             {
              description: 'testing',
              name: 'test-agent',
              spid: '1'
             },
            {
              description: 'testing2',
              name: 'test-agent2',
              spid: '2'
             }
            ]

    CategoryResponse:
      type: object
      properties:
        description:
          type: string
          description: Description
        dunningExempt:
          type: string
          description: Dunning exempt
        factor:
          type: string
          description: Factor
        identifier:
          type: string
          description: Identifier
        spid:
          type: string
          description: Service Provider Identifier
        dunningConfiguration:
          type: string
          description: Dunning configuration

    listCreditCategoryResponse:
      type: object
      properties:
        listCreditCategoryResponse:
          type: object
          properties:
            return:
              type: array
              items:
                $ref: '#/components/schemas/CategoryResponse'
          example:
            return: [
              {
                description: 'VIP',
                dunningExempt: 'false',
                factor: '1.5',
                identifier: '0',
                spid: '1'
              },
              {
                description: Staff,
                dunningExempt: 'false',
                factor: '1.5',
                identifier: '1',
                spid: '1',
              }
            ]

    getCreditCategoryResponse:
      type: object
      properties:
        getCreditCategoryResponse:
          type: object
          properties:
            return:
              $ref: '#/components/schemas/CategoryResponse'
          example:
            return:
              description: 'VIP'
              dunningExempt: 'false'
              factor: '1.5'
              identifier: '0'
              spid: '1'
              dunningConfiguration: 1

    removeSupplementaryData:
      type: object
      required:
      - target
      - data
      properties:
        target:
          type: object
          required:
          - identifier
          properties:
            identifier:
              type: string
              description: Identifier
        data:
          type: array
          items:
            type: object
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        target:
          identifier: '1112'
        data:
        - name: 'test'
          value: 'test'
        - name: 'test2'
          value: 'test2'

    detailedCallDetailsResult:
      type: object
      properties:
        accountID: 
          type: string
          description: Identifier of the account
        balance:
          type: string
          description: Balance
        callType:
          type: string
          description: Call type
        charge:
          type: string
          description: Charge
        dataUsage:
          type: string
          description: Data usage
        destinationLocation:
          type: string
          description: Destination location
        destinationNumber:
          type: string
          description: Destination number
        duration:
          type: string
          description: Duration
        identifier:
          type: string
          description: Identifier
        mobileNumber:
          type: string
          description: Mobile number
        originatingLocation:
          type: string
          description: Originating location
        originatingNumber:
          type: string
          description: Originating number
        transactionDate:
          type: string
          description: Transaction date
        usageType:
          type: string
          description: Usage type
        parameters:
          $ref: '#/components/schemas/RequestParameters'
        billingCategoryID: 
          type: string
          description: Identifier of the billing category
        bucketRateID:
          type: string
          description: Identifier of the bucket rate
        flatRate:
          type: string
          description: Flat rate
        glCode:
          type: string
          description: GL code
        postedDate:
          type: string
          description: Posted date
        primaryTaxAuthorityID:
          type: string
          description: Identifier of the primary tax authority
        ratePlan:
          type: string
          description: Rate plan
        ratingRule:
          type: string
          description: Rating rule
        secondaryTaxAuthorityID:
          type: string
          description: Identifier of the secondary tax authority
        subscriberType:
          type: string
          description: Subscriber type
        type:
          type: string
          description: Type
        usedBucketMinutes:
          type: string
          description: Used bucket minutes
        variableRate:
          type: string
          description: Variable rate
        variableRateUnits:
          type: string
          description: Variable rate units

    listDetailedCallDetailsResponse: 
      type: object
      properties:
        listDetailedCallDetailsResponse:
          type: object
          properties:
            return: 
              type: object
              properties:
                pageKey: 
                  type: string
                  description: Page key
                results:
                  type: array
                  items: 
                    $ref: '#/components/schemas/detailedCallDetailsResult'
          example:
            return: 
              pageKey: '20'
              results: [
                {
                  accountID: '1697',
                  balance: '108146789',
                  callType: '2',
                  charge: '50000',
                  dataUsage: '100',
                  destinationLocation: 'CatchAll',
                  destinationNumber: '14100120072',
                  duration: '180000',
                  identifier: '20',
                  mobileNumber: '14100120072',
                  originatingLocation: 'All',
                  originatingNumber: '14100120072',
                  parameters: [
                    {
                      name: 'RNUsageType',
                      value: 'default'
                    },
                    {
                      name: 'RNBillingCategoryID',
                      value: 'DOMESTIC'
                    }
                  ],
                  transactionDate: '2023-09-25T05:07:57.000-05:00',
                  usageType: '1',
                  billingCategoryID: '0',
                  bucketRateID: '2',
                  flatRate: '0',
                  glCode: 'GL_1',
                  postedDate: '2023-09-25T05:07:57.000-05:00',
                  primaryTaxAuthorityID: '4',
                  ratePlan: '1',
                  ratingRule: '1',
                  secondaryTaxAuthorityID: '7',
                  subscriberType: '1',
                  type: 'CallDetail',
                  usedBucketMinutes: '0',
                  variableRate: '5000000',
                  variableRateUnits: '3'
                }
              ]
    
    updateAccountBillCycleResponse:
      type: object
      properties:
        updateAccountBillCycleResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                previousBillCycleID:
                  type: string
                  description: Identifier of the previous bill cycle
                previousBillCycleChange:
                  type: string
                  description: Previous bill cycle change
                currentBillCycleID:
                  type: string
                  description: Identifier of the current bill cycle
                earliestPermittedNewBillCycleChange:
                  type: string
                  description: Earliest permitted new bill cycle change
                scheduledBillCycleChange:
                  type: string
                  description: The date on which the scheduled bill cycle change will take effect
                scheduledBillCycleID:
                  type: string
                  description: Identifier of the scheduled bill cycle
          example:
            return:
              previousBillCycleID: '1'
              previousBillCycleChange: '1'
              currentBillCycleID: '2'
              earliestPermittedNewBillCycleChange: '2024-02-08T08:40:23.923-06:00'
              scheduledBillCycleChange: '2024-02-08T08:40:23.923-06:00'
              scheduledBillCycleID: '2'

    listInvoicesResponse:
      type: object
      properties:
        return:
          type: array
          items:
            type: object
            properties:
              accountID:
                type: string
                description: Identifier of the account
              currentAmount:
                type: string
                description: Current amount
              currentTaxAmount:
                type: string
                description: Current tax amount
              discountAmount:
                type: string
                description: Discount amount
              dueDate:
                type: string
                description: Due date
              generationDate:
                type: string
                description: Generation date
              invoiceDate:
                type: string
                description: Invoice date
              invoiceID:
                type: string
                description: Identifier of the invoice
              paymentAmount:
                type: string
                description: Payment amount
              pdfFilePath:
                type: string
                description: PDF file path
              previousBalance:
                type: string
                description: Previous balance
              totalAmount:
                type: string
                description: Total amount
      example:
        listInvoicesResponse:
          return:
          - accountID: '115'
            currentAmount: '0'
            currentTaxAmount: '0'        
            discountAmount: '0'
            dueDate: '2023-12-04T00:00:00.000-06:00'
            generationDate: '2023-11-23T04:48:42.528-06:00'
            invoiceDate: '2023-11-24T00:00:00.000-06:00'
            invoiceID: 'TAXSEQID0'
            paymentAmount: '0'
            pdfFilePath: '/tmp/invoices/not-post/Invoice-115-20231123.pdf'
            previousBalance: '0'
            totalAmount: '0'
          - accountID: '115'
            currentAmount: '0'
            currentTaxAmount: '0'        
            discountAmount: '0'
            dueDate: '2023-12-03T00:00:00.000-06:00'
            generationDate: '2023-11-23T02:59:41.107-06:00'
            invoiceDate: '2023-11-23T00:00:00.000-06:00'
            invoiceID: 'TAXSEQID1'
            paymentAmount: '-1500'
            pdfFilePath: '/tmp/invoices/not-post/Invoice-115-20231123.pdf'
            previousBalance: '0'
            totalAmount: '-1500'
    
    getInvoiceResponse:
      type: object
      required:
      - return
      properties:
        return:
          $ref: '#/components/schemas/invoiceResponseProperties'
      example:
        getInvoiceResponse:
          return:
            accountID: '115'
            currentAmount: '0'
            currentTaxAmount: '0'        
            discountAmount: '0'
            dueDate: '2023-12-03T00:00:00.000-06:00'
            generationDate: '2023-11-23T02:59:41.107-06:00'
            invoiceDate: '2023-11-23T00:00:00.000-06:00'
            invoiceID: 'TAXSEQID0'
            paymentAmount: '0'
            pdfFilePath: '/tmp/invoices/not-post/Invoice-115-20231123.pdf'
            previousBalance: '0'
            totalAmount: '0'
            dataAmount: '0'
            debtLastBillCycle1: '0'
            debtLastBillCycle2: '0'
            debtLastBillCycle3: '0'
            domesticCallsAmount: '0'
            droppedCallCompensationAmount: '0'
            internationalCallsAmount: '0'
            oneTimeChangesAmount: '0'
            otherChargesAmount: '0'
            recurringChargeAmount: '0'
            roamingAmount: '0'
            supplementaryChargesAmount: '0'
            taxAmount: '0'
            alternateDetails:
              pdfInvoiceState: '0'
    
    invoiceResponseProperties:
      type: object
      required:
      - return
      properties:
        accountID:
          type: string
          description: Identifier of the account
        currentAmount:
          type: string
          description: Current amount
        currentTaxAmount:
          type: string
          description: Current tax amount
        discountAmount:
          type: string
          description: Discount amount
        dueDate:
          type: string
          description: Due date
        generationDate:
          type: string
          description: Generation date
        invoiceDate:
          type: string
          description: Invoice date
        invoiceID:
          type: string
          description: Identifier of the invoice
        paymentAmount:
          type: string
          description: Payment amount
        pdfFilePath:
          type: string
          description: PDF file path
        previousBalance:
          type: string
          description: Previous balance
        totalAmount:
          type: string
          description: Total amount
        dataAmount:
          type: string
          description: Data amount
        debtLastBillCycle1:
          type: string
          description: 'Debt last bill cycle 1'
        debtLastBillCycle2:
          type: string
          description: 'Debt last bill cycle 2'
        debtLastBillCycle3:
          type: string
          description: 'Debt last bill cycle 3'
        domesticCallsAmount:
          type: string
          description: Domestic calls amount
        droppedCallCompensationAmount:
          type: string
          description: Dropped call compensation amount
        internationalCallsAmount:
          type: string
          description: International calls amount
        oneTimeChangesAmount:
          type: string
          description: One time changes amount
        otherChargesAmount:
          type: string
          description: Other charges amount
        recurringChargeAmount:
          type: string
          description: Recurring charge amount
        roamingAmount:
          type: string
          description: Roaming amount
        rootInvoideID:
          type: string
          description: Root invoice identifier
        settlementState:
          $ref: '#/components/schemas/SettlementStateResponseEnumeration'
        supplementaryChargesAmount:
          type: string
          description: Supplementary charges amount
        taxAmount:
          type: string
          description: Tax amount
        alternateDetails:
          type: object
          required:
          - pdfInvoiceState
          - numberOfPages
          - feeAmount
          properties:
            pdfInvoiceState:
              $ref: '#/components/schemas/PdfInvoiceStateResponseEnumeration'
            numberOfPages:
              type: string
              description: Number of pages
            feeAmount:
              type: string
              description: Fee amount

    callDetailsResult:
      type: array
      items:
        type: object
        properties:
          accountID: 
            type: string
            description: Identifier of the account
          balance:
            type: string
            description: Balance
          callType:
            type: string
            description: Call type
          charge:
            type: string
            description: Charge
          dataUsage:
            type: string
            description: Data usage
          destinationLocation:
            type: string
            description: Destination location
          destinationNumber:
            type: string
            description: Destination number
          duration:
            type: string
            description: Duration
          identifier:
            type: string
            description: Identifier
          mobileNumber:
            type: string
            description: Mobile number
          originatingLocation:
            type: string
            description: Originating location
          originatingNumber:
            type: string
            description: Originating number
          transactionDate:
            type: string
            description: Transaction date
          usageType:
            type: string
            description: Usage type
          parameters:
            $ref: '#/components/schemas/ResponseParameters'
            
    listCallDetailsResponse: 
      type: object
      properties:
        listCallDetailsResponse:
          type: object
          properties:
            return: 
              type: object
              properties:
                pageKey: 
                  type: string
                  description: Page key
                references:
                  $ref: '#/components/schemas/callDetailsResult'
          example:
            return: 
              pageKey: '20'
              references: [
                {
                  accountID: '17',
                  balance: '108146789',
                  callType: '2',
                  charge: '50000',
                  dataUsage: '100',
                  destinationLocation: 'CatchAll',
                  destinationNumber: '7731003103',
                  duration: '180000',
                  identifier: '20',
                  mobileNumber: '7731003103',
                  originatingLocation: 'All',
                  originatingNumber: '7731003103',
                  transactionDate: '2023-09-25T05:07:57.000-05:00',
                  usageType: '1',
                  parameters: [
                    {
                      name: 'RNUsageType',
                      value: 'default'
                    }
                  ]
                }
              ]
                  
    listAccountRolesResponse:
      type: object
      properties:
        return:
          type: array
          items:
            type: object
            properties:
              identifier:
                type: integer
                description: Identifier
              name:
                type: string
                description: Name
              allowedSubscriptionClasses:
                type: array
                description: List of allowed subscription classes
                items:
                  type: integer
      example:
        listAccountRolesResponse:
          - return:
              identifier: 1
              name: "Subscriber"
              allowedSubscriptionClasses:
              - 1
              - 2
              - 5
              - 6
          - return:
              identifier: 2
              name: "Vendor"
              allowedSubscriptionClasses:
              - 1
              - 2
              - 3

    getSupplementaryDataResponse:
       type: object
       properties:
        getSupplementaryDataResponse:
         type: object
         properties:
           return:
            type: object
            properties:
             data:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Name
                  value:
                    type: string
                    description: Value
             parameters:
              $ref: '#/components/schemas/ResponseParameters'
       example:
        getDetailedAccountBalancesResponse:
         return:
            data:
              - name: 'oOnrA'
                value: 'test'
            parameters:
              - name: 'test'
                valie: 'test'

    getDetailedAccountBalancesResponse:
       type: object
       properties:
        getDetailedAccountBalancesResponse:
         type: object
         properties:
           return:
            type: object
            properties:
             lastInvoiceAmount:
              type: integer
              description: Last invoice amount
             paymentsSinceLastInvoice:
              type: integer
              description: Payments since last invoice
             adjustmentsSinceLastInvoice:
              type: integer
              description: Adjustments since last invoice
             writtenOffBalance:
              type: integer
              description: Written off balance
       example:
        getDetailedAccountBalancesResponse:
         return:
          lastInvoiceAmount: "0"
          paymentsSinceLastInvoice: "0"
          adjustmentsSinceLastInvoice: "-3250578"
          writtenOffBalance: "0"
                
    getCallDetailResponse: 
      type: object
      properties:
        getCallDetailResponse:
            $ref: '#/components/schemas/getCallDetailResults'
      example:
        return:
          accountID: '18'
          balance: '108146790'
          billingCategoryID: '1'
          bucketRateID: '1'
          callType: '2'
          charge: '50000'
          dataUsage: '100'
          destinationLocation: 'CatchAll'
          destinationNumber: '7731003104'
          duration: '180000'
          flatRate: '0'
          glCode: 'GL_1'
          identifier: '456'
          mobileNumber: '7731003104'
          originatingLocation: 'All'
          originatingNumber: '7731003104'
          parameters: [
            {
              name: 'RNUsageType',
              value: 'default'
            }
          ]
          postedDate: '2023-09-25T05:07:57.000-05:00'
          primaryTaxAuthorityID: '4'
          ratePlan: '1'
          ratingRule: '1'
          secondaryTaxAuthorityID: '7'
          subscriberType: '1'
          type: 'CallDetail'
          usedBucketMinutes: '0'
          variableRate: '5000000'
          variableRateUnits: '3'
                    
    getCallDetailResults:
      type: object
      properties:
        return: 
            $ref: '#/components/schemas/detailedCallDetailsResult'

    updateSubscriptionCardPackage:
      type: object
      required:
      - subscriptionRef
      properties:
        subscriptionRef:
         $ref: '#/components/schemas/SubscriptionRef'
        newCardPackageID:
          type: string
          description: The package ID of the new card package
        cardPackage:
          $ref: '#/components/schemas/CardPackage'
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        subscriptionRef:
          accountID: '1163'
          mobileNumber: '998998998'
          spid: 1
          subscriptionType: 10001
          state: '1'
        newCardPackageID: '1158'
        cardPackage:
          identifier: '1'
          packageGroupID: '1-AUTO_PKG_GRP'
          spid: 1
          technology: 0
          dealer: '1'
          imsi: '12345678'

    generateAlternateInvoice:
      type: object
      required:
      - accountID
      - invoiceID
      properties:
        accountID:
          type: string
          description: Account identifier
        invoiceID:
          type: string
          description: Invoice identifier
      example:
        accountID: '1109'
        invoiceID: 'TAXSEQID1026'

    applyChargesForAlternateInvoice:
      type: object
      required:
      - accountID
      - invoiceID
      properties:
        accountID:
          type: string
          description: Account identifier
        invoiceID:
          type: string
          description: Invoice identifier
      example:
        accountID: '1109'
        invoiceID: 'TAXSEQID1026'

    applyChargesForAlternateInvoiceResponse:
      type: object
      required:
      - accountID
      - invoiceID
      properties:
        return:
          $ref: '#/components/schemas/invoiceResponseProperties'
      example:
        applyChargesForAlternateInvoiceResponse:
          accountID: '1109'
          currentAmount: '7450'
          currentTaxAmount: '0'
          discountAmount: '0'
          dueDate: '2024-04-03T00:00:00.000-06:00'
          generationDate: '2024-04-03T00:00:00.000-06:00'
          invoiceDate: '2024-04-03T00:00:00.000-06:00'
          invoiceID: 'TAXSEQID1026'
          paymentAmount: '0'
          pdfFilePath: '/tmp/invoices/not-post/Invoice-1109-20240324.pdf'
          previousBalance: '0'
          totalAmount: '7450'
          dataAmount: '0'
          debtLastBillCycle1: '0'
          debtLastBillCycle2: '0'
          debtLastBillCycle3: '0'
          domesticCallsAmount: '0'
          droppedCallCompensationAmount: '0'
          internationalCallsAmount: '0'
          oneTimeChangesAmount: '0'
          otherChargesAmount: '0'
          recurringChargeAmount: '7450'
          roamingAmount: '0'
          supplementaryChargesAmount: '0'
          taxAmount: '0'
          alternateDetails:
            pdfInvoiceState: '3'
            numberOfPages: '2'
            feeAmount: '0'

    listScreeningTemplatesResponse:
      type: object
      properties:
        listScreeningTemplatesResponse:
          properties:
            return:
              type: array
              items:
                type: object
                properties:
                  identifier:
                    type: string
                    description: Identifier of the screening template
                  spid:
                    type: string
                    description: Service Provider Identifier
                  name:
                    type: string
                    description: Screening template name
                  description:
                    type: string
                    description: Description
                  state:
                    $ref: '#/components/schemas/ScreeningTemplateStateType'
          example:
            return:
            - identifier: '671048'
              spid: '1'
              name: 'test'
              description: 'test'
              state: '0'
            - identifier: '671049'
              spid: '1'
              name: 'test'
              description: 'test'
              state: '0'

    getDiscountClassResponse:
      type: object
      properties:
        return:
          type: object
          properties:
            identifier:
              type: string
              description: Identifier
            spid:
              type: string
              description: Service Provider Identifier
            name:
              type: string
              description: Name
            useThreshold:
              type: string
              description: True if the discount should only be applied when the discountable amount on the invoice exceeds this discount class's threshold amount; false if the discount should always be awarded regardless of invoice amounts.
            thresholdAmount:
              type: string
              description: The minimum discountable amount on the invoice required before a discount will be applied when thresholding is enabled.
            discountPercentage:
              type: string
              description: The percentage of amount on the invoice awarded to the account
            adjustmentTypeID:
              type: string
              description: Identifier of the adjustment type
            parameters:
              $ref: '#/components/schemas/ResponseParameters'
      example:
        getDiscountClassResponse:
          return:
            identifier: '1'
            spid: '1'
            name: '1-AUTO_DISCOUNT'
            useThreshold: 'false'
            thresholdAmount: '100'
            discountPercentage: '0.0'
            adjustmentTypeID: '50000'
            parameters:
            - name: 'test'
              value: 'test'

    getPromotionsResponse:
      type: object
      required:
      - return
      properties:
        return:
          type: object
          properties:
            promotionService:
              $ref: '#/components/schemas/promotionService'
            promotionBundle:
              $ref: '#/components/schemas/promotionBundle'
            promotionData:
              $ref: '#/components/schemas/promotionData'
            operations:
              type: object
              properties:
                canApply:
                  type: boolean
                  description: Can apply boolean
      example:
        getPromotionResponse:
          return:
            promotionService: [
              {
                identifier: '1',
                numberMrc: '1',
                name: 'test',
                fee: '1',
                consumedMrc: '1',
                removeAtPricePlanChange: "true",
                promotionProvisionTime: "0"
              }
            ]
            promotionBundle: [
              {
                identifier: '1',
                numberMrc: '1',
                name: 'test',
                fee: '1',
                consumedMrc: 'test',
                initialBalanceLimit: '1',
                consumedBalance: '1',
                bundleType: '1',
                unitType: '2',
                removeAtPricePlanChange: "true",
                promotionProvisionTime: "0"
              }
            ]
            promotionData: [
              {
                identifier: '1',
                description: 'test',
                promotionServiceId: '1',
                promotionBundleId: [ '1' ]
              }
            ]
            operations:
              canApply: 'true'

    findAndValidatePromotions:
      type: object
      required:
        - eligibilityCriteriaContainer
      properties:
        subscriptionRef:
          $ref: '#/components/schemas/SubscriptionRef'
        newPricePlan:
          type: object
          properties:
            pricePlanId:
              type: integer
            switchDate:
              type: string
          example:
            "newPricePlan": {
              "pricePlanId": 100051,
              "switchDate": '2023-09-27T00:32:56.916-05:00'
            }
        promotionRef:
          type: array
          items:
            type: object
            properties:
              identifier:
                type: string
        eligibilityCriteriaContainer:
          type: array
          items:
            type: object
            properties:
              index:
                type: integer
              eligibilityCriteriaRef:
                $ref: '#/components/schemas/EligibilityCriteriaRef'

    EligibilityCriteriaRef:
      properties:
        channelType:
          type: string
        spid:
          type: string
        subscriberId:
          type: string
        retailChannel:
          type: string
        pricePlanId:
          type: integer
        service:
          type: array
          items:
            type: integer
        fetchServices:
          type: boolean
        province:
          type: string
        promoName:
          type: string
        promoCode:
          type: string
        validationCode:
          type: string
        addALine:
          type: boolean
        creditClass:
          type: integer
        isEBill:
          type: boolean
        isContractRenewal:
          type: boolean
        isAdditionalPromo:
          type: boolean
        isExpired:
          type: boolean
        isNewActivation:
          type: boolean
      example:
        "eligibilityCriteriaRef": {
          "channelType": "CH0",
          "spid": 1,
          "subscriberId": "10001-1",
          "retailChannel": "RC0",
          "pricePlanId": 100050,
          "service": [
            8,
            9
          ],
          "fetchServices": true,
          "province": "PRV0",
          "promoName": "PN0",
          "promoCode": "PC0",
          "validationCode": "VC0",
          "addALine": false,
          "creditClass": 1,
          "isEBill": false,
          "isContractRenewal": false,
          "isAdditionalPromo": false,
          "isExpired": false,
          "isNewActivation": false
        }

    findAndValidatePromotionResponse:
      type: object
      required:
        - return
        - validationCheckResult
      properties:
        return:
          type: object
          properties:
            promotionBundle:
              $ref: '#/components/schemas/promotionBundle'
            promotionCriteria:
              type: string
            promotionErrorMessage:
              type: string
            promotionData:
              $ref: '#/components/schemas/promotionData'
            promotionService:
              $ref: '#/components/schemas/promotionService'
            resultForCriteriaIndexed:
              type: integer
        validationCheckResult:
          type: object
          properties:
            errorMessage:
              type: string
            result:
              type: boolean
            violatingPromotionRuleId:
              items:
                type: string
              type: array
            violatingPromotionCode:
              items:
                type: string
              type: array

    promotionService:
      type: array
      items:
        type: object
        required:
        - identifier
          numberMrc
          name
          fee
          consumedMrc
          removeAtPricePlanChange
          promotionProvisionTime
        properties:
          identifier:
            type: string
            description: Identifier
          numberMrc:
            type: string
            description: Number MRC
          name:
            type: string
            description: Name
          fee:
            type: string
            description: Fee
          consumedMrc:
            type: string
            description: Consumed MRC
          removeAtPricePlanChange:
            type: boolean
            description: Remove At Price Plan Change flag value
          promotionProvisionTime:
            type: integer
            description: Promotion Provision Time 0=Immediate, 1=PP MRC
          discountExtension:
            $ref: '#/components/schemas/auxServiceDiscountExtension'
          provisioningState:
            type: integer
            description: for getPromotions response, shows provisioning state of service on subscriber

    promotionBundle:
      type: array
      items:
        type: object
        required:
        - identifier
          numberMrc
          name
          fee
          consumedMrc
          initialBalanceLimit
          consumedBalance
          bundleType
          unitType
          removeAtPricePlanChange
          promotionProvisionTime
        properties:
          identifier:
            type: string
            description: Identifier
          numberMrc:
            type: string
            description: Number MRC
          name:
            type: string
            description: Name
          fee:
            type: string
            description: Fee
          consumedMrc:
            type: string
            description: Consumed MRC
          initialBalanceLimit:
            type: string
            description: Initial balance limit
          consumedBalance:
            type: string
            description: Consumed balance
          bundleType:
            type: string
            description: Bundle type
          unitType:
            type: string
            description: Unit type
          removeAtPricePlanChange:
            type: boolean
            description: Remove At Price Plan Change flag value
          promotionProvisionTime:
            type: integer
            description: Promotion Provision Time 0=Immediate, 1=PP MRC

    auxServiceDiscountExtension:
      type: object
      required:
      - enableThreshold
        minimumTotalChargeThreshold
        discountPercentage
      properties:
        enableThreshold:
          type: boolean
          description: Is threshold is enabled or not
        minimumTotalChargeThreshold:
          type: integer
          description: Minimum price plan current charge threshold value
        discountPercentage:
          type: number
          description: Discount percentage value

    promotionData:
      type: array
      items: 
        type: object
        required:
        - identifier
          description
        properties:
          identifier:
            type: string
            description: Identifier
          description:
            type: string
            description: Description
          promotionServiceId:
            type: string
            description: Identifier of the promotion service
          promotionBundleId:
            type: array
            description: Array of identifiers for promotion bundles
            items:
              type: string

    listAccountTypesResponse: 
      type: object
      properties:
        listAccountTypesResponse:
          type: object
          properties:
            return: 
              type: array
              items: 
                type: object
                properties:
                  identifier: 
                    type: string
                    description: Identifier
                  isBusiness:
                    type: boolean
                    description: 'True if accounts of this type will only be used by businesses; false otherwise (i.e., accounts for personal use)'
                  isIndividual:
                    type: boolean
                    description: 'True if accounts of this type will serve as subscriber accounts; false if they will serve as group accounts'
                  isPooled:
                    type: boolean
                    description: 'True if accounts of this type will only be used with pooled subscriptions balances'
                  name:
                    type: string
                    description: Name
                  spid:
                    type: string
                    description: Service Provider Identifier
                  description:
                    type: string
                    description: Description
                  poolLimit:
                    type: string
                    description: Pool limit
                  poolLimitStrategy:
                    type: string
                    description: Pool limit strategy
                  usageType:
                    type: string
                    description: Usage type
                  isLetterOfDemandExempt:
                    type: boolean
                    description: 'True if accounts assigned this category will not receive letters-of-demand; false otherwise'
                  allowBillCycleChange:
                    type: string
                    description: 'True if accounts of this type are permitted to request a change of bill cycle; false otherwise'
                  prepaymentDepositRequired:
                    type: string
                    description: 'True if accounts of this type require a prepayment deposit before they may be allowed to activate subscriptions; false otherwise'
          example:
            return: [
              {
                allowBillCycleChange: 'true',
                description: 'Personal',
                identifier: '1',
                isLetterOfDemandExempt: 'false',
                name: 'Personal',
                prepaymentDepositRequired: 'false',
                spid: '1',
                usageType: '3'
              }
            ]
    
    listAccountTransactionsReference:
      type: array
      items:
        type: object
        properties:
          csrInput:
            type: string
            description: General CSR input field
          subscriptionType:
            type: string
            description: Subscription type
          accountID:
            type: string
            description: Identifier of the account
          adjustmentTypeID:
            type: string
            description: Identifier of the adjustment type
          agent:
            type: string
            description: Agent
          amount:
            type: string
            description: Amount
          balance:
            type: string
            description: Balance
          identifier:
            type: string
            description: Identifier
          receiveDate:
            type: string
            description: The date when the payment is received by the system
          transactionDate:
            type: string
            description: Transaction date
          receiptNumber:
            type: string
            description: Receipt number
          parameters:
            $ref: '#/components/schemas/RequestParameters'
    
    listAccountTransactionsResponse:
      type: object
      properties:
        return:
          type: object
          properties:
            pageKey:
              type: string
              description: Page key
            references:
              $ref: '#/components/schemas/listAccountTransactionsReference'
      example:
        listAccountTransactionsResponse:
          return:
            pageKey: '1423'
            references:
            - csrInput: 'string'
              subscriptionType: '10001'
              accountID: '17'        
              adjustmentTypeID: '21000'
              agent: 'rkadm'
              amount: '-5000'
              balance: '15000'
              identifier: '600'
              receiveDate: '2023-09-27T00:32:56.916-05:00'
              transactionDate: '2023-09-27T00:32:56.824-05:00'
              receiptNumber: '1'
              parameters:
              - name: 'RNAdjustmentTypeID'
                value: 'Initial Balance'
            - csrInput: 'string'
              subscriptionType: '10001'
              accountID: '17'        
              adjustmentTypeID: '32601'
              agent: 'rkadm'
              amount: '0'
              balance: '0'
              identifier: '0'
              receiveDate: '2023-09-27T00:32:56.916-05:00'
              transactionDate: '2023-09-27T00:32:56.824-05:00'
              receiptNumber: '1'
              parameters:
              - name: 'RNAdjustmentTypeID'
                value: 'Initial Balance'
                    
    listAccountTransferResponse:
      type: object
      properties:
        return:
          type: object
          properties:
            pageKey:
              type: string
            references:
              type: array
              items:
                type: object
                properties:
                   externalTransactionNumber:
                    type: string
                    description: externalTransactionNumber
                   contributorSubscriptionID:
                    type: string
                    description: Contributor Subscription ID
                   contributorMobileNumber:
                    type: string
                    description: Contributor Mobile Number
                   recipientSubscriptionID:
                    type: string
                    description: Recipient Subscription ID
                   recipientMobileNumber:
                    type: string
                    description: Recipient Mobile Number
                   contributorAmount:
                    type: string
                    description: Contributor Amount
                   transferDate:
                    type: string
                    description: Transfer Date
                   currentDisputeId:
                    type: string
                    description: Current Dispute identifier
      example:
        listAccountTransferResponse:
          return:
            pageKey: null
            references:
            - contributorSubscriptionID: '1372-1'
              contributorMobileNumber: '977728282882'
              recipientSubscriptionID: 'Operator'
              recipientMobileNumber: 'Operator'
              contributorAmount: '0'
              transferDate: '2024-02-20T00:04:50.436-06:00'
              currentDisputeId: '3'

    listAccountsForIDResponse:
      type: object
      properties: 
        listAccountsForIDResponse:
          type: object
          required:
            - return
          properties:
            return:
              type: object
              properties:
                results:
                  type: array
                  items:
                    type: object
                    required:
                      - ids
                    properties:
                      accountID:
                        type: string
                        description: Identifier of the account
                      ids:
                        $ref: '#/components/schemas/Ids'
                      state: 
                        type: string
                        description: State
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
          example:
            return:
              parameters: [
                {
                  name: 'NumOfSecurityQuestionAnswer',
                  value: '3'
                }
              ]
              results: [
                {
                  accountID: '110',
                  ids: [
                    {
                      expiry: '2030-02-16T00:00:00.000-06:00',
                      type: '0',
                      value: '12345'
                    },
                    {
                      expiry: '2030-02-16T00:00:00.000-06:00',
                      type: '1',
                      value: '6789'
                    }
                  ],
                  state: '0'
                },
                {
                  accountID: '111',
                  ids: [
                    {
                      expiry: '2030-02-16T00:00:00.000-06:00',
                      type: '0',
                      value: '12345'
                    }
                  ],
                  state: '0'
                }
              ]

    getAccountAgedDebtResponse:
      type: object
      properties:
        getAccountAgedDebtResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                periodDetails:
                  $ref: '#/components/schemas/PeriodDetails'
                paymentsSinceLastInvoice:
                  type: string
                  description: Payments since last invoice
      example:
        getAccountAgedDebtResponse:
          return:
            periodDetails:
              - periodInvoiceDate: '2022-06-30T07:00:00.000-05:00'
                debt: '5'
              - periodInvoiceDate: '2022-07-30T07:00:00.000-05:00'
                debt: '10'
            paymentsSinceLastInvoice: '0'

    PeriodDetails:
      type: array
      items:
        type: object
        properties:
          periodInvoiceDate:
            type: string
            description: Period invoice date
          debt:
            type: string
            description: Debt

    listTransactionMethodsResponse: 
      type: object
      properties:
        listTransactionMethodsResponse:
          type: object
          properties:
            return: 
              type: array
              items: 
                type: object
                properties:
                  bankAccountUsed: 
                    type: boolean
                    description: True if transaction methods of this type require a bank account identifier; false otherwise
                  bankTransitUsed:
                    type: boolean
                    description: True if transaction methods of this type require a bank transit number; false otherwise.
                  dateUsed:
                    type: boolean
                    description: True if transactions methods of this type require an expiry date (e.g., credit card expiry date)
                  description:
                    type: string
                    description: Description of the transaction method
                  identifier:
                    type: string
                    description: A unique ID for the transaction method. Assigned automatically when the transaction method was created
                  identifierUsed:
                    type: boolean
                    description: True if transaction methods of this type require an identifier be provided (e.g. credit card ID); false otherwise
                  name:
                    type: string
                    description: Name for the transaction method
                  bankProfileUsed:
                    type: boolean
                    description: True if transaction methods of this type require a bank to be selected; false otherwise
                  nameUsed:
                    type: boolean
                    description: True if transaction methods of this type require a person's name; false otherwise
                  creditCardTypeUsed:
                    type: boolean
                    description: True if this transaction method depends upon a particular credit card type configuration; false otherwise
                  enabled:
                    type: boolean
                    description: True if this method is available for use; false otherwise
          example:
            return: [
              {
                bankAccountUsed: 'true',
                bankProfileUsed: 'true',
                bankTransitUsed: 'false',
                creditCardTypeUsed: 'false',
                dateUsed: 'true',
                description: 'Payment by debit card',
                enabled: 'true',
                identifier: '3',
                identifierUsed: 'true',
                name: 'Debit Card',
                nameUsed: 'true'
              },
              {
                bankAccountUsed: 'false',
                bankProfileUsed: 'false',
                bankTransitUsed: 'false',
                creditCardTypeUsed: 'true',
                dateUsed: 'true',
                description: 'Payment by credit card',
                enabled: 'true',
                identifier: '5',
                identifierUsed: 'false',
                name: 'Credit Card',
                nameUsed: 'true'
              }
            ]
                  
    getAdjustmentTypeResponse: 
      type: object
      properties:
        getAdjustmentTypeResponse:
          type: object
          properties:
            return: 
              type: object
              properties:
                category: 
                  type: boolean
                  description: Category
                description:
                  type: string
                  description: Description
                identifier:
                  type: string
                  description: Identifier
                name:
                  type: string
                  description: Name
                ownerType:
                  type: string
                  description: Owner type
                parent:
                  type: string
                  description: Parent
                state:
                  type: string
                  description: State
                action:
                  type: string
                  description: Action
                system:
                  type: boolean
                  description: System
                provisionToOCG:
                  type: boolean
                  description: Provision to OCG flag
                glCode:
                  type: string
                  description: GL code
                invoiceDescription:
                  type: string
                  description: Invoice description
                spid:
                  type: string
                  description: Service Provider Identifier
                taxAuthority:
                  type: string
                  description: Tax authority
          example:
            return:
              action: '0'
              category: 'false'
              description: 'Transfer funds contributor credit. Credit only'
              glCode: '0'
              identifier: '28200'
              invoiceDescription: 'true'
              name: 'Transfer Funds Contributor Credit Adjustment'
              ownerType: '0'
              parent: '28000'
              provisionToOCG: 'true'
              spid: '1'
              state: '0'
              system: 'true'
              taxAuthority: 'true'
  
    createSubscriptionTransactionResponse: 
      type: object
      properties:
        createSubscriptionTransactionResponse:
          type: object
          properties:
            return: 
              type: object
              properties:
                csrInput: 
                  type: string
                  description: General CSR input field
                subscriptionType:
                  type: string
                  description: Subscription type
                accountID:
                  type: string
                  description: Identifier of the account
                adjustmentTypeID:
                  type: string
                  description: Identifier of the adjustment type
                agent:
                  type: string
                  description: Agent
                amount:
                  type: string
                  description: Amount
                balance:
                  type: string
                  description: Balance
                identifier:
                  type: string
                  description: Identifier
                receiveDate:
                  type: string
                  description: The date when the payment is received by the system
                transactionDate:
                  type: string
                  description: Transaction date
                receiptNumber:
                  type: string
                  description: Receipt number
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
          example: 
            return:
              accountID: '17'
              adjustmentTypeID: '21000'
              agent: 'test'
              amount: '-5000'
              balance: '55000'
              csrInput: 'string'
              identifer: '610'
              parameters: [
                {
                  name: 'RNAdjustmentTypeID',
                  value: 'CSR Adjustment (Credit)'
                }
              ]
              receiptNumber: '1'
              receiveDate: '2023-10-03T05:31:19.002-05:00'
              subscriptionType: '10001'
              transactionDate: '2023-10-03T05:31:19.002-05:00'
                  
    mnpEligibilityResponse: 
      type: object
      properties:
        CDMACoverage:
          description: CDMA Coverage flag
          type: string
          example: 'N'
        CDMAPostpaidCoverage:
          description: CDMA Postpaid Coverage flag
          type: string
          example: 'Y'
        CDMAPrepaidCoverage:
          description: CDMA Prepaid Coverage flag
          type: string
          example: 'Y'
        Eligible:
          description: Eligible flag
          type: string
          example: 'Y'
        HSPACoverage:
          description: HSPA Coverage flag
          type: string
          example: 'N'
        HSPAPostpaidCoverage:
          description: HSPA Postpaid Coverage flag
          type: string
          example: 'Y'
        HSPAPrepaidCoverage:
          description: HSPA Prepaid Coverage flag
          type: string
          example: 'Y'
        MIKECoverage:
          description: MIKE Coverage flag
          type: string
          example: 'Y'
        NPDirectionIndicator:
          description: Wireless or Wirline flag
          type: string
          enum:
            - A
            - C
        OSP:
          description: OSP
          type: string
          example: TU02
        ResponseCode:
          description: Response code
          type: string
          example: E999
        parameters:
          $ref: '#/components/schemas/ResponseParameters'

    ReadScheduleStatusCode:
      type: integer
      enum: [0, 1, 2, 3, 4, 5, 6, 7, 8]
      description: >
        The status code is either of the following values:
         - `0` - SUCCESS
         - `1` - NO_SUCH_BAN
         - `2` - NO_SUCH_SUBSCRIPTION
         - `3` - NON_RESPONSIBLE_ACCOUNT
         - `4` - INVALID_PARAMETER
         - `5` - NO_SUCH_TOKEN_ID
         - `6` - NO_SUCH_TOKEN_VALUE
         - `7` - NO_SUCH_SCHEDULE_ID
         - `8` - NO_SCHDEULE_CREATION_ALLOWED
              
    readSchedulesResponse:
      type: object
      properties:
        readSchedulesResponse:
          type: object
          properties:
            return: 
              type: object
              properties:  
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
                statusCode:
                  $ref: '#/components/schemas/ReadScheduleStatusCode'
                statusMessage: 
                  type: string
                  description: Status message
                schedules:
                  type: array
                  items:
                    $ref: '#/components/schemas/Schedule'
          example:
            return:
              schedules: [
                {
                  amount: '5',
                  nextApplication: '2040-12-30T00:00:00.000-06:00',
                  parameters: [
                    {
                      name: 'isPlanChangeScheduled',
                      value: 'false'
                    },
                    {
                      name: 'isUsePlanFree',
                      value: 'false'
                    }
                  ],
                  scheduleID: '2',
                  subscriptionRef: {
                    accountID: '129',
                    identifer: '129-1',
                    mobileNumber: '7731003103',
                    mobileNumberOwnership: '2020-02-04T18:48:34.000+05:30',
                    spid: '1',
                    state: '0',
                    subscriptionType: '10001'
                  },
                  tokenID: '1'
                }
              ]
              statusCode: '0'
              statusMessage: 'ReadSchedules successful'
                    
    updateScheduleResponse:
      type: object
      properties:
        updateScheduleResponse:
          type: object
          properties:
            return: 
              type: object
              properties:  
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
                statusCode:
                  type: string
                  description: Status code
                statusMessage:
                  type: string
                  description: Status message
                schedule:
                    $ref: '#/components/schemas/Schedule'
          example:
            return:
              schedule:
                amount: '10'
                nextApplication: '2040-12-30T00:00:00.000-06:00'
                parameters: [
                  {
                    name: 'isPlanChangeScheduled',
                    value: 'false'
                  },
                  {
                    name: 'isUsePlanFree',
                    value: 'false'
                  }
                ]
                subscriptionRef: 
                  accountID: '129'
                  identifer: '129-1'
                  mobileNumber: '7731003103'
                  mobileNumberOwnership: '2020-02-04T18:48:34.000+05:30'
                  spid: '1'
                  state: '0'
                  subscriptionType: '10001'
                scheduleID: '4'
                tokenID: '2'
              statusCode: '0'
              statusMessage: 'Schedule [4] updated successfully'
               
    deleteTokenResponse:
      type: object
      properties:
        deleteTokenResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
                statusCode:
                  type: string
                  description: Status code
                statusMessage:
                  type: string
                  description: Status message
                token:
                  $ref: '#/components/schemas/token'
          example:
            return:
              statusCode: '0'
              statusMessage: 'Token [1] successfully deleted. Associated Schedules[2,] also deleted from the System.'
              token: 
                tokenID: '1'
                accountID: '120'
                tokenValue: '555'
                maskedCardNumber: 'XXXX XXXX XX12 3456'
                expiryDate: '202308'
                      
    token:
      type: object
      properties:
        parameters:
          $ref: '#/components/schemas/RequestParameters'
        tokenID:
          type: string
          description: Identifier of the token
        accountID:
          type: string
          description: Identifier of the account
        tokenValue:
          type: string
          description: Token value
        maskedCardNumber:
          type: string
          description: Masked card number
        expiryDate:
          type: string
          description: Expiry date

    requestBalanceResponse:
      type: object
      properties:
        requestBalance6Out:
          type: object
          properties:
              return: 
                type: string
                description: Return
              expiry:
                type: string
                description: Expiry
              balance:
                type: string
                description: Balance
              outputParamSet:
                type: object
                properties:
                  outParamset:
                    $ref: '#/components/schemas/Parameters_OCG'
          example:
            balance: '0'
            expiry: '21991231'
            outputParamSet:
              outParamset: [
                {
                  parameterID: '53',
                  value: {
                    ___booleanValue: 'false',
                    ___byteArrayValue: '',
                    ___doubleValue: '0.0',
                    ___floatValue: '0.0',
                    ___intValue: '0',
                    ___longValue: '10',
                    ___stringValue: '',
                    __discriminator: '0',
                    __uninitialized: 'false'
                  }
                },
                {
                  parameterID: '30',
                  value: {
                    ___booleanValue: 'false',
                    ___byteArrayValue: '',
                    ___doubleValue: '0.0',
                    ___floatValue: '0.0',
                    ___intValue: '0',
                    ___longValue: '10',
                    ___stringValue: '99991231',
                    __discriminator: '0',
                    __uninitialized: 'false'
                  }
                }
              ]
            return: '213'
                    
    requestDebitResponse:
      type: object
      properties:
        requestDebit4Out:
          type: object
          properties:
              return: 
                type: string
                description: Return
              newBal:
                type: string
                description: New balance
              shortfall:
                type: string
                description: Shortfall
              outputParamSet:
                type: object
                properties:
                  outParamset:
                    $ref: '#/components/schemas/Parameters_OCG'
          example: 
            newBal: '0'
            outputParamSet:
              outParamset: [
                {
                  parameterID: '53',
                  value: {
                    ___booleanValue: 'false',
                    ___byteArrayValue: '',
                    ___doubleValue: '0.0',
                    ___floatValue: '0.0',
                    ___intValue: '0',
                    ___longValue: '10',
                    ___stringValue: '',
                    __discriminator: '0',
                    __uninitialized: 'false'
                  }
                },
                {
                  parameterID: '30',
                  value: {
                    ___booleanValue: 'false',
                    ___byteArrayValue: '',
                    ___doubleValue: '0.0',
                    ___floatValue: '0.0',
                    ___intValue: '0',
                    ___longValue: '10',
                    ___stringValue: '99991231',
                    __discriminator: '0',
                    __uninitialized: 'false'
                  }
                }
              ]
            return: '213'
            shortfall: '0'
                    
    requestCreditResponse:
      type: object
      properties:
        requestCredit5Out:
          type: object
          properties:
              return: 
                type: string
                description: Return
              newBal:
                type: string
                description: New balance
              balance:
                type: string
                description: Balance
              outputParamSet:
                type: object
                properties:
                  outParamset:
                    $ref: '#/components/schemas/Parameters_OCG'
          example: 
            balance: '21991231'
            newBal: '21991231'
            outputParamSet:
              outParamset: [
                {
                  parameterID: '53',
                  value: {
                    ___booleanValue: 'false',
                    ___byteArrayValue: '',
                    ___doubleValue: '0.0',
                    ___floatValue: '0.0',
                    ___intValue: '0',
                    ___longValue: '10',
                    ___stringValue: '',
                    __discriminator: '0',
                    __uninitialized: 'false'
                  }
                },
                {
                  parameterID: '30',
                  value: {
                    ___booleanValue: 'false',
                    ___byteArrayValue: '',
                    ___doubleValue: '0.0',
                    ___floatValue: '0.0',
                    ___intValue: '0',
                    ___longValue: '10',
                    ___stringValue: '99991231',
                    __discriminator: '0',
                    __uninitialized: 'false'
                  }
                }
              ]
            return: '213'
            shortfall: '0'
                    
    createSimpleVoucherResponse:
      type: object
      properties:
        createSimpleVoucherResponse:
          type: object
          properties:
            createSimpleVoucherOutput:
                $ref: '#/components/schemas/CreateSimpleVoucherOutput'
          example: 
            createSimpleVoucherOutput: [
              {
                statusCode: '1',
                statusMessage: 'Package Found 1029',
                requestID: '123',
                retailAmount: '0',
                voucherAmount: '10',
                currencyCode: 'GDB',
                voucherNumber: '1234',
                serialNumber: '12345',
                duration: '0'
              }
            ]
  
    CreateSimpleVoucherOutput:
      type: array
      items:
        type: object
        properties:
            parameters:
              $ref: '#/components/schemas/ResponseParameters'
            statusCode:
              type: string
              description: Status code
            statusMessage:
              type: string
              description: Status message
            requestID:
              type: string
              description: Identifier of the request
            retailAmount:
              type: string
              description: Retail amount
            voucherAmount:
              type: string
              description: Voucher amount
            currencyCode:
              type: string
              description: Currency code
            voucherNumber:
              type: string
              description: Voucher number
            serialNumber:
              type: string
              description: Serial number
            duration:
              type: string
              description: Duration

    getBillCycleResponse:
      type: object
      properties:
        getBillCycleResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                dayOfMonth:
                  type: string
                  description: Day of month
                description:
                  type: string
                  description: Description
                identifier:
                  type: string
                  description: Identifier
                spid:
                  type: string
                  description: Service Provider Identifier
                billingMessage:
                  type: array
                  items:
                    $ref: '#/components/schemas/BillingMessageResponse'

      example:
        getBillCycleResponse:
          return:
            dayOfMonth: '1'
            description: 'Default Bill Cycle ID'
            identifier: '1'
            spid: '1'
            billingMessage:
              - identifier: '1'
                language: 'en'
                message: 'test'
                spid: '1'
                state: '1'

    BillingMessageResponse:
      type: object
      properties:
        identifier:
          type: string
          description: Identifier of the billing message
        language:
          type: string
          description: Language
        message:
          type: string
          description: Message
        spid:
          type: string
          description: Service Provider Identifier
        state:
          type: string
          description: State
  
    listBillCyclesResponse:
      type: object
      properties:
        return:
          type: array
          items: 
            type: object
            properties:
              dayOfMonth:
                type: string
                description: Day of month
              description:
                type: string
                description: Description
              identifier:
                type: string
                description: Identifier
              spid:
                type: integer
                description: Service Provider Identifier
      example:
        listBillCyclesResponse: 
          return: [
            {
              dayOfMonth: 'test',
              description: 'test',
              identifier:  'test',
              spid: 1
            }
          ]
          
    getVoucherInfoResponse:
      type: object
      properties:
        getVoucherInfoResponse:
          type: object
          properties: 
            resultCode:
              type: integer
              description: Result code
            voucherInfoDetails:
              $ref: '#/components/schemas/VoucherInfoDetails'
          example:
            resultCode: 0
            voucherInfoDetails: 
              serialnumber: '123'
              batchnumber: '1'
              serviceProviderGroup: '1'
              voucherStatus: '1'
              voucherAmount: '1'
              bonusAmount:  '1'
              totalVoucherAmount: '10'
              retailAmount: '10'
              voucherDuration: '100'
              voucherCreatorID: '1'
              voucherShelfLife: '100'
              dateUsed: '1000'
              dateChanged: '500'
              voucherTypeID: '1'
  
    VoucherInfoDetails:
      type: object
      properties:
        serialnumber:
          type: string
          description: Serial number
        batchnumber:
          type: string
          description: Batch number
        serviceProviderGroup:
          type: string
          description: Service provider group
        voucherStatus:
          type: string
          description: Voucher status
        voucherAmount:
          type: string
          description: Voucher amount
        bonusAmount:
          type: string
          description: Bonus amount
        totalVoucherAmount:
          type: string
          description: Total voucher amount
        retailAmount:
          type: string
          description: Retail amount
        voucherDuration:
          type: string
          description: Voucher duration
        voucherCreatorID:
          type: string
          description: Identifier of the voucher creator
        voucherShelfLife:
          type: string
          description: Voucher shelf life
        dateUsed:
          type: string
          description: Date used
        dateChanged:
          type: string
          description: Date changed
        voucherTypeID:
          type: string
          description: Identifier of the voucher type

    updateVoucherStatusResponse:
      type: object
      properties:
        updateVoucherStatusResponse:
          type: object
          properties: 
            return:
              $ref: '#/components/schemas/updateVoucherReturnResponse'
          example:
            return: 
              numberOfVouchers: '1'
              numberofSuccesses: '0'
              serviceProviderGroup: '1'
              overallResultCode: '1'
              voucherInfo: [
                {
                  vmsException: {
                    errorCode: '1',
                    message: 'SOAP_VMS_EXCEPTION_INVALID_VOUCHER_NUMBER'
                  },
                  voucherNumber: '',
                  voucherResultCode: '1'
                }
              ]
              
    updateVoucherReturnResponse:
      type: object
      properties:
        numberOfVouchers: 
          type: string
          description: Number of vouchers
        numberofSuccesses:
          type: string
          description: Number of successes
        overallResultCode:
          type: string
          description: Overall result code
        voucherInfo:
          type: array
          items:
            $ref: '#/components/schemas/voucherInfoInner'
    
    voucherInfoInner:
      type: object
      properties:
        vmsException: 
          $ref: '#/components/schemas/vmsException'
        voucherNumber:
          type: string
          description: Voucher number
        voucherResultCode:
          type: string
          description: Voucher result code

    vmsException:
      type: object
      properties:
        errorCode: 
          type: string
          description: Error code
        message:
          type: string
          description: Message providing more detail about the VMS exception
          
    getSubscriptionRewardFlagResponse:
      type: object
      properties:
        getSubscriptionRewardFlagResponse:
          type: object
          properties: 
            return:
              type: object
              properties:
                isPointReward:
                  type: string
                  description: IsPointReward flag
                pointRewardSwitchDate:
                  type: string
                  description: Point reward switch date
                created:
                  type: string
                  description: Date created
                mobileNumber:
                  type: string
                  description: Mobile number
                accountID:
                  type: string
                  description: Identifier of the account
          example:
            return:
              isPointReward: "true"
              pointRewardSwitchDate: "2023-09-27T00:32:56.458-05:00"
              created: "2023-09-27T00:32:56.458-05:00"         
              mobileNumber: "1234567890"
              accountID: "17"

    getSubscriptionContractStatusResponse:
      type: object
      properties:
        getSubscriptionContractStatusResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                contractStatus:
                  type: array
                  items:
                    type: object
                    required:
                    - contractId
                    - startDate
                    - endDate
                    - subsidy
                    - penaltyFeePerMonth
                    - cancellationFee
                    - cancellationIsProrated
                    properties:
                      contractId:
                        type: string
                        description: Identifier of the contract
                      startDate:
                        type: string
                        description: Start date of the contract
                      endDate:
                        type: string
                        description: End date of the contract
                      subsidy:
                        type: string
                        description: Subsidy amount of the contract
                      penaltyFeePerMonth:
                        type: string
                        description: Penalty fee per month
                      cancellationFee:
                        type: string
                        description: Cancellation fee
                      cancellationIsProrated:
                        type: string
                        description: If TRUE then the ContractCancellationFee is calculated extactly for the remaining X-months and Y-days of the contact. Otherwise, the ContractCancellationFee is calculated with remaining months rounded up i.e., ContractPenaltyFeePerMonth * (X+1)
                      parameter:
                         $ref: '#/components/schemas/ResponseParameters'
                parameter:
                 $ref: '#/components/schemas/ResponseParameters'
          example:
            return:
              contractStatus:
                - contractId: '2'
                  startDate: '2023-12-26-06:00'
                  endDate: '2024-06-26-05:00'
                  subsidy: '0'
                  penaltyFeePerMonth: '0'
                  cancellationFee: '0'
                  cancellationIsProrated: 'false'
                  parameter:
                    - name: 'Remaining years'
                      value: '0'
                    - name: 'Remaining months'
                      value: '5'
                    - name: 'Remaining days'
                      value: '15'

    listDetailedPersonalListPlansResponse:
      type: object
      properties:
        detailedPersonalListPlansResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                identifier:
                  type: string
                  description: Identifier of the detailed personal list plan
                spid:
                  type: string
                  description: Service Provider Identifier
                name:
                  type: string
                  description: Name
                auxiliaryServiceID:
                  type: string
                  description: Identifier of the auxiliary service
                plpServiceType:
                  $ref: '#/components/schemas/CallingGroupServiceTypeEnum'
                voiceDiscountType:
                  type: string
                  description: Closed user group voice discount type
                voiceOutgoingValue:
                  type: string
                  description: Closed user group voice outgoing value
                voiceIncomingValue:
                  type: string
                  description: Closed user group voice incoming value
                smsDiscountType:
                  type: string
                  description: Closed user group SMS discount type
                smsOutgoingValue:
                  type: string
                  description: Closed user group SMS outgoing value
                smsIncomingValue:
                  type: string
                  description: Closed user group SMS incoming value
                maxSubscribersCount:
                  type: integer
                  description: Maximum number of subscribers
                parameters:
                  $ref: '#/components/schemas/RequestParameters'
          example:
            return:
              identifier: '199002'
              spid: '19'
              name: 'FnF_Frequent'
              auxiliaryServiceID: '121048'
              plpServiceType: '0'
              voiceDiscountType: '0'
              voiceOutgoingValue: '100'
              voiceIncomingValue: '0'
              smsDiscountType: '0'
              smsOutgoingValue: '0'
              smsIncomingValue: '0'
              maxSubscriberCount: '3'

    getSubscriptionPromotionStatusResponse:
      type: object
      properties:
        getSubscriptionPromotionStatusResponse:
          type: object
          properties:
            return: 
              type: array
              items: 
                type: object
                properties: 
                  identifier: 
                    type: string
                    description: Identifier
                  name:
                    type: string
                    description: Name of the promotion
                  description:
                    type: string
                    description: Description of the promotion
                  counterProfiles:
                    type: array
                    description: A list of counter profiles, describing high-level information about counters. Each counter profile is related to one or more of the counters.
                    items:
                      type: object
                      properties:
                        identifier:
                          type: string
                          description: A unique identifier for the promotion's counter profile.
                        promotionID:
                          type: string
                          description: The identifier of the promotion to which this counter profile belongs.
                        name:
                          type: string
                          description: The name of the promotion's counter profile
                        unit:
                          type: string
                          description: The unit of measurement for counter values associated with this counter profile
                  counters:
                    type: array
                    description: A list of counter value information. Each counter is related to exactly one counter profile
                    items:
                      type: object
                      properties:
                        identifier:
                          type: string
                          description: A unique identifier for the promotion's counter
                        profileID:
                          type: string
                          description: The identifier of the counter profile to which this counter belongs
                        value:
                          type: string
                          description: The value of the counter. The unit of measurement is provided by the counter profile
                  auxiliaryServiceID:
                    type: string
                    description: Identifier of the auxiliary service
                  auxiliaryServiceName:
                    type: string
                    description: Auxiliary service name

          example:
           return: [
             {
                identifier: '12-12',
                name: 'test',
                description: 'example',
                counterProfiles: [
                  {
                    identifier: '11-11',
                    promotionID: '23',
                    name: 'test',
                    unit: 'test'
                  },
                  {
                    identifier: '13-13',
                    promotionID: '22',
                    name: 'test',
                    unit: 'test'
                  }
                ],
                counters: [
                  {
                    identifier: '14-14',
                    profileID: '11',
                    value: 'test'
                  },
                  {
                    identifier: '15-15',
                    profileID: '56',
                    value: 'test'
                  }
                ],
                auxiliaryServiceID: '1',
                auxiliaryServiceName: '2'
            },
            {
              identifier: '34-34',
              name: 'test',
              description: 'test',
              counterProfiles: [
                {
                  identifier: '123',
                  promotionID: '23',
                  name: 'test',
                  unit: '3'
                },
                {
                  identifier: '45-45',
                  promotionID: '44',
                  name: 'test',
                  unit: 'test'
                }
              ],
              counters: [
                {
                  identifier: '321',
                  profileID: '332',
                  value: 'test'
                },
                {
                  identifier: '456',
                  profileID: '678',
                  value: 'test'
                }
              ],
              auxiliaryServiceID: '2343',
              auxiliaryServiceName: '45654'
            }
            ]

    subscriptionPricePlanOptionsFilterableAllFiltersTrue:
      type: object
      properties:
         getSubscriptionPricePlanOptionsFilterableResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                pricePlanDetails:
                  $ref: '#/components/schemas/subscriptionPricePlanOptionFilterableDetails'
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/subscriptionPricePlanOptionItem'
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
          example:
            return:
              pricePlanDetails:
                identifier: "100009"
              items:
                - identifier: "1"
                  optionType: "0"
                  optionState: "0"
                  provisioningState: "2"
                  startDate: "2024-02-20-06:00"
                  endDate: "2024-02-20-06:00"
                  recurrence:
                    period: "1"
                  adjustmentTypeID: "50002"
                  fee: "1000"
                  prorationEnabled: "true"
                  parameters:
                    - name: "NextRecurringChargeDate"
                      value: "2024-03-01-06:00"
                    - name: "PricePlanPreferenceType"
                      value: "2"
                    - name: "ServiceType"
                      value: "0"
                    - name: "ApplyMrcGroup"
                      value: "false"
                    - name: "IsPrimary"
                      value: "true"
                - identifier: "1"
                  optionType: "3"
                  optionState: "0"
                  provisioningState: "2"
                  startDate: "2024-02-20-06:00"
                  endDate: "2044-02-20-06:00"
                  recurrence:
                    period: "1"
                  adjustmentTypeID: "50016"
                  fee: "0"
                  prorationEnabled: "true"
                  parameters:
                    - name: "PricePlanPreferenceType"
                      value: "1"
                    - name: "AuxiliaryServiceType"
                      value: "1"
                    - name: "NextRecurringChargeDate"
                      value: "2024-03-01-06:00"
                - identifier: "10"
                  optionType: "4"
                  optionState: "0"
                  provisioningState: "2"
                  startDate: "2024-02-20-06:00"
                  endDate: "2044-02-20-06:00"
                  recurrence:
                    period: "1"
                  adjustmentTypeID: "50033"
                  fee: "0"
                  prorationEnabled: "true"
                  parameters:
                    - name: "PricePlanPreferenceType"
                      value: "1"
                    - name: "BundleCategoryID"
                      value: "1839"
                    - name: "BundleType"
                      value: "0"
                    - name: "InitialBalanceLimit"
                      value: "6000"
                    - name: "BalanceUnitType"
                      value: "0"
                    - name: "ExpiryDate"
                      value: "2044-02-22-06:00"
                    - name: "NextRecurringChargeDate"
                      value: "2024-03-01-06:00"
                    - name: "Repurchaseable"
                      value: "false"
                    - name: "ExpiryScheme"
                      value: "0"
                    - name: "ApplyMrcGroup"
                      value: "false"
              parameters:
                - name: "MRCAmount"
                  value: "1000"
                - name: "DiscountAmount"
                  value: "0"

    subscriptionPricePlanOptionsFilterableAllFiltersFalse:
      type: object
      properties:
         getSubscriptionPricePlanOptionsFilterableResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                pricePlanDetails:
                  $ref: '#/components/schemas/subscriptionPricePlanOptionFilterableDetails'
          example:
            return:
              pricePlanDetails:
                identifier: "100009"

    subscriptionPricePlanOptionsFilterableGetDiscountAndAmountTrue:
      type: object
      properties:
         getSubscriptionPricePlanOptionsFilterableResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                pricePlanDetails:
                  $ref: '#/components/schemas/subscriptionPricePlanOptionFilterableDetails'
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
          example:
              return:
                pricePlanDetails:
                  identifier: "100009"
                parameters:
                  - name: "MRCAmount"
                    value: "1000"
                  - name: "DiscountAmount"
                    value: "0"

    subscriptionPricePlanOptionsFilterableGetOptionsTrue:
      type: object
      properties:
         getSubscriptionPricePlanOptionsFilterableResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                pricePlanDetails:
                  $ref: '#/components/schemas/subscriptionPricePlanOptionFilterableDetails'
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/subscriptionPricePlanOptionItem'
          example:
            return:
              pricePlanDetails:
                identifier: "100009"
              items:
                - identifier: "1"
                  optionType: "0"
                  parameters:
                    - name: "ServiceType"
                      value: "0"
                    - name: "ApplyMrcGroup"
                      value: "false"
                - identifier: "1"
                  optionType: "3"
                - identifier: "10"
                  optionType: "4"
                  parameters:
                    name: "ApplyMrcGroup"
                    value: "false"

    subscriptionPricePlanOptionsFilterableGetPlanPeriodTrue:
      type: object
      properties:
         getSubscriptionPricePlanOptionsFilterableResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                pricePlanDetails:
                  $ref: '#/components/schemas/subscriptionPricePlanOptionFilterableDetails'
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/subscriptionPricePlanOptionItem'
          example:
            return:
              pricePlanDetails:
                identifier: "100009"
              items:
                identifier: "1"
                optionType: "0"
                recurrence:
                  period: "1"

    subscriptionPricePlanOptionsFilterableGetDiscountAndAmountAndGetOptionsTrue:
      type: object
      properties:
         getSubscriptionPricePlanOptionsFilterableResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                pricePlanDetails:
                  $ref: '#/components/schemas/subscriptionPricePlanOptionFilterableDetails'
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/subscriptionPricePlanOptionItem'
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
          example:
            return:
              pricePlanDetails:
                identifier: "100009"
              items:
                - identifier: "1"
                  optionType: "0"
                  parameters:
                    - name: "ServiceType"
                      value: "0"
                    - name: "ApplyMrcGroup"
                      value: "false"
                - identifier: "1"
                  optionType: "3"
                - identifier: "10"
                  optionType: "4"
                  parameters:
                    name: "ApplyMrcGroup"
                    value: "false"
              parameters:
                - name: "MRCAmount"
                  value: "1000"
                - name: "DiscountAmount"
                  value: "0"

    subscriptionPricePlanOptionsFilterableGetDiscountAndAmountAndGetPlanPeriodTrue:
      type: object
      properties:
         getSubscriptionPricePlanOptionsFilterableResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                pricePlanDetails:
                  $ref: '#/components/schemas/subscriptionPricePlanOptionFilterableDetails'
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/subscriptionPricePlanOptionItem'
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
          example:
            return:
              pricePlanDetails:
                identifier: "100009"
              items:
                identifier: "1"
                optionType: "0"
                recurrence:
                  period: "1"
              parameters:
                - name: "MRCAmount"
                  value: "1000"
                - name: "DiscountAmount"
                  value: "0"

    getAccountCugResponse:
      type: object
      properties:
         getAccountCugResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                cugDetails:
                  type: array
                  items:
                    $ref: '#/components/schemas/cugDetails'
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
          example:
            getAccountCugResponse:
              return:
                cugDetails:
                  - cugId: 1
                    cugOwnerMsisdn: '987987987'
                    cugTemplateName: cug_Template
                    isShortCodeEnabled: 'true'
                    shortCodePattern: shortcodePattern
                    cugState: '1'
                    cugMember:
                      - msisdn: '987987989'
                        shortCode: '23'
                        parameters:
                          - name: parameter1
                            value: value1
                      - msisdn: '987987987'
                        shortCode: '24'
                        parameters:
                          - name: parameter2
                            value: value2
                    parameters:
                      - name: parameter3
                        value: value3
                parameters:
                  - name: parameter4
                    value: value4




    subscriptionPricePlanOptionsFilterableGetOptionsAndGetPlanPeriodTrue:
      type: object
      properties:
         getSubscriptionPricePlanOptionsFilterableResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                pricePlanDetails:
                  $ref: '#/components/schemas/subscriptionPricePlanOptionFilterableDetails'
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/subscriptionPricePlanOptionItem'
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
          example:
            return:
              pricePlanDetails:
                identifier: "100009"
              items:
                - identifier: "1"
                  optionType: "0"
                  recurrence:
                    period: "1"
                  parameters:
                    - name: "ServiceType"
                      value: "0"
                    - name: "ApplyMrcGroup"
                      value: "false"
                - identifier: "1"
                  optionType: "3"
                  recurrence:
                    period: "1"
                - identifier: "10"
                  optionType: "4"
                  recurrence:
                    period: "1"
                  parameters:
                    name: "ApplyMrcGroup"
                    value: "false"

    subscriptionPricePlanOptionFilterableDetails:
      type: object
      properties:
        identifier:
          type: string
          description: Identifier of the price plan

    subscriptionPricePlanOptionItem:
      type: object
      properties:
        identifier:
          type: string
          description: Identifier
        optionType:
           $ref: '#/components/schemas/PricePlanOptionTypeEnumeration'
        optionState:
          type: string
          description: Option state
        name:
          type: string
          description: Name of the option
        provisioningState:
          $ref: '#/components/schemas/ProvisioningStateTypeEnumeration'
        startDate:
          type: string
          description: The date on which the option should start if dated in the future; otherwise the date on which the option started
        endDate:
          type: string
          description: The date on which the option should end if dated in the future; otherwise the date on which the option ended
        numberOfPayments:
          type: string
          description: Number of payments
        recurrence:
          type: array
          description: Describes whether or not the option recurs, and if so then how frequently
          items:
            $ref: '#/components/schemas/recurrence'
        adjustmentTypeID:
          type: string
          description: Identifier of the adjustment type
        fee:
          type: string
          description: The fee charged for the option
        prorationEnabled:
          type: string
          description: Indicates whether or not the option has been configured to prorate the initial fee based on when the service was provisioned relative to the beginning of the billing period
        parameters:
          $ref: '#/components/schemas/ResponseParameters'

    cugDetails:
      type: object
      properties:
        cugId:
          type: integer
          description: Closed user group id
        cugOwnerMsisdn:
          type: string
          description: Closed user group owner msisdn
        cugTemplateName:
          type: string
          description: Name of the closed user group template
        isShortCodeEnabled:
          type: boolean
          description: shortcode flag
        shortCodePattern:
          type: string
          description: Pattern of a shortcode
        cugState:
            $ref: '#/components/schemas/CugStateEnumeration'
        cugMember:
          type: array
          description: Closed user group members list
          items:
            $ref: '#/components/schemas/cugMember'
        parameters:
          $ref: '#/components/schemas/ResponseParameters'

    cugMember:
      type: object
      properties:
        msisdn:
          type: string
          description: CUG member Mobile Station International Subscriber Directory Number
        shortCode:
          type: string
          description: CUG member shortcode
        parameters:
          $ref: '#/components/schemas/ResponseParameters'


    recurrence:
      type: object
      properties:
        recurrenceType:
          $ref: '#/components/schemas/RecurrenceTypeEnum'
        startDate:
          type: string
          description: Indicates the start of a one-time, fixed date range option.
        endDate:
          type: string
          description: Indicates the end of a one-time, fixed date range option
        period:
          type: string
          description: Indicates the period, in the unit described by periodUnitType, of the duration of the option
        periodUnitType:
          $ref: '#/components/schemas/PeriodUnitTypeEnum'

    RecurrenceTypeEnum:
      type: string
      enum: [RECURRING, ONE_TIME]
      description: >
        The recurrenceType is either of the following values:
         - `RECURRING` - Recurring
         - `ONE_TIME` - One-time

    PeriodUnitTypeEnum:
      type: string
      enum: [MONTHLY, WEEKLY, DAILY]
      description: >
        The periodUnitType is one of the following values:
         - `MONTHLY` - Monthly
         - `WEEKLY` - Weekly
         - `DAILY` - Daily

    createAccountTransactionResponse:
      type: object
      properties:
        createAccountTransactionResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                csrInput:
                  type: string
                  description: General CSR input field
                subscriptionType:
                  type: string
                  description: Subscription type
                accountID:
                  type: string
                  description: Identifier of the account
                adjustmentTypeID:
                  type: string
                  description: Identifier of the adjustment type
                agent:
                  type: string
                  description: Agent
                amount:
                  type: string
                  description: The monetary amount of this transaction
                balance:
                  type: string
                  description: The balance of the subscriber after the transaction was applied. This value is only available for certain transactions
                identifier:
                  type: string
                  description: A unique ID assigned to the transaction when it was created
                receiveDate:
                  type: string
                  description: The date when the payment is received by the system
                transactionDate:
                  type: string
                  description: Transaction date
                receiptNumber:
                  type: string
                  description: Receipt number
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
          example:
            return:
              {
                csrInput: '1',
                subscriptionType: 'test',
                accountID: '17',
                adjustmentTypeID: '0',
                agent: '10',
                amount: '2'
              }

    BatchResultTypeEnum:
      type: integer
      enum: [0, 1, 2]
      description: >
        An indication of the overall result of the batch:
         - `0` - SUCCESS - Indicates that the batch was completely processed, and that all vouchers were redeemed successfully
         - `1` - OVERALL_FAILURE - Indicates that none of the vouchers were successfully redeemed
         - `2` - PARTIAL_SUCCESS - Indicates some, but not all, of the vouchers were successfully redeeme

    updateSubscriptionRechargeVoucherBatchResponse:
      type: object
      required:
      - subscriptionRef
      - voucher
      properties:
        updateSubscriptionRechargeVoucherBatchResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                overallResult:
                  $ref: '#/components/schemas/BatchResultTypeEnum'
                numberOfRequests:
                  type: string
                  description: Number of requests
                numberOfSuccesses:
                  type: string
                  description: Number of successes
                orders:
                  $ref: '#/components/schemas/Order'
      example:
        updateSubscriptionRechargeVoucherBatchResponse:
          return:
            overallResult: "0"
            numberOfRequests: "2"
            numberOfSuccesses: "2"
            orders:
            - orderResult: "0"
              subscriptionRef:
                accountID: "1372"
                identifier: "1372-1"
                mobileNumber: "977728282882"
                mobileNumberOwnership: "2024-02-20T00:04:50.192-06:00"
                spid: "1"
                subscriptionType: "10001"
                state: "1"
              voucher: "9177853260560188"
              exception: ""
            - orderResult: "0"
              subscriptionRef:
                accountID: "1373"
                identifier: "1373-1"
                mobileNumber: "9898989191"
                mobileNumberOwnership: "2024-02-20T07:14:30.181-06:00"
                spid: "1"
                subscriptionType: "10001"
                state: "1"
              voucher: "5895406140109259"
              exception: ""

    addClosedUserGroupEntries:
      type: object
      required:
      - groupID
      properties:
        groupID:
          type: integer
          description: Closed user group identifier
        mobileNumbers:
          type: array
          description: Phone numbers of subscribers to be added to the CUG.
          items:
            type: string
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        groupID: 5
        mobileNumbers:
        - '8383939300'
        - '7283939560'

    updateDiscountClassInner:
      type: object
      required:
        - discountClass
      properties:
        discountClass:
          $ref: '#/components/schemas/DiscountClass'
        parameters:
            $ref: '#/components/schemas/RequestParameters'
      example:
        discountClass:
          identifier: 1
          spid: 1
          name: '1-AUTO_DISCOUNT'
          useThreshold: false
          thresholdAmount: 100
          discountPercentage: 0.0
          adjustmentTypeID: 50000
          parameters:
          - name: 'test'
            value: 'test'
        parameters:
        - name: 'test'
          value: 'test'

    listClosedUserGroupEntriesResponse:
      type: object
      properties:
        listClosedUserGroupEntriesResponse:
          properties:
            return:
              type: array
              items:
                type: string
      example:
        listClosedUserGroupEntriesResponse:
           return:
           - '762733151112'
           - '862733151112'

    DiscountClass:
      type: object
      properties:
        identifier:
          type: integer
          description: A unique identifier for the discount class
        spid:
          type: integer
          description: Service Provider Identifier
        name:
          type: string
          description: A name for display purposes
        useThreshold:
          type: boolean
          description: True if the discount should only be applied when the discountable amount on the invoice exceeds this discount class's threshold amount; false if the discount should always be awarded regardless of invoice amounts.
        thresholdAmount:
          type: integer
          description: The minimum discountable amount on the invoice required before a discount will be applied when thresholding is enabled.
        discountPercentage:
          type: number
          description:  The percentage of amount on the invoice awarded to the account
        adjustmentTypeID:
          type: integer
          description: Identifier of the adjustment type
        parameters:
          $ref: '#/components/schemas/RequestParameters'

    updateDiscountClassResponse:
      type: object
      properties:
        return:
          type: object
          required:
          - discountClass
          properties:
            discountClass:
              type: object
              properties:
                identifier:
                  type: string
                  description: A unique identifier for the discount class
                spid:
                  type: string
                  description: Service Provider Identifier
                name:
                  type: string
                  description: Name
                useThreshold:
                  type: string
                  description: True if the discount should only be applied when the discountable amount on the invoice exceeds this discount class's threshold amount; false if the discount should always be awarded regardless of invoice amounts
                thresholdAmount:
                  type: string
                  description: The minimum discountable amount on the invoice required before a discount will be applied when thresholding is enabled
                discountPercentage:
                  type: string
                  description:   The percentage of amount on the invoice awarded to the accoun
                adjustmentTypeID:
                  type: string
                  description: Identifier of the adjustment type
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
            parameters:
              $ref: '#/components/schemas/ResponseParameters'
      example:
        updateDiscountClassResponse:
          return:
            discountClass:
              identifier: '1'
              spid: '1'
              name: '1-AUTO_DISCOUNT'
              useThreshold: 'false'
              thresholdAmount: '100'
              discountPercentage: '0.0'
              adjustmentTypeID: '50000'
              parameters:
              - name: 'test'
                value: 'test'
            parameters:
              - name: 'test'

    SubscriptionBucketHistoryResponseObject:
      type: object
      properties:
        identifier:
          type: string
          description: Bucket history identifier
        date:
          type: string
          description: Bucket history date
        spid:
          type: string
          description: Service provider identifier
        accountID:
          type: string
          description: Bucket history account identifier
        subscriptionID:
          type: string
          description: Bucket history subscription identifier
        bundleID:
          type: string
          description: Bucket history bundle identifier
        bundleCategoryID:
          type: string
          description: Bucket history bundle category identifier
        operation:
          type: string
          description: Bucket history operation
        amount:
          type: string
          description: Bucket history amount
        balance:
          type: string
          description: Bucket history balance
        unitType:
          type: string
          description: Bucket history unit type
        expiryTime:
          type: string
          description: Bucket history expiry time
        reference:
          type: string
          description: Bucket history reference
        parameters:
          $ref: '#/components/schemas/ResponseParameters'
        bucketID:
          type: string
          description: Bucket identifier
        expiryExtension:
          type: string
          description: Bucket history expiry extension
        adjustmentType:
          type: string
          description: Bucket history adjustment type

    listDetailedSubscriptionBucketHistory:
      type: object
      required:
      - subscriptionRef
      - limit
      properties:
        subscriptionRef:
          $ref: '#/components/schemas/subscriptionReference'
        start:
          type: string
          description: Start of subscription
        end:
          type: string
          description: End of subscription
        category:
          type: integer
          description: Subscription category
        pageKey:
          type: string
          description: Subscription page key
        limit:
          type: integer
          description: Subscription limit
        isAscending:
          type: boolean
          description: Subscription bucket history order
      example:
        listDetailedSubscriptionBucketHistory:
          subscriptionRef:
            accountID: '1104'
            identifier: '1104-1'
            mobileNumber: '1703101415251'

    listDetailedSubscriptionBucketHistoryResponse:
      type: object
      properties:
        listDetailedSubscriptionBucketHistoryResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                pageKey:
                  type: string
                  description: Page key
                references:
                  type: array
                  items:
                    $ref: '#/components/schemas/SubscriptionBucketHistoryResponseObject'
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
          example:
            return:
              references:
              - identifier: '1'
                spid: '1'
                accountID: '1104'
                subscriptionID: '1104-1'
                bundleID: '1'
                bundleCategoryID: '0'
                operation: '1'
                amount: '0'
                balance: '0'
                unitType: '0'
                bucketID: '1'
                expiryExtension: '0'
                adjustmentType: '0'
              - identifier: '2'
                spid: '1'
                accountID: '1104'
                subscriptionID: '1104-1'
                bundleID: '1'
                bundleCategoryID: '0'
                operation: '1'
                amount: '0'
                balance: '0'
                unitType: '0'
                bucketID: '1'
                expiryExtension: '0'
                adjustmentType: '0'

    getBucketHistoryResponse:
      type: object
      properties:
        getBucketHistoryResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                pageKey:
                  type: string
                  description: Page key
                references:
                  type: array
                  items:
                    $ref: '#/components/schemas/SubscriptionBucketHistoryResponseObject'
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
          example:
            return:
              references:
              - identifier: '1'
                spid: '1'
                accountID: '1104'
                subscriptionID: '1104-1'
                bundleID: '1'
                bundleCategoryID: '0'
                operation: '1'
                amount: '0'
                balance: '0'
                unitType: '0'
                bucketID: '1'
                expiryExtension: '0'
                adjustmentType: '0'
              - identifier: '2'
                spid: '1'
                accountID: '1104'
                subscriptionID: '1104-1'
                bundleID: '1'
                bundleCategoryID: '0'
                operation: '1'
                amount: '0'
                balance: '0'
                unitType: '0'
                bucketID: '1'
                expiryExtension: '0'
                adjustmentType: '0'

    listContractsResponse:
      type: object
      properties:
        listContractsResponse:
          type: object
          properties:
            return:
              type: array
              items:
                type: object
                properties:
                  fee:
                    type: string
                    description: Fee
                  identifier:
                    type: string
                    description: Identifier of the contract
                  name:
                    type: string
                    description: Name of the contract
                  spid:
                    type: string
                    description: Service Provider Identifier
                  state:
                    type: string
                    description: State
      example:
        listContractsResponse:
          return:
            - fee: '1000'
              identifier: '1'
              name: 'Test Contract'
              spid: '1'
              state: '0'
            - fee: '1000'
              identifier: '2'
              name: 'Test Contract'
              spid: '2'
              state: '0'

    getContractResponse:
      type: object
      properties:
        getContractResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                fee:
                  type: string
                  description: Fee
                identifier:
                  type: string
                  description: Identifier of the contract
                name:
                  type: string
                  description: Name of the contract
                spid:
                  type: string
                  description: Service Provider Identifier
                state:
                  type: string
                  description: State
                description:
                  type: string
                  description: Description
                duration:
                  type: string
                  description: Duration
                durationFrequency:
                  type: string
                  description: Duration frequency
      example:
        getContractResponse:
          return:
            fee: '1000'
            identifier: '1'
            name: 'Test Contract'
            spid: '1'
            state: '0'
            description: 'Test Contract'
            duration: '120'
            durationFrequency: '0'

    listPaymentPlansResponse:
      type: object
      properties:
        listPaymentPlansResponse:
          type: object
          properties:
            return:
              type: array
              items:
                type: object
                properties:
                  identifier:
                    type: string
                    description: Identifier of the payment plan
                  spid:
                    type: string
                    description: Service Provider Identifier
                  name:
                    type: string
                    description: Name of the payment plan
                  description:
                    type: string
                    description: Description
                  state:
                    type: string
                    description: State
      example:
        listPaymentPlansResponse:
          return:
            - identifier: '1'
              spid: '1'
              name: 'Payment Plan 1'
              description: '1'
              state: '0'
            - identifier: '2'
              spid: '1'
              name: 'Payment Plan 2'
              description: '2'
              state: '0'

    getPaymentPlanResponse:
      type: object
      properties:
        getPaymentPlanResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                identifier:
                  type: string
                  description: Identifier of the payment plan
                spid:
                  type: string
                  description: Service Provider Identifier
                name:
                  type: string
                  description: Name of the payment plan
                description:
                  type: string
                  description: Description
                state:
                  type: string
                  description: State
      example:
        getPaymentPlanResponse:
          return:
            identifier: '1'
            spid: '1'
            name: 'Payment Plan 1'
            description: '1'
            state: '0'

    BundleBalance:
      type: object
      properties:
        bundleCategoryId:
          type: string
          description: Identifier of the bundle category
        personalLimit:
          type: string
          description: Personal limit
        personalUsed:
          type: string
          description: Personal used
        personalBalance:
          type: string
          description: Personal balance
        rolloverLimit:
          type: string
          description: Rollover limit
        rolloverUsed:
          type: string
          description: Rollover used
        rolloverBalance:
          type: string
          description: Rollover balance
        groupLimit:
          type: string
          description: Group limit
        groupUsed:
          type: string
          description: Group used
        groupBalance:
          type: string
          description: Group balance

    getSubscriptionBundleBalancesWithSummaryResponse:
      type: object
      properties:
        getSubscriptionBundleBalancesWithSummaryResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                bundleBalances:
                  type: array
                  items:
                    type: object
                    properties:
                      msisdn:
                        type: string
                        description: Mobile Station International Subscriber Directory Number
                      bundleID:
                        type: string
                        description: Identifier of the bundle
                      spid:
                        type: string
                        description: Service Provider Identifier
                      bucketID:
                        type: string
                        description: Identifier of the bucket
                      balances:
                        type: array
                        items:
                          $ref: '#/components/schemas/BundleBalance'
                      unitType:
                        type: string
                        description: Unit type
                      expiryTime:
                        type: string
                        description: Expiry time
                      activationTime:
                        type: string
                        description: Activation time
                      provisionTime:
                        type: string
                        description: Provision time
                      status:
                        type: string
                        description: Status
                      bundleName:
                        type: string
                        description: Bundle name
                      isPromotional:
                        type: string
                        description: isPromotional flag
                categorySummaries:
                  type: array
                  items:
                    $ref: '#/components/schemas/BundleBalance'
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
      example:
        getSubscriptionBundleBalancesWithSummaryResponse:
          return:
            bundleBalances: [
              {
              msisdn: '987987987',
              bundleID: '1',
              spid: '1',
              bucketID: '1',
              balances: [{
                bundleCategoryId: '1',
                personalLimit: '2',
                personalUsed: 'test',
                personalBalance: 'test',
                rolloverLimit: 'test',
                rolloverUsed: 'test',
                rolloverBalance: 'test',
                groupLimit: 'test',
                groupUsed: '1',
                groupBalance: '1'
              }],
              unitType: '1',
              expiryTime: 'test',
              activationTime: 'test',
              provisionTime: 'test',
              status: 'test',
              bundleName: 'test',
              isPromotional: 'true'
              }
              ]
            categorySummaries: [
              {
              bundleCategoryId: '1',
              personalLimit: '100',
              personalUsed: 'test',
              personalBalance: '100',
              rolloverLimit: 'test',
              rolloverUsed: 'test',
              rolloverBalance: '100',
              groupLimit: '1',
              groupUsed: '1',
              groupBalance: '10'
              }
            ]

    updateAccountParentV2Response:
      type: object
      properties:
        updateAccountParentV2Response:
          type: object
          properties:
            return:
              type: object
              required:
                - statusCode
                - statusMessage
              properties:
                statusCode:
                  type: string
                  description: Status code
                statusMessage:
                  type: string
                  description: Status message
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'


    removeSupplementaryDataResponse:
      type: object
      properties:
        removeSupplementaryDataResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                parameters:
                  type: array
                  items:
                    $ref: '#/components/schemas/ResponseParameters'
          example:
            return:
              data:
                - name: 'test'
                  value: 'test'
                - name: 'test2'
                  value: 'test2'
              parameters:
                - name: 'test'
                  value: 'test'
                - name: 'test2'
                  value: 'test2'

    listDiscountClassesResponse:
      type: object
      properties:
        listDiscountClassesResponse:
          type: object
          properties:
            return:
              type: array
              items:
                type: object
                properties:
                  identifier:
                    type: string
                    description: Identifier of the discount class
                  spid:
                    type: string
                    description: Service Provider Identifier
                  name:
                    type: string
                    description: Name of the discount class
          example:
            return:
              - identifier: '1'
                spid: '1'
                name: '1-AUTO_DISCOUNT'

    listUsageTypesResponse:
      type: object
      properties:
        listUsageTypesResponse:
          type: object
          properties:
            return:
              type: array
              items:
                type: object
                properties:
                  description:
                    type: string
                    description: Description of the usage type
                  identifier:
                    type: string
                    description: Identifier of the usage type
                  state:
                    $ref: '#/components/schemas/UsageTypeState'
                  vpn:
                    type: string
                    description: VPN
          example:
            return:
            - description: 'default'
              identifier: '1'
              state: '0'
              vpn: 'false'

    UsageTypeState:
      type: integer
      enum: [0, 1]
      description: >
        The UsageTypeState is one of the following values:
         - `0` - Active
         - `1` - Deprecated

    getUsageTypeResponse:
      type: object
      properties:
        getUsageTypeResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                description:
                  type: string
                  description: Description of the usage type
                identifier:
                  type: string
                  description: Identifier of the usage type
                state:
                  $ref: '#/components/schemas/UsageTypeState'
                vpn:
                  type: string
                  description: VPN
                invoiceDetailedDescription:
                  type: string
                  description: Invoice detailed description
                invoiceSummaryDescription:
                  type: string
                  description: Invoice summary description
          example:
            return:
              description: 'default'
              identifier: '1'
              state: '0'
              vpn: 'false'
              invoiceDetailedDescription: 'default'
              invoiceSummaryDescription: 'default'

    getDisputeResponse:
      type: object
      properties:
        getDisputeResponse:
          type: object
          properties:
            return:
              $ref: '#/components/schemas/DisputeResponseObject'

      example:
        getDisputeResponse:
          return:
            disputeId: "1"
            contributorSubscriptionID: "1372-1"
            recipientSubscriptionID: "1373-1"
            disputeInitiator: "0"
            disputeState: "0"
            refundAmount: "0"
            blockedBalance: "0"
            blockBalanceFailed: "false"
            blockBalanceFailedReasonDescription: ""
            disputeFeeAppliedTo: "0"
            disputeFeeApplied: "false"
            transferDate: ""
            disputeCreateDate: ""

    listCallTypesResponse:
      type: object
      properties:
        listCallTypesResponse:
          type: object
          properties:
            return:
              $ref: '#/components/schemas/listCallTypesResult'
      example:
        listCallTypesResponse:
          return:
            - glCode: 'glcode01'
              identifier: '1'
              spid: '1'
            - glCode: 'glcode02'
              identifier: '2'
              spid: '2'

    listCallTypesResult:
      type: array
      items:
        type: object
        properties:
          glCode:
            type: string
            description: GL code
          identifier:
            type: string
            description: Identifier of the call type
          spid:
            type: string
            description: Service Provider Identifier

    getCallTypeResponse:
      type: object
      properties:
        getCallTypeResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                glCode:
                  type: string
                  description: GL code
                identifier:
                  type: string
                  description: Identifier of the call type
                spid:
                  type: string
                  description: Service Provider Identifier
                invoiceDescription:
                  type: string
                  description: Invoice description
      example:
        getCallTypeResponse:
          return:
            glCode: 'glcode01'
            identifier: '1'
            spid: '1'
            invoiceDescription: 'Mobile Originating Call'

    listGLCodesResponse:
      type: object
      properties:
        listGLCodesResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                pageKey:
                  type: string
                  description: Page key
                references:
                  $ref: '#/components/schemas/listGLCodesReferences'
      example:
        listGLCodesResponse:
          return: {
            pageKey: 'test',
            references: [
              {
                creditGLCode: 'test',
                debitGLCode: 'test',
                description: 'test'
              }
            ]
          }

    listGLCodesReferences:
      type: array
      items:
        type: object
        properties:
          creditGLCode:
            type: string
            description: Credit GL code
          debitGLCode:
            type: string
            description: Debit GL code
          description:
            type: string
            description: Description
          glAccountNumber:
            type: string
            description: GL account number
          glCode:
            type: string
            description: GL code
          glDepartmentID:
            type: string
            description: Identifier of GL department
          glProductCode:
            type: string
            description: GL product code
          spid:
            type: integer
            description: Service Provider Identifier
          state:
            type: string
            description: State

    listInvoiceDeliveryOptionsResponse:
      type: object
      properties:
        listInvoiceDeliveryOptionsResponse:
          type: object
          properties:
            return:
              type: array
              items:
                type: object
                required:
                - identifier
                - name
                - subfolderName
                - nonResponsibleDefault
                properties:
                  identifier:
                    type: string
                    description: Identifier
                  deliveryType:
                    type: array
                    description: List of delivery types
                    items:
                      type: string
                  name:
                    type: string
                    description: Name
                  subfolderName:
                    type: string
                    description: Subfolder name
          example:
            return:
            - identifier: '0'
              deliveryType: '1'
              name: 'Post'
              subfolderName: 'post'
              nonResponsibleDefault: 'false'
            - identifier: '1'
              deliveryType: '1'
              name: 'E-mail'
              subfolderName: 'not-post'
              nonResponsibleDefault: 'false'
            - identifier: '2'
              deliveryType:
              - '0'
              - '1'
              name: 'Post and E-mail'
              subfolderName: 'post'
              nonResponsibleDefault: 'false'

    getBlacklistStatusResponse:
      type: object
      properties:
        getBlacklistStatusResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                identifier:
                  type: string
                  description: Identifier
                identificationTypeID:
                  type: string
                  description: Identifier of the identification type
                identificationNumber:
                  type: string
                  description: Identification number
                listType:
                  type: string
                  description: List type
                note:
                  type: string
                  description: Note
          example:
            return:
              identifier: 'test'
              identificationTypeID: '2'
              identificationNumber: 'test'
              listType: '-1'
              note: 'test'

    listDetailedSubscriptionContractsResponse:
      type: object
      properties:
        listDetailedSubscriptionContractsResponse:
          type: object
          properties:
            return:
              type: array
              items:
                type: object
                required:
                - identifier
                - spid
                - name
                - period
                - paidType
                - subscriptionType
                - adjustmentTypeID
                - prepaymentAmount
                - prepaymentPeriod
                - defaultPricePlanID
                - defaultPostContractPricePlanID
                - prepaymentRefunded
                - bonusPeriod
                - maximumBonusAmount
                properties:
                  identifier:
                    type: string
                    description: Identifier of the contract
                  spid:
                    type: string
                    description: Service Provider Identifier
                  name:
                    type: string
                    description: Name of the contract
                  period:
                    type: string
                    description: Number of months in the contract term
                  paidType:
                    type: string
                    description: Prepaid or Postpaid
                  subscriptionType:
                    type: string
                    description: The type of subscription to which the contract may be bound
                  adjustmentTypeID:
                    type: string
                    description: Identifier of the adjustment type used for contract payment transactions
                  prepaymentAmount:
                    type: string
                    description: The total amount of required upfront for contract payment
                  prepaymentPeriod:
                    type: string
                    description: The number of months for which the Contract Payment applies
                  defaultPricePlanID:
                    type: string
                    description: Identifier of the default price plan
                  defaultPostContractPricePlanID:
                    type: string
                    description: Identifier of the default post contract price plan
                  policySummary:
                    type: string
                    description:   The text description summarizing the contract policy
                  prepaymentRefunded:
                    type: string
                    description: If true, then refund the remaining Contract Payment balance upon Contract removal before contract completion, otherwise do no refund any of the remaining Contract Payment balance.
                  perMonthPenaltyAmount:
                    type: string
                    description: The amount charged for the remainder of contract duration upon cancellation
                  minimumPenaltyAmount:
                    type: string
                    description: The minimum amount charged for a contract cancellation transaction
                  bonusPeriod:
                    type: string
                    description: Number of months in bonus period
                  maximumBonusAmount:
                    type: string
                    description: The maximum amount credited to the subscription each month in the Bonus Period (after the contract term is completed)
          example:
            return: [
              {
              identifier: '1',
              spid: '1',
              name: 'test',
              period: '10',
              paidType: '0',
              subscriptionType: '0',
              adjustmentTypeID: '2',
              prepaymentAmount: '10',
              prepaymentPeriod: '10',
              defaultPricePlanID: '1',
              defaultPostContractPricePlanID: '1',
              policySummary: 'test',
              prepaymentRefunded: 'test',
              perMonthPenaltyAmount: 'test',
              minimumPenaltyAmount: 'test',
              bonusPeriod: '10',
              maximumBonusAmount: '20'
              }]

    listSubscriptionContractsResponse:
      type: object
      properties:
        listSubscriptionContractsResponse:
          type: object
          properties:
            return:
              type: array
              items:
                type: object
                required:
                - identifier
                - spid
                - period
                - paidType
                - subscriptionType
                - adjustmentTypeID
                - prepaymentAmount
                - prepaymentPeriod
                properties:
                  identifier:
                    type: string
                    description: Identifier of the contract
                  spid:
                    type: string
                    description: Service Provider Identifier
                  name:
                    type: string
                    description: Name of the contract
                  period:
                    type: string
                    description: Number of months in the contract term
                  paidType:
                    type: string
                    description: Prepaid or Postpaid
                  subscriptionType:
                    type: string
                    description: The type of subscription to which the contract may be bound
                  adjustmentTypeID:
                    type: string
                    description: Identifier of the adjustment type used for contract payment transactions
                  prepaymentAmount:
                    type: string
                    description: The total amount of required upfront for contract payment
                  prepaymentPeriod:
                    type: string
                    description: The number of months for which the Contract Payment applies
          example:
            return: [
              {
              identifier: '1',
              spid: '1',
              name: 'test',
              period: '10',
              paidType: '0',
              subscriptionType: '0',
              adjustmentTypeID: '2',
              prepaymentAmount: '10',
              prepaymentPeriod: '10'
              }]


    convertIndividualToGroupResponse:
      type: object
      properties:
        convertIndividualToGroupResponse:
          type: object
          properties:
            return:
              type: object
              required:
              - statusCode
              - statusMessage
              properties:
                  statusCode:
                    type: string
                    description: Status code
                  statusMessage:
                    type: string
                    description: Status message
                  parameters:
                    $ref: '#/components/schemas/ResponseParameters'
          example:
            return:
              statusCode: '1000'
              statusMessage: 'Conversion Is Valid'
              parameters:
              - name: 'parameter1'
                value: 'value1'

    listCollectionAgenciesResponse:
      type: object
      properties:
        listCollectionAgenciesResponse:
          type: object
          properties:
            return:
              type: array
              items:
                type: object
                properties:
                  identifier:
                    type: string
                    description: Collection agency identifier
                  spid:
                    type: string
                    description: Service Provider Identifier
                  name:
                    type: string
                    description: Collection agency name
                  deprecated:
                    type: string
                    description: Is collection agency deprecated
          example:
            return:
            - identifier: '100000'
              spid: '1'
              name: 'Debit Agency'
              deprecated: 'false'
            - identifier: '100001'
              spid: '1'
              name: 'test'
              deprecated: 'false'

    listDetailedAccountTransactionsReference:
      type: array
      items:
        type: object
        properties:
          csrInput:
            type: string
            description: General CSR input field
          subscriptionType:
            type: string
            description: Subscription type
          accountID:
            type: string
            description: Identifier of the account
          adjustmentTypeID:
            type: string
            description: Identifier of the adjustment type
          agent:
            type: string
            description: Agent
          amount:
            type: string
            description: Amount
          balance:
            type: string
            description: Balance
          identifier:
            type: string
            description: Identifier
          receiveDate:
            type: string
            description: The date when the payment is received by the system
          transactionDate:
            type: string
            description: Transaction date
          receiptNumber:
            type: string
            description: Receipt number
          parameters:
            $ref: '#/components/schemas/ResponseParameters'
          externalTransactionNumber:
            type: string
            description: External transaction number
          glCode:
            type: string
            description: GL code
          locationCode:
            type: string
            description: Location code
          mobileNumber:
            type: string
            description: Mobile number
          paymentAgency:
            type: string
            description: Payment agency
          paymentDetails:
            type: string
            description: Payment details
          reasonCode:
            type: string
            description: Reason code
          supportedSubscriptionID:
            type: string
            description: Identifier of the supported subscription
          taxPaid:
            type: string
            description: Tax paid
          transactionMethodID:
            type: string
            description: Identifier of the transaction method

    listDetailedAccountExtensionsResponse:
      type: object
      properties:
        listDetailedAccountExtensionsResponse:
          type: object
          properties:
            return:
              type: array
              description: This array can contain a range of extension objects. See the example response for guidance
              items:
               minItems: 0
          example:
            return:
              - friendsAndFamily:
                 cugTemplate: '1'
                 cugOwnerMSISDN: ''
                 smsNotificationMSISDN: ''
              - subscriberLimit:
                 maxSubscribers: '2'
              - pool:
                 groupMobileNumber: '1112223334'
                 subscriptionPoolProperty:
                  subscriptionType: '1'
                  initialPoolBalance: '100'
                  provisioned: '1'
                 bundleIDs: '1'
                 poolLimit: '1112223334'
                 poolLimitStrategy: '1'
              - groupPricePlan:
                 prepaidPricePlanID: '1'
                 postpaidPricePlanID: '1'

    listDetailedAccountTransactionsResponse:
      type: object
      properties:
        listDetailedAccountTransactionsResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                pageKey:
                  type: string
                  description: Page key
                results:
                  $ref: '#/components/schemas/listDetailedAccountTransactionsReference'
          example:
            return:
              pageKey: '1423'
              results:
              - csrInput: 'string'
                subscriptionType: '10001'
                accountID: '17'
                adjustmentTypeID: '21000'
                agent: 'rkadm'
                amount: '-5000'
                balance: '15000'
                identifier: '600'
                receiveDate: '2023-09-27T00:32:56.916-05:00'
                transactionDate: '2023-09-27T00:32:56.824-05:00'
                receiptNumber: '1'
                parameters:
                - name: 'RNAdjustmentTypeID'
                  value: 'Initial Balance'
                - name: 'RNTransactionMethodID'
                  value: 'Cash'
                - name: 'ownerType'
                  value: '0'
                externalTransactionNumber: 'test'
                glCode: 'GL_1'
                locationCode: 'test'
                mobileNumber: '7731003103'
                paymentAgency: 'default'
                paymentDetails: 'test'
                reasonCode: '9223372036854775807'
                supportedSubscriptionID: 'test'
                taxPaid: '0'
                transactionMethodID: '1'
              - csrInput: 'string'
                subscriptionType: '10001'
                accountID: '17'
                adjustmentTypeID: '32601'
                agent: 'rkadm'
                amount: '0'
                balance: '0'
                identifier: '0'
                receiveDate: '2023-09-27T00:32:56.916-05:00'
                transactionDate: '2023-09-27T00:32:56.824-05:00'
                receiptNumber: '1'
                parameters:
                - name: 'RNAdjustmentTypeID'
                  value: 'CSR Adjustment (Credit)'
                - name: 'RNTransactionMethodID'
                  value: 'Cash'
                - name: 'ownerType'
                  value: '0'
                externalTransactionNumber: 'test'
                glCode: 'GL_1'
                locationCode: 'test'
                mobileNumber: '7731003103'
                paymentAgency: 'default'
                paymentDetails: 'test'
                reasonCode: '9223372036854775807'
                supportedSubscriptionID: 'test'
                taxPaid: '0'

    getAccountExtensionResponse:
      type: object
      properties:
        getAccountExtensionResponse:
          type: object
          required:
          - return
          properties:
            return:
              type: array
              items:
                type: object
                properties:
                  pool:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReadOnlyPoolAccountExtension'
                    description: This depends on the extension retrieved and so the object will differ. For a specific extension example refer to '#/components/schemas/ReadOnlyPoolAccountExtension'.
      example:
        getAccountExtensionResponse:
          return:
            - pool:
                - subscriptionPoolProperty:
                    subscriptionType: "10001"
                    initialPoolBalance: "100000"
                    provisioned: "2"
                  poolLimit: "0"
                  poolLimitStrategy: "0"
                  groupMobileNumber: "43901347396"

    ReadOnlyPoolAccountExtension:
      type: object
      properties:
        subscriptionPoolProperty:
          type: object
          properties:
            subscriptionType:
              type: string
              description: Subscription type
            initialPoolBalance:
              type: string
              description: Initial pool balance
            provisioned:
              type: string
              description: Provisioned
        poolLimit:
          type: string
          description: Pool limit
        poolLimitStrategy:
          type: string
          description: Pool limit strategy
        groupMobileNumber:
          type: string
          description: Group mobile number

    getSubscriptionDeviceTypeResponse:
      type: object
      properties:
        getSubscriptionDeviceTypeResponse:
          type: object
          properties:
            return:
              type: string
              description: Response device type value
          example:
            return: '0'

    getAccountBalanceResponse:
      type: object
      properties:
        getAccountBalanceResponse:
          type: object
          properties:
            return:
              type: string
              description: Account balance
          example:
            return: '0'

    getAccountBillCycleActivityResponse:
      type: object
      properties:
        getAccountBillCycleActivityResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                previousBillCycleID:
                  type: string
                  description: Previous Bill Cycle ID
                previousBillCycleChange:
                  type: string
                  description: Previous Bill Cycle change
                currentBillCycleID:
                  type: string
                  description: Current Bill Cycle ID
                earliestPermittedNewBillCycleChange:
                  type: string
                  description: Earliest permitted new Bill Cycle change
                scheduledBillCycleChange:
                  type: string
                  description: Scheduled Bill Cycle change
                scheduledBillCycleID:
                  type: string
                  description: Scheduled Bill Cycle ID
          example:
            return:
              previousBillCycleID: "1"
              previousBillCycleChange: "2024-02-20T06:53:26.898-06:00"
              currentBillCycleID: "9001"
              earliestPermittedNewBillCycleChange: "2024-03-22T00:00:00.000-06:00"

    SubscriptionProfileBillingResponse:
      type: object
      description: Billing object for subscription profile
      properties:
        billingLanguage:
          type: string
          description: Billing language
        billingOption:
          type: string
          description: Billing option
        category:
          type: string
          description: Subscription category
        chargeToPostpaid:
          type: string
          description: Charge to postpaid boolean
        discountClass:
          type: string
          description: Discount class
        maximumBalance:
          type: string
          description: Maximum balance
        maximumRecharge:
          type: string
          description: Maximum recharge
        postpaidSupport:
          type: string
          description: Postpaid support mobile number
        reactivationFee:
          type: string
          description: Reactivation fee
        creditLimit:
          type: string
          description: Credit limit
        deposit:
          type: string
          description: Deposit
        initialBalance:
          type: string
          description: Initial balance
        initialExpiryDateExtension:
          type: string
          description: Initial expiry date extension
        depositDate:
          type: string
          description: Deposit date
        nextDepositReleaseDate:
          type: string
          description: Next deposit release date

    SubscriptionProfileResponse:
      type: object
      description: Profile object for subscription profile
      required:
        - mobileNumber
        - subscriptionClass
        - subscriptionType
        - technologyType
      properties:
        poolLimit:
          type: string
          description: Pool limit
        poolLimitStrategy:
          type: string
          description: Pool limit strategy
        notificationPreference:
          $ref: '#/components/schemas/NotificationPreferenceEnum'
        accountID:
          type: string
          description: Identifier of the account for the subscription profile
        cardPackageID:
          type: string
          description: Identifier of the card package for the subscription profile
        hlrID:
          type: string
          description: Identifier of the hlr for the subscription profile
        identifier:
          type: string
          description: Identifier of the subscription profile
        mobileNumber:
          type: string
          description: Mobile number
        paidType:
          type: string
          description: Pool limit strategy
        spid:
          type: string
          description: Service Provider Identifier
        subscriptionClass:
          type: string
          description: Subscription class
        subscriptionType:
          type: string
          description: Subscription type
        technologyType:
          $ref: '#/components/schemas/TechnologyTypeEnumeration'
        additionalMobileNumbers:
          type: array
          items:
            type: object
            properties:
              auxiliaryServiceID:
                type: string
                description: Identifier of the auxiliary service
              mobileNumber:
                type: string
                description: Mobile number
        created:
          type: string
          description: Date created
        lastModified:
          type: string
          description: Last modified

    SubscriptionProfileRatingResponse:
      type: object
      description: Rating object for subscription profile
      properties:
        contractID:
          type: string
          description: Identifier of the contract
        contractStart:
          type: string
          description: Start date of the contract
        enabledAuxiliaryBundles:
          type: array
          description: List of enabled auxiliary bundles
          items:
            type: string
        enabledAuxiliaryServices:
          type: array
          description: List of enabled auxiliary services
          items:
            type: string
        enabledOptionalBundles:
          type: array
          description: List of enabled optional bundles
          items:
            type: string
        enabledOptionalPackages:
          type: array
          description: List of enabled optional packages
          items:
            type: string
        enabledOptionalServices:
          type: array
          description: List of enabled optional services
          items:
            type: string
        primaryPricePlanID:
          type: string
          description: Identifier of the primary price plan
        secondaryPricePlanID:
          type: string
          description: Identifier of the secondary price plan
        secondaryPricePlanStart:
          type: string
          description: Start date of the secondary price plan
        secondaryPricePlanEnd:
          type: string
          description: End date of the secondary price plan
        pricePlanVersion:
          type: string
          description: Price plan version

    SubscriptionProfileStatusResponse:
      type: object
      description: Status object subscription profile
      properties:
        state:
          $ref: '#/components/schemas/SubscriptionStateEnum'
        endDate:
          type: string
          description: End date
        expiryDate:
          type: string
          description: Expiry date
        startDate:
          type: string
          description: Start date

    getSubscriptionProfileResponse:
      type: object
      properties:
        getSubscriptionProfileResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                billing:
                  $ref: '#/components/schemas/SubscriptionProfileBillingResponse'
                profile:
                  $ref: '#/components/schemas/SubscriptionProfileResponse'
                rating:
                  $ref: '#/components/schemas/SubscriptionProfileRatingResponse'
                status:
                  $ref: '#/components/schemas/SubscriptionProfileStatusResponse'
      example:
        getSubscriptionProfileResponse:
          return:
            billing:
              billingLanguage: 'en'
              billingOption: '2'
              category: '0'
              chargeToPostpaid: 'false'
              discountClass: '0'
              maximumBalance: '0'
              maximumRecharge: '0'
              postpaidSupport: ''
              reactivationFee: '0'
              creditLimit: '0'
              deposit: '0'
              initialBalance: '0'
              depositDate: '2024-02-21T21:42:39.787-06:00'
              nextDepositReleaseDate: ''
            profile:
              poolLimit: '-1'
              poolLimitStrategy: '0'
              notificationPreference: '0'
              accountID: '140294'
              cardPackageID: '1343432328789'
              hlrID: '0'
              identifier: '140294-1'
              mobileNumber: '20094372670'
              paidType: '0'
              spid: '1'
              subscriptionClass: '1'
              subscriptionType: '10001'
              technologyType: '0'
              created: '2024-02-22T07:21:32.107-06:00'
              lastModified: '2024-03-04T06:29:32.613-06:00'
            rating:
              primaryPricePlanID: '100005'
              secondaryPricePlanEnd: '2044-02-22T00:00:00.000-06:00'
              secondaryPricePlanID: '-1'
              secondaryPricePlanStart: '2044-02-22T00:00:00.000-06:00'
              enabledAuxiliaryBundles: '148'
              enabledAuxiliaryServices: '1'
              enabledOptionalBundles: '30'
              pricePlanVersion: '3'
            status:
              state: '1'
              endDate: ''
              expiryDate: '1969-12-31T00:00:00.000-06:00'
              startDate: '2024-02-22T07:21:32.766-06:00'

    convertedSubscriptionRef:
      type: array
      items:
        type: object
        properties:
          accountID:
            type: string
            description: Account identifier (BAN).
          identifier:
            type: string
            description: Identifier
          mobileNumber:
            type: string
            description: Mobile number
          mobileNumberOwnership:
            type: string
            description: Mobile number ownership
          spid:
            type: string
            description: Service provider Identifier
          subscriptionType:
            type: string
            description: Subscription type
          state:
            type: string
            description: State
          parameters:
            $ref: '#/components/schemas/ResponseParameters'

    convertBillingTypeResponse:
      type: object
      properties:
        return:
          type: object
          required:
          - resultCode
          properties:
            resultCode:
              type: string
              description: Result code
            resultMessage:
              type: string
              description: Result message
            parameters:
              $ref: '#/components/schemas/ResponseParameters'
            convertedBan:
              type: string
              description: Converted ban
            convertedSubscriptionRef:
              $ref: '#/components/schemas/convertedSubscriptionRef'
      example:
        return:
          resultCode: '0'
          resultMessage: 'Success'
          parameters:
          - name: 'test'
            value: 'test'
          covertedBan: '1234'
          convertedSubscriptionRef:
          - accountID: '1234'
            identifier: '1234-1'
            mobileNumber: '789987789'
            mobileNumberOwnership: 'test'
            spid: '1'
            subscriptionType: '10001'
            state: '1'
            parameters:
            - name: 'test'
              value: 'test'

    bundleInfo:
      type: array
      items:
        type: object
        properties:
          bundleId:
            type: string
            description: Identifier of the bundle
          unitType:
            type: string
            description: Unit type
          chargedAmount:
            type: string
            description: Charged amount
          balance:
            type: string
            description: Balance
          bundleCategoryId:
            type: string
            description: Identifier od the bundle category
          bundleCategoryDesc:
            type: string
            description: Description of bundle category
          parameters:
            $ref: '#/components/schemas/ResponseParameters'

    detailedCallDetailsWithBundlesResult:
      type: object
      properties:
        accountID:
          type: string
          description: Identifier of the account
        balance:
          type: string
          description: Balance
        callType:
          type: string
          description: Call type
        charge:
          type: string
          description: Charge
        dataUsage:
          type: string
          description: Data usage
        destinationLocation:
          type: string
          description: Destination location
        destinationNumber:
          type: string
          description: Destination number
        duration:
          type: string
          description: Duration
        identifier:
          type: string
          description: Identifier
        mobileNumber:
          type: string
          description: Mobile number
        originatingLocation:
          type: string
          description: Originating location
        originatingNumber:
          type: string
          description: Originating number
        transactionDate:
          type: string
          description: Transaction date
        usageType:
          type: string
          description: Usage type
        parameters:
          $ref: '#/components/schemas/ResponseParameters'
        billingCategoryID:
          type: string
          description: Identifier of the billing category
        bucketRateID:
          type: string
          description: Identifier of the bucket rate
        flatRate:
          type: string
          description: Flat rate
        glCode:
          type: string
          description: GL code
        postedDate:
          type: string
          description: Posted date
        primaryTaxAuthorityID:
          type: string
          description: Identifier of the primary tax authority
        ratePlan:
          type: string
          description: Rate plan
        ratingRule:
          type: string
          description: Rating rule
        secondaryTaxAuthorityID:
          type: string
          description: Identifier of the secondary tax authority
        subscriberType:
          type: string
          description: Subscriber type
        usedBucketMinutes:
          type: string
          description: Used bucket minutes
        variableRate:
          type: string
          description: Variable rate
        variableRateUnits:
          type: string
          description: Variable rate units
        bundleInfo:
          $ref: '#/components/schemas/bundleInfo'

    listDetailedCallDetailsWithBundlesResponse:
      type: object
      properties:
        listDetailedCallDetailsWithBundlesResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                pageKey:
                  type: string
                  description: Page key
                results:
                  type: array
                  items:
                    $ref: '#/components/schemas/detailedCallDetailsWithBundlesResult'
          example:
            return:
              pageKey: '20'
              results: [
                {
                  accountID: '1697',
                  balance: '108146789',
                  callType: '2',
                  charge: '50000',
                  dataUsage: '100',
                  destinationLocation: 'CatchAll',
                  destinationNumber: '14100120072',
                  duration: '180000',
                  identifier: '20',
                  mobileNumber: '14100120072',
                  originatingLocation: 'All',
                  originatingNumber: '14100120072',
                  parameters: [
                    {
                      name: 'RNUsageType',
                      value: 'default'
                    },
                    {
                      name: 'RNBillingCategoryID',
                      value: 'DOMESTIC'
                    }
                  ],
                  transactionDate: '2023-09-25T05:07:57.000-05:00',
                  usageType: '1',
                  billingCategoryID: '0',
                  bucketRateID: '2',
                  flatRate: '0',
                  glCode: 'GL_1',
                  postedDate: '2023-09-25T05:07:57.000-05:00',
                  primaryTaxAuthorityID: '4',
                  ratePlan: '1',
                  ratingRule: '1',
                  secondaryTaxAuthorityID: '7',
                  subscriberType: '1',
                  usedBucketMinutes: '0',
                  variableRate: '5000000',
                  variableRateUnits: '3',
                  bundleInfo: [{
                    bundleId: '1',
                    unitType: 'test'
                  }]
                }
              ]

    createIndividualSubscriberResponse:
      type: object
      properties:
        createIndividualSubscriberResponse:
          description: Create individual subscriber response body
          type: object
          properties:
            return:
              description: Return object
              type: object
              properties:
                accountID:
                  description: Account identifier
                  type: string
                identifier:
                  description: Individual subscriber identifier
                  type: string
                mobileNumber:
                  description: Mobile number
                  type: string
                mobileNumberOwnership:
                  description: Mobile number ownership
                  type: string
                spid:
                  description: Service Provider identifier
                  type: string
                subscriptionType:
                  description: Subscription type
                  type: string
                state:
                  description: Subscriber state
                  type: string
                parameters:
                  $ref: '#/components/schemas/ResponseParameters'
              example:
                accountID: "1268"
                identifier: "1268-1"
                mobileNumber: "73453343334"
                mobileNumberOwnership: "2024-02-06T07:10:14.300-06:00"
                spid: "1"
                subscriptionType: "10001"
                state: "1"

    validateAndUpdateQueryResult:
      type: object
      required:
      - validationResultCode
      - balanceCheckResultCode
      - provisionResultCode
      description: Validate and update query result object
      properties:
        validationResultCode:
          type: string
          description: Validation result code
        balanceCheckResultCode:
          type: string
          description: Balance check result code
        provisionResultCode:
          type: string
          description: Provision result code
        validationErrorMessage:
          type: string
          description: Validation error message
        balance:
          type: string
          description: Balance

    PricePlanOptionUpdateResult:
      type: array
      description: List of price plan option update results
      items:
        type: object
        properties:
          updateType:
            type: string
            description: Update type
          identifier:
            type: string
            description: Identifier
          optionType:
             $ref: '#/components/schemas/PricePlanOptionTypeEnumeration'
          isSelected:
            type: boolean
            description: Is option selected
          startDate:
            type: string
            description: Price plan start date
          endDate:
            type: string
            description: Price plan end date
          appliedFee:
            type: string
            description: Applied fee
          provisioningState:
            $ref: '#/components/schemas/ProvisioningStateTypeEnumeration'
          parameters:
            $ref: '#/components/schemas/ResponseParametersInvididualValueTypes'

    validateAndUpdateOptionsResponse:
      type: object
      description: Validate and updated option object
      properties:
        validateAndUpdateQueryResult:
          $ref: '#/components/schemas/validateAndUpdateQueryResult'
        pricePlanOptionUpdateResult:
          $ref: '#/components/schemas/PricePlanOptionUpdateResult'
        optionsToProvision:
          $ref: '#/components/schemas/currentAndUpdatedOptionsResponse'
        parameter:
          $ref: '#/components/schemas/ResponseParametersInvididualValueTypes'
      example:
        optionsToProvision:
          - adjustmentTypeID: '2'
            endDate: 2044-03-11-06:00
            fee: '0'
            identifier: '0'
            isSelected: 'true'
            name: 2044-03-11-06:00
            numberOfPayments: '0'
            optionState: 2024-03-11-06:00
            optionType: '8'
            parameters:
              - booleanvalue: booleanvalue
                longvalue: longvalue
                name: name
                stringvalue: stringvalue
            prorationEnabled: '2'
            provisioningState: '2'
            startDate: 2024-03-11-06:00
            updateType: '0'
        pricePlanOptionUpdateResult:
          - appliedFee: '0'
            endDate: 2044-03-11-06:00
            identifier: '8'
            isSelected: 'true'
            optionType: '0'
            parameters:
              - booleanvalue: booleanvalue
                longvalue: longvalue
                name: name
                stringvalue: stringvalue
            provisioningState: '2'
            startDate: 2024-03-11-06:00
            updateType: '0'
        validateAndUpdateQueryResult:
          balanceCheckResultCode: '0'
          provisionResultCode: '0'
          validationErrorMessage: Success.
          validationResultCode: '0'

    listSubscriptionPersonalListPlanEntriesResponse:
      type: object
      properties:
        listSubscriptionPersonalListPlanEntriesResponse:
          type: object
          properties:
            return:
              type: array
              items:
                type: string
      example:
        listSubscriptionPersonalListPlanEntriesResponse:
          return:
            - "1"
            - "2"

    removeSubscriptionPersonalListPlanEntries:
      type: object
      required:
        - subscriptionRef
      properties:
        subscriptionRef:
          $ref: '#/components/schemas/subscriptionReference'
        listID:
          type: integer
          description: The subscription’s personal list plan ID. Required in case the subscriber has more than one Personal List Plan provisioned.
        mobileNumbers:
          type: array
          items:
            type: string
        parameters:
          $ref: '#/components/schemas/RequestParameters'
      example:
        removeSubscriptionPersonalListPlanEntries:
          subscriptionRef:
            accountID: '456'
            mobileNumber: '123456789'
            mobileNumberOwnership: '2'
            spid: 2
            subscriptionType: '2'
            state: '2'
            parameters:
            - name: parameter1
              value: value1
              valueType: string
            - name: parameter2
              value: value2
              valueType: string
          listID: 2
          mobileNumbers:
          - '123456789'
          - '234567890'
          parameters:
          - name: parameter1
            value: value1
            valueType: string
          - name: parameter2
            value: value2
            valueType: string

    DisputeResponseObject:
      type: object
      properties:
        disputeId:
          type: string
          description: Dispute identifier
        externalTransactionNumber:
          type: string
          description: External transaction number
        contributorSubscriptionID:
          type: string
          description: Contributor Subscription identifier
        recipientSubscriptionID:
          type: string
          description: Recipient Subscription identifier
        disputeInitiator:
          $ref: '#/components/schemas/DisputeInitiatorEnumeration'
        disputeState:
          $ref: '#/components/schemas/DisputeStateEnumeration'
        refundAmount:
          type: string
          description: Refund amount
        blockedBalance:
          type: string
          description: Blocked balance
        blockBalanceFailed:
          type: string
          description: Is block balance failed
        blockBalanceFailedReasonDescription:
          type: string
          description: Block balance failed reason description
        disputeFeeAppliedTo:
           $ref: '#/components/schemas/DisputeInitiatorEnumeration'
        disputeFeeApplied:
          type: string
          description: Is dispute fee applied
        transferDate:
          type: string
          description: Transfer date
        disputeCreateDate:
          type: string
          description: Dispute create date

    listAccountDisputesResponse:
      type: object
      properties:
        listAccountDisputesResponse:
          type: object
          properties:
            return:
              type: object
              properties:
                pageKey:
                  type: string
                  description: Page key
                references:
                  type: array
                  items:
                    $ref: '#/components/schemas/DisputeResponseObject'
      example:
        listAccountDisputesResponse:
          return:
            pageKey: "3"
            references:
            - disputeId: "2"
              contributorSubscriptionID: "1-1"
              recipientSubscriptionID: "2-1"
              disputeInitiator: "0"
              disputeState: "2"
              refundAmount: "0"
              blockedBalance: "0"
              blockBalanceFailed: "false"
              blockBalanceFailedReasonDescription: ''
              disputeFeeAppliedTo: "0"
              disputeFeeApplied: "false"
              transferDate: ''
              disputeCreateDate: ''
            - disputeId: "3"
              contributorSubscriptionID: "1-1"
              recipientSubscriptionID: "3-1"
              disputeInitiator: "1"
              disputeState: "2"
              refundAmount: "1000"
              blockedBalance: "0"
              blockBalanceFailed: "false"
              blockBalanceFailedReasonDescription: ''
              disputeFeeAppliedTo: "0"
              disputeFeeApplied: "false"
              transferDate: '2024-02-29T17:00:00.000-06:00'
              disputeCreateDate: ''

    listPPSMSupporteesResponse:
      type: object
      description: PPSM Supportee object
      properties:
        return:
          type: array
          description: List of subscriptions
          items:
            type: object
            properties:
              subscriptionRef:
                $ref: '#/components/schemas/SubscriptionRef'
              appliedChargingTemplate:
                type: string
                description: Applied charging template
              appliedScreeningTemplate:
                type: string
                description: Applied screening template
              supporterRef:
                $ref: '#/components/schemas/SubscriptionRef'
      example:
        return: [
          {
            subscriptionRef: {
              accountID: '1111',
              identifier: 1111-1
            },
            appliedChargingTemplate: '-1',
            appliedScreeningTemplate: '-1',
            supporterRef: {
              accountID: '1111',
              mobileNumber: '1703101647228'
            }
          }
        ]
        
    requestActivateMobile:
      type: object
      properties:
        requestId:
          type: string
          description: Request Id
        subscrType:
          type: string
          description: Subscriber Type
        identCard:
          type: string
          description: Identity Card
        msisdn:
          type: string
          description: Msisdn
        imsi:
          type: string
          description: Imsi
        requestDate: 
          type: string
          description: Request Date
        departmentId: 
              type: string
              description: Department Id
        equipmentId: 
              type: string
              description: Equipment Id
        transactionId: 
              type: string
              description: Transaction Id
      example:
        requestId: '1234'
        subscrType: '1'
        identCard: '2222'
        msisdn: '2024080202'
        imsi: '2024080202'
        requestDate: '2024-08-19T12:00:00'
        departmentId: '1'
        equipmentId: '1'
        transactionId: '1234'
    
  
    requestReverseActivation:
      type: object
      properties:
        requestId:
          type: string
          description: Request Id
        msisdn:
          type: string
          description: Msisdn
        imsi:
          type: string
          description: Imsi
        requestDate: 
          type: string
          description: Request Date
        departmentId: 
              type: string
              description: Department Id
        equipmentId: 
              type: string
              description: Equipment Id
        transactionId: 
              type: string
              description: Transaction Id
      example:
        requestId: '1234'
        msisdn: '2024080202'
        imsi: '2024080202'
        requestDate: '2024-08-19T12:00:00'
        departmentId: '1'
        equipmentId: '1'
        transactionId: '1234'
    
    
    requestRechargeMobile:
      type: object
      properties:
        requestId:
          type: string
          description: Request Id
        msisdn:
          type: string
          description: Msisdn
        partitionId:
          type: integer
          description: Partition Id
        amount: 
          type: number
          description: Amount
        eventId: 
              type: string
              description: Event Id
        requestDate: 
              type: string
              description: Request Date
        departmentId: 
              type: string
              description: Department Id
        equipmentId: 
              type: string
              description: Equipment Id
        transactionId: 
              type: string
              description: Transaction Id
      example:
        requestId: '1234'
        msisdn: '2024080202'
        partitionId: '1234'
        amount: '10'
        eventId: '1234'
        requestDate: '2024-08-19T12:00:00'
        departmentId: '1'
        equipmentId: '1'
        transactionId: '1'
    
    requestReverseRecharge:
      type: object
      properties:
        requestId:
          type: string
          description: Request Id
        msisdn:
          type: string
          description: Msisdn
        partitionId:
          type: integer
          description: Partition Id
        amount: 
          type: number
          description: Amount
        eventId: 
              type: string
              description: Event Id
        requestDate: 
              type: string
              description: Request Date
        departmentId: 
              type: string
              description: Department Id
        equipmentId: 
              type: string
              description: Equipment Id
        transactionId: 
              type: string
              description: Transaction Id
      example:
        requestId: '1234'
        msisdn: '2024080202'
        partitionId: '1234'
        amount: '10'
        eventId: '1234'
        requestDate: '2024-08-19T12:00:00'
        departmentId: '1'
        equipmentId: '1'
        transactionId: '1'
    
    activateMobileResponse:
      type: object
      properties:
        AuthorizationReturn:
          type: object
          properties:
            authNumber:
              type: string
              description: "Authorization number"
            statusInfo:
              type: object
              properties:
                errorCode:
                  type: string
                  description: "Error code"
                errorMessage:
                  type: string
                  description: "Error message"
      example:
        AuthorizationReturn:
          authNumber: "509859889840"
          statusInfo:
            errorCode: "0000"
            errorMessage: "Operation executed successfully"

    rechargeMobileResponse:
      type: object
      properties:
        AuthorizationReturn:
          type: object
          properties:
            authNumber:
              type: string
              description: "Authorization number"
            statusInfo:
              type: object
              properties:
                errorCode:
                  type: string
                  description: "Error code"
                errorMessage:
                  type: string
                  description: "Error message"
      example:
        AuthorizationReturn:
          authNumber: "509859889840"
          statusInfo:
            errorCode: "0000"
            errorMessage: "Recharge mobile successful"
    
    
    reverseActivationResponse:
      type: object
      properties:
        AuthorizationReturn:
          type: object
          properties:
            authNumber:
              type: string
              description: "Authorization number"
            statusInfo:
              type: object
              properties:
                errorCode:
                  type: string
                  description: "Error code"
                errorMessage:
                  type: string
                  description: "Error message"
      example:
        AuthorizationReturn:
          authNumber: "509859889840"
          statusInfo:
            errorCode: "0000"
            errorMessage: "Reverse activation successful"

    reverseRechargeResponse:
      type: object
      properties:
        AuthorizationReturn:
          type: object
          properties:
            authNumber:
              type: string
              description: "Authorization number"
            statusInfo:
              type: object
              properties:
                errorCode:
                  type: string
                  description: "Error code"
                errorMessage:
                  type: string
                  description: "Error message"
      example:
        AuthorizationReturn:
          authNumber: "509859889840"
          statusInfo:
            errorCode: "0000"
            errorMessage: "Reverse recharge successful"
